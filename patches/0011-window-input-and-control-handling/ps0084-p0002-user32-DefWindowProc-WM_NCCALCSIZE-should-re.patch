From: Dmitry Timoshkov <dmitry@baikal.ru>
Subject: [PATCH v3 2/2] user32: DefWindowProc(WM_NCCALCSIZE) should return 0.
Message-Id: <20220203202716.7394fc4993e764f07f2a90bb@baikal.ru>
Date: Thu, 3 Feb 2022 20:27:16 +0300

v3: As suggested by Alexandre changed NC_HandleNCCalcSize to not return a value.

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=37609
Signed-off-by: Dmitry Timoshkov <dmitry@baikal.ru>
---
 dlls/user32/controls.h  | 2 +-
 dlls/user32/defwnd.c    | 3 ++-
 dlls/user32/nonclient.c | 9 ++-------
 dlls/user32/tests/win.c | 6 ------
 4 files changed, 5 insertions(+), 15 deletions(-)

diff --git a/dlls/user32/controls.h b/dlls/user32/controls.h
index ce14d13171f..52584748768 100644
--- a/dlls/user32/controls.h
+++ b/dlls/user32/controls.h
@@ -168,7 +168,7 @@ extern void MENU_EndMenu(HWND) DECLSPEC_HIDDEN;
 /* nonclient area */
 extern LRESULT NC_HandleNCPaint( HWND hwnd , HRGN clip) DECLSPEC_HIDDEN;
 extern LRESULT NC_HandleNCActivate( HWND hwnd, WPARAM wParam, LPARAM lParam ) DECLSPEC_HIDDEN;
-extern LRESULT NC_HandleNCCalcSize( HWND hwnd, WPARAM wParam, RECT *winRect ) DECLSPEC_HIDDEN;
+extern void NC_HandleNCCalcSize( HWND hwnd, WPARAM wParam, RECT *winRect ) DECLSPEC_HIDDEN;
 extern LRESULT NC_HandleNCHitTest( HWND hwnd, POINT pt ) DECLSPEC_HIDDEN;
 extern LRESULT NC_HandleNCLButtonDown( HWND hwnd, WPARAM wParam, LPARAM lParam ) DECLSPEC_HIDDEN;
 extern LRESULT NC_HandleNCMouseMove( HWND hwnd, WPARAM wParam, LPARAM lParam ) DECLSPEC_HIDDEN;
diff --git a/dlls/user32/defwnd.c b/dlls/user32/defwnd.c
index abb73e73ca8..a8978c2d847 100644
--- a/dlls/user32/defwnd.c
+++ b/dlls/user32/defwnd.c
@@ -260,7 +260,8 @@ static LRESULT DEFWND_DefWinProc( HWND hwnd, UINT msg, WPARAM wParam, LPARAM lPa
         }
 
     case WM_NCCALCSIZE:
-        return NC_HandleNCCalcSize( hwnd, wParam, (RECT *)lParam );
+        NC_HandleNCCalcSize( hwnd, wParam, (RECT *)lParam );
+        break;
 
     case WM_WINDOWPOSCHANGING:
         return WINPOS_HandleWindowPosChanging( hwnd, (WINDOWPOS *)lParam );
diff --git a/dlls/user32/nonclient.c b/dlls/user32/nonclient.c
index 639cca707fb..f944ed568a4 100644
--- a/dlls/user32/nonclient.c
+++ b/dlls/user32/nonclient.c
@@ -346,19 +346,15 @@ BOOL WINAPI DECLSPEC_HOTPATCH AdjustWindowRectExForDpi( LPRECT rect, DWORD style
  *
  * Handle a WM_NCCALCSIZE message. Called from DefWindowProc().
  */
-LRESULT NC_HandleNCCalcSize( HWND hwnd, WPARAM wparam, RECT *winRect )
+void NC_HandleNCCalcSize( HWND hwnd, WPARAM wparam, RECT *winRect )
 {
     RECT tmpRect = { 0, 0, 0, 0 };
-    LRESULT result = 0;
     LONG cls_style = GetClassLongW(hwnd, GCL_STYLE);
     LONG style = GetWindowLongW( hwnd, GWL_STYLE );
     LONG exStyle = GetWindowLongW( hwnd, GWL_EXSTYLE );
 
     if (winRect == NULL)
-        return 0;
-
-    if (cls_style & CS_VREDRAW) result |= WVR_VREDRAW;
-    if (cls_style & CS_HREDRAW) result |= WVR_HREDRAW;
+        return;
 
     if (!(style & WS_MINIMIZE))
     {
@@ -413,7 +409,6 @@ LRESULT NC_HandleNCCalcSize( HWND hwnd, WPARAM wparam, RECT *winRect )
         winRect->right = winRect->left;
         winRect->bottom = winRect->top;
     }
-    return result;
 }
 
 
diff --git a/dlls/user32/tests/win.c b/dlls/user32/tests/win.c
index 346064f3cad..5a44a039211 100644
--- a/dlls/user32/tests/win.c
+++ b/dlls/user32/tests/win.c
@@ -1278,7 +1278,6 @@ static void test_nonclient_area(HWND hwnd)
 
     rc = rc_window;
     ret = DefWindowProcA(hwnd, WM_NCCALCSIZE, 0, (LPARAM)&rc);
-todo_wine_if(ret != 0)
     ok(!ret, "got %08lx\n", ret);
     MapWindowPoints(0, hwnd, (LPPOINT)&rc, 2);
     ok(EqualRect(&rc, &rc_client),
@@ -1297,7 +1296,6 @@ todo_wine_if(ret != 0)
 
     rc = rc_window;
     ret = DefWindowProcA(hwnd, WM_NCCALCSIZE, 0, (LPARAM)&rc);
-todo_wine_if(ret != 0)
     ok(!ret, "got %08lx\n", ret);
     MapWindowPoints(0, hwnd, (LPPOINT)&rc, 2);
     ok(EqualRect(&rc, &rc_client),
@@ -13515,25 +13513,21 @@ static void test_WM_NCCALCSIZE(void)
     params.lppos = &winpos;
 
     ret = SendMessageW(hwnd, WM_NCCALCSIZE, TRUE, (LPARAM)&params);
-todo_wine
     ok(!ret, "got %08lx\n", ret);
     ok(EqualRect(&params.rgrc[0], &client_rect), "got %s\n", wine_dbgstr_rect(&params.rgrc[0]));
 
     params.rgrc[0] = window_rect;
     ret = DefWindowProcA(hwnd, WM_NCCALCSIZE, TRUE, (LPARAM)&params);
-todo_wine
     ok(!ret, "got %08lx\n", ret);
     ok(EqualRect(&params.rgrc[0], &client_rect), "got %s\n", wine_dbgstr_rect(&params.rgrc[0]));
 
     GetWindowRect(hwnd, &window_rect);
     ret = SendMessageW(hwnd, WM_NCCALCSIZE, FALSE, (LPARAM)&window_rect);
-todo_wine
     ok(!ret, "got %08lx\n", ret);
     ok(EqualRect(&window_rect, &client_rect), "got %s\n", wine_dbgstr_rect(&window_rect));
 
     GetWindowRect(hwnd, &window_rect);
     ret = DefWindowProcA(hwnd, WM_NCCALCSIZE, FALSE, (LPARAM)&window_rect);
-todo_wine
     ok(!ret, "got %08lx\n", ret);
     ok(EqualRect(&window_rect, &client_rect), "got %s\n", wine_dbgstr_rect(&window_rect));
 

-- 
2.35.1

