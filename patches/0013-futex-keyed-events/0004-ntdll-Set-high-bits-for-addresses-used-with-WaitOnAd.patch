From 3e0484d6f5a120dc7b97848d58218cf910b6aa9b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 24 Dec 2020 16:09:16 +0100
Subject: [PATCH 4/7] ntdll: Set high bits for addresses used with
 WaitOnAddress.

As client_ptr_t is 64bit, negating it should make the addresses always
different from those than can be used with keyed events.
---
 dlls/ntdll/unix/sync.c | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

diff --git a/dlls/ntdll/unix/sync.c b/dlls/ntdll/unix/sync.c
index 16635ee42fa..118539ec965 100644
--- a/dlls/ntdll/unix/sync.c
+++ b/dlls/ntdll/unix/sync.c
@@ -2836,7 +2836,7 @@ NTSTATUS WINAPI RtlWaitOnAddress( const void *addr, const void *cmp, SIZE_T size
 
     select_op.keyed_event.op     = SELECT_KEYED_EVENT_WAIT;
     select_op.keyed_event.handle = wine_server_obj_handle( keyed_event );
-    select_op.keyed_event.key    = wine_server_client_ptr( addr );
+    select_op.keyed_event.key    = ~wine_server_client_ptr( addr );
 
     return server_select( &select_op, sizeof(select_op.keyed_event), SELECT_INTERRUPTIBLE,
                           abs_timeout, NULL, &addr_mutex, NULL );
@@ -2847,10 +2847,17 @@ NTSTATUS WINAPI RtlWaitOnAddress( const void *addr, const void *cmp, SIZE_T size
  */
 void WINAPI RtlWakeAddressAll( const void *addr )
 {
+    select_op_t select_op;
     if (fast_wake_addr( addr ) != STATUS_NOT_IMPLEMENTED) return;
 
     mutex_lock( &addr_mutex );
-    while (NtReleaseKeyedEvent( 0, addr, 0, &zero_timeout ) == STATUS_SUCCESS) {}
+    do
+    {
+        select_op.keyed_event.op     = SELECT_KEYED_EVENT_RELEASE;
+        select_op.keyed_event.handle = wine_server_obj_handle( keyed_event );
+        select_op.keyed_event.key    = ~wine_server_client_ptr( addr );
+    }
+    while (!server_wait( &select_op, sizeof(select_op.keyed_event), SELECT_INTERRUPTIBLE, &zero_timeout ));
     mutex_unlock( &addr_mutex );
 }
 
@@ -2859,9 +2866,13 @@ void WINAPI RtlWakeAddressAll( const void *addr )
  */
 void WINAPI RtlWakeAddressSingle( const void *addr )
 {
+    select_op_t select_op;
     if (fast_wake_addr( addr ) != STATUS_NOT_IMPLEMENTED) return;
 
     mutex_lock( &addr_mutex );
-    NtReleaseKeyedEvent( 0, addr, 0, &zero_timeout );
+    select_op.keyed_event.op     = SELECT_KEYED_EVENT_RELEASE;
+    select_op.keyed_event.handle = wine_server_obj_handle( keyed_event );
+    select_op.keyed_event.key    = ~wine_server_client_ptr( addr );
+    server_wait( &select_op, sizeof(select_op.keyed_event), SELECT_INTERRUPTIBLE, &zero_timeout );
     mutex_unlock( &addr_mutex );
 }
-- 
2.32.0

