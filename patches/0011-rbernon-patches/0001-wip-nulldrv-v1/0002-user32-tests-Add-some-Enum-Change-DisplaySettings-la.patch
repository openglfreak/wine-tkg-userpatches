From 215a874ec7c748cde91e367e87454ed4ecff2b15 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 24 Mar 2022 22:03:23 +0100
Subject: [PATCH 02/13] user32/tests: Add some (Enum|Change)DisplaySettings
 last error tests.

---
 dlls/user32/tests/monitor.c | 31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)

diff --git a/dlls/user32/tests/monitor.c b/dlls/user32/tests/monitor.c
index 11111111111..11111111111 100644
--- a/dlls/user32/tests/monitor.c
+++ b/dlls/user32/tests/monitor.c
@@ -226,6 +226,27 @@ static void test_EnumDisplayDevices(void)
     ok( broken( monitor_count == 0 ) || monitor_count > 0, "Expect at least one monitor found\n" );
 }
 
+static void test_EnumDisplaySettings(void)
+{
+    DISPLAY_DEVICEW adapter = {.cb = sizeof(DISPLAY_DEVICEW)};
+    DEVMODEW devmode = {.dmSize = sizeof(DEVMODEW)};
+    BOOL ret;
+
+    ret = EnumDisplayDevicesW( NULL, 0, &adapter, 0 );
+    ok( ret, "EnumDisplayDevicesW failed, error %lu\n", GetLastError() );
+
+    SetLastError( 0xdeadbeef );
+    ret = EnumDisplaySettingsExW( adapter.DeviceName, ENUM_REGISTRY_SETTINGS, &devmode, 0 );
+    ok( ret, "EnumDisplaySettingsExW failed, error %lu\n", GetLastError() );
+    todo_wine
+    ok( GetLastError() == 0xdeadbeef, "EnumDisplaySettingsExW set last error %lu\n", GetLastError() );
+
+    SetLastError( 0xdeadbeef );
+    ret = EnumDisplaySettingsExW( adapter.DeviceName, ENUM_CURRENT_SETTINGS, &devmode, 0 );
+    ok( ret, "EnumDisplaySettingsExW failed, error %lu\n", GetLastError() );
+    ok( GetLastError() == 0xdeadbeef, "EnumDisplaySettingsExW set last error %lu\n", GetLastError() );
+}
+
 struct vid_mode
 {
     DWORD w, h, bpp, freq, fields;
@@ -520,8 +541,11 @@ static void test_ChangeDisplaySettingsEx(void)
         dm.dmSize = sizeof(dm);
         dm.dmFields = DM_POSITION | DM_PELSWIDTH | DM_PELSHEIGHT;
         dm.dmPosition = devices[0].original_mode.dmPosition;
+        SetLastError(0xdeadbeef);
         res = ChangeDisplaySettingsExA(devices[0].name, &dm, NULL, CDS_UPDATEREGISTRY | CDS_NORESET, NULL);
         ok(res == DISP_CHANGE_SUCCESSFUL, "ChangeDisplaySettingsExA %s returned unexpected %ld\n", devices[0].name, res);
+        todo_wine
+        ok(GetLastError() == 0xdeadbeef, "ChangeDisplaySettingsExA set last error %lu\n", GetLastError());
         res = ChangeDisplaySettingsExA(NULL, NULL, NULL, 0, NULL);
         ok(res == DISP_CHANGE_SUCCESSFUL ||
                 broken(res == DISP_CHANGE_FAILED), /* win8 TestBot */
@@ -537,8 +561,11 @@ static void test_ChangeDisplaySettingsEx(void)
         ok(count == old_count, "Expect monitor count %d, got %d\n", old_count, count);
 
         /* Restore registry settings */
+        SetLastError(0xdeadbeef);
         res = ChangeDisplaySettingsExA(devices[0].name, &devices[0].original_mode, NULL,
                 CDS_UPDATEREGISTRY | CDS_NORESET, NULL);
+        todo_wine
+        ok(GetLastError() == 0xdeadbeef, "ChangeDisplaySettingsExA set last error %lu\n", GetLastError());
         ok(res == DISP_CHANGE_SUCCESSFUL ||
                 broken(res == DISP_CHANGE_BADPARAM) || /* win10 */
                 broken(res == DISP_CHANGE_FAILED), /* win8 TestBot */
@@ -558,8 +585,11 @@ static void test_ChangeDisplaySettingsEx(void)
         dm.dmSize = sizeof(dm);
         dm.dmFields = DM_POSITION;
         dm.dmPosition = devices[1].original_mode.dmPosition;
+        SetLastError(0xdeadbeef);
         res = ChangeDisplaySettingsExA(devices[1].name, &dm, NULL, CDS_UPDATEREGISTRY | CDS_NORESET, NULL);
         ok(res == DISP_CHANGE_SUCCESSFUL, "ChangeDisplaySettingsExA %s returned unexpected %ld\n", devices[1].name, res);
+        todo_wine
+        ok(GetLastError() == 0xdeadbeef, "ChangeDisplaySettingsExA set last error %lu\n", GetLastError());
         res = ChangeDisplaySettingsExA(devices[1].name, NULL, NULL, 0, NULL);
         ok(res == DISP_CHANGE_SUCCESSFUL, "ChangeDisplaySettingsExA %s returned unexpected %ld\n", devices[1].name, res);
 
@@ -2539,6 +2569,7 @@ START_TEST(monitor)
     }
 
     test_EnumDisplayDevices();
+    test_EnumDisplaySettings();
     test_ChangeDisplaySettingsEx();
     test_DisplayConfigSetDeviceInfo();
     test_EnumDisplayMonitors();
-- 
2.36.0

