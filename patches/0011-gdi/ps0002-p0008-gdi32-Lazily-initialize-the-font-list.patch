From a2cde919a94954b42af9b5fd2f587e605923c2c7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Sat, 7 Nov 2020 03:48:02 +0100
Subject: [PATCH 08/11] gdi32: Lazily initialize the font list.

---
 dlls/gdi32/font.c | 40 +++++++++++++++++++++++++++++++++++-----
 1 file changed, 35 insertions(+), 5 deletions(-)

diff --git a/dlls/gdi32/font.c b/dlls/gdi32/font.c
index 9fa0f45ec4b..d74bf83fe44 100644
--- a/dlls/gdi32/font.c
+++ b/dlls/gdi32/font.c
@@ -416,6 +416,9 @@ static CRITICAL_SECTION_DEBUG critsect_debug =
 };
 static CRITICAL_SECTION font_cs = { &critsect_debug, -1, 0, 0, 0, 0 };
 
+static RTL_RUN_ONCE font_list_init_once = RTL_RUN_ONCE_INIT;
+static DWORD WINAPI font_list_init( RTL_RUN_ONCE *once, void *param, void **context );
+
 #ifndef WINE_FONT_DIR
 #define WINE_FONT_DIR "fonts"
 #endif
@@ -2547,6 +2550,7 @@ static BOOL CDECL font_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
 {
     struct font_physdev *physdev;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return TRUE;
     if (!(physdev = HeapAlloc( GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*physdev) ))) return FALSE;
     push_dc_driver( dev, &physdev->dev, &font_driver );
@@ -2825,6 +2829,8 @@ static BOOL CDECL font_EnumFonts( PHYSDEV dev, LOGFONTW *lf, FONTENUMPROCW proc,
     struct enum_charset enum_charsets[32];
     DWORD count, charset;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
+
     charset = lf ? lf->lfCharSet : DEFAULT_CHARSET;
 
     count = create_enum_charset_list( charset, enum_charsets );
@@ -3706,6 +3712,7 @@ static HFONT CDECL font_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
     struct gdi_font *font = NULL, *prev = physdev->font;
     DC *dc = get_physdev_dc( dev );
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (hfont)
     {
         LOGFONTW lf;
@@ -6835,6 +6842,7 @@ BOOL WINAPI CreateScalableFontResourceW( DWORD hidden, LPCWSTR resource_file,
     TRACE("(%d, %s, %s, %s)\n", hidden, debugstr_w(resource_file),
           debugstr_w(font_file), debugstr_w(font_path) );
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return FALSE;
 
     if (!font_file) goto done;
@@ -7952,11 +7960,6 @@ void font_init(void)
 
     init_font_options();
     update_codepage();
-    if (__wine_init_unix_lib( gdi32_module, DLL_PROCESS_ATTACH, &callback_funcs, &font_funcs )) return;
-
-    load_system_bitmap_fonts();
-    load_file_system_fonts();
-    font_funcs->load_fonts();
 
     if (!(mutex = CreateMutexW( NULL, FALSE, L"__WINE_FONT_MUTEX__" ))) return;
     WaitForSingleObject( mutex, INFINITE );
@@ -7964,6 +7967,26 @@ void font_init(void)
     RegCreateKeyExW( wine_fonts_key, L"Cache", 0, NULL, REG_OPTION_VOLATILE,
                      KEY_ALL_ACCESS, NULL, &wine_fonts_cache_key, &disposition );
 
+    if (disposition == REG_CREATED_NEW_KEY)
+        RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, &disposition, NULL );
+
+    ReleaseMutex( mutex );
+}
+
+static DWORD WINAPI font_list_init( RTL_RUN_ONCE *once, void *param, void **context )
+{
+    DWORD disposition = param ? *(DWORD *)param : 0;
+    HANDLE mutex;
+
+    if (__wine_init_unix_lib( gdi32_module, DLL_PROCESS_ATTACH, &callback_funcs, &font_funcs )) return FALSE;
+
+    load_system_bitmap_fonts();
+    load_file_system_fonts();
+    font_funcs->load_fonts();
+
+    if (!(mutex = CreateMutexW( NULL, FALSE, L"__WINE_FONT_MUTEX__" ))) return FALSE;
+    WaitForSingleObject( mutex, INFINITE );
+
     if (disposition == REG_CREATED_NEW_KEY)
     {
         load_registry_fonts();
@@ -7984,6 +8007,8 @@ void font_init(void)
     load_system_links();
     dump_gdi_font_list();
     dump_gdi_font_subst();
+
+    return TRUE;
 }
 
 /***********************************************************************
@@ -7995,6 +8020,7 @@ INT WINAPI AddFontResourceExW( LPCWSTR str, DWORD flags, PVOID pdv )
     WCHAR *filename;
     BOOL hidden;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return 1;
     if (!(ret = add_font_resource( str, flags )))
     {
@@ -8046,6 +8072,7 @@ HANDLE WINAPI AddFontMemResourceEx( PVOID ptr, DWORD size, PVOID pdv, DWORD *pcF
     DWORD num_fonts;
     void *copy;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!ptr || !size || !pcFonts)
     {
         SetLastError(ERROR_INVALID_PARAMETER);
@@ -8118,6 +8145,7 @@ BOOL WINAPI RemoveFontResourceExW( LPCWSTR str, DWORD flags, PVOID pdv )
     WCHAR *filename;
     BOOL hidden;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return TRUE;
 
     if (!(ret = remove_font_resource( str, flags )))
@@ -8331,6 +8359,7 @@ BOOL WINAPI GetFontFileData( DWORD instance_id, DWORD unknown, UINT64 offset, vo
     DWORD tag = 0, size;
     BOOL ret = FALSE;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return FALSE;
     EnterCriticalSection( &font_cs );
     if ((font = get_font_from_handle( instance_id )))
@@ -8364,6 +8393,7 @@ BOOL WINAPI GetFontFileInfo( DWORD instance_id, DWORD unknown, struct font_filei
     struct gdi_font *font;
     BOOL ret = FALSE;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     EnterCriticalSection( &font_cs );
 
     if ((font = get_font_from_handle( instance_id )))
-- 
2.29.2

