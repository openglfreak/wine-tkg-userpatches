From 3889066478da1e60fef1678da80aa45ce9a03b5e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 20 May 2021 15:34:20 +0200
Subject: [PATCH 5/6] user32: Send WM_*FOCUS messages even if already
 focused.

---
 dlls/user32/focus.c     |  8 ++++----
 dlls/user32/tests/msg.c | 43 ++++++++++++++++++++---------------------
 2 files changed, 25 insertions(+), 26 deletions(-)

diff --git a/dlls/user32/focus.c b/dlls/user32/focus.c
index 11111111111..11111111111 100644
--- a/dlls/user32/focus.c
+++ b/dlls/user32/focus.c
@@ -40,7 +40,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(win);
  *
  * Change the focus window, sending the WM_SETFOCUS and WM_KILLFOCUS messages
  */
-static HWND set_focus_window( HWND hwnd )
+static HWND set_focus_window( HWND hwnd, BOOL force )
 {
     HWND previous = 0, ime_default;
     BOOL ret;
@@ -53,7 +53,7 @@ static HWND set_focus_window( HWND hwnd )
     }
     SERVER_END_REQ;
     if (!ret) return 0;
-    if (previous == hwnd) return previous;
+    if (!force && hwnd == previous) return previous;
 
     if (previous)
     {
@@ -195,7 +195,7 @@ static BOOL set_active_window( HWND hwnd, HWND *prev, BOOL mouse, BOOL focus )
         if (hwnd == info.hwndActive)
         {
             if (!info.hwndFocus || !hwnd || GetAncestor( info.hwndFocus, GA_ROOT ) != hwnd)
-                set_focus_window( hwnd );
+                set_focus_window( hwnd, FALSE );
         }
     }
 
@@ -342,7 +342,7 @@ HWND WINAPI SetFocus( HWND hwnd )
     }
 
     /* change focus and send messages */
-    return set_focus_window( hwnd );
+    return set_focus_window( hwnd, hwnd != previous );
 }
 
 
diff --git a/dlls/user32/tests/msg.c b/dlls/user32/tests/msg.c
index 11111111111..11111111111 100644
--- a/dlls/user32/tests/msg.c
+++ b/dlls/user32/tests/msg.c
@@ -14927,7 +14927,6 @@ struct test_set_foreground_window_desc
     BOOL call_set_active_window;
     BOOL call_set_focus;
 
-    BOOL todo_seq_before_set_foreground;
     const struct message *seq_before_set_foreground;
     const struct message *seq_after_set_foreground;
     BOOL todo_seq_after_peek_message;
@@ -15016,26 +15015,26 @@ static void test_interthread_set_foreground_window(struct test_set_foreground_wi
     };
     const struct test_set_foreground_window_desc test_sfw_tests[] =
     {
-        { hwnd1, FALSE, FALSE, FALSE,  FALSE, WmEmptySeq, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd1, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd1, FALSE, TRUE, FALSE,   FALSE, WmEmptySeq, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd1, TRUE, TRUE, FALSE,    FALSE, WmEmptySeq, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd1, FALSE, FALSE, TRUE,   FALSE, WmEmptySeq, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd1, TRUE, FALSE, TRUE,    FALSE, WmEmptySeq, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
-
-        { hwnd2, FALSE, FALSE, FALSE,  FALSE, WmEmptySeq, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
-        { hwnd2, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
-        { hwnd2, FALSE, TRUE, FALSE,   FALSE, sequence_3, WmEmptySeq,  TRUE, sequence_0,  TRUE, hwnd1 },
-        { hwnd2, TRUE, TRUE, FALSE,    FALSE, sequence_4, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd2, FALSE, FALSE, TRUE,    TRUE, sequence_5, WmEmptySeq,  TRUE, sequence_0,  TRUE, hwnd1 },
-        { hwnd2, TRUE, FALSE, TRUE,     TRUE, sequence_6, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
-
-        { hwnd0, FALSE, FALSE, FALSE,  FALSE, WmEmptySeq, sequence_3, FALSE, sequence_0, FALSE, hwnd1 },
-        { hwnd0, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
-        { hwnd0, FALSE, TRUE, FALSE,   FALSE, sequence_3, WmEmptySeq, FALSE, sequence_0, FALSE, hwnd1 },
-        { hwnd0, TRUE, TRUE, FALSE,    FALSE, sequence_4, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd0, FALSE, FALSE, TRUE,    TRUE, sequence_5, WmEmptySeq, FALSE, sequence_0, FALSE, hwnd1 },
-        { hwnd0, TRUE, FALSE, TRUE,     TRUE, sequence_6, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
+        { hwnd1, FALSE, FALSE, FALSE,  WmEmptySeq, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
+        { hwnd1, TRUE, FALSE, FALSE,   WmEmptySeq, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
+        { hwnd1, FALSE, TRUE, FALSE,   WmEmptySeq, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
+        { hwnd1, TRUE, TRUE, FALSE,    WmEmptySeq, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
+        { hwnd1, FALSE, FALSE, TRUE,   WmEmptySeq, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
+        { hwnd1, TRUE, FALSE, TRUE,    WmEmptySeq, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
+
+        { hwnd2, FALSE, FALSE, FALSE,  WmEmptySeq, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
+        { hwnd2, TRUE, FALSE, FALSE,   WmEmptySeq, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
+        { hwnd2, FALSE, TRUE, FALSE,   sequence_3, WmEmptySeq,  TRUE, sequence_0,  TRUE, hwnd1 },
+        { hwnd2, TRUE, TRUE, FALSE,    sequence_4, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
+        { hwnd2, FALSE, FALSE, TRUE,   sequence_5, WmEmptySeq,  TRUE, sequence_0,  TRUE, hwnd1 },
+        { hwnd2, TRUE, FALSE, TRUE,    sequence_6, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
+
+        { hwnd0, FALSE, FALSE, FALSE,  WmEmptySeq, sequence_3, FALSE, sequence_0, FALSE, hwnd1 },
+        { hwnd0, TRUE, FALSE, FALSE,   WmEmptySeq, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
+        { hwnd0, FALSE, TRUE, FALSE,   sequence_3, WmEmptySeq, FALSE, sequence_0, FALSE, hwnd1 },
+        { hwnd0, TRUE, TRUE, FALSE,    sequence_4, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
+        { hwnd0, FALSE, FALSE, TRUE,   sequence_5, WmEmptySeq, FALSE, sequence_0, FALSE, hwnd1 },
+        { hwnd0, TRUE, FALSE, TRUE,    sequence_6, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
     };
 
     DWORD i, res;
@@ -15078,7 +15077,7 @@ static void test_interthread_set_foreground_window(struct test_set_foreground_wi
         flush_sequence();
         if (test->call_set_active_window) SetActiveWindow( hwnd1 );
         if (test->call_set_focus) SetFocus( hwnd1 );
-        ok_sequence( test->seq_before_set_foreground, "before SetForegroundWindow", test->todo_seq_before_set_foreground );
+        ok_sequence( test->seq_before_set_foreground, "before SetForegroundWindow", FALSE );
 
         flush_sequence();
         SetForegroundWindow( hwnd1 );
-- 
2.35.1

