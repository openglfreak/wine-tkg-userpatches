From fb9ca89a8bf37404756f41f913236886d380f0c5 Mon Sep 17 00:00:00 2001
From: Arkadiusz Hiler <ahiler@codeweavers.com>
Date: Fri, 3 Sep 2021 15:09:14 +0300
Subject: [PATCH 2/2] amend! winex11.drv: Send missed KEYUP events after a keyboard
 grab is released.

winex11.drv: Send missed KEYUP events on KeymapNotify.

Full focus lost / focus gained events on the Windows side are not
feasible for X11's FocusIn/FocusOut events generated by keyboard grabs
(see XGrabKeyboard()) that are used for example for Atl+Tab handling.
Using them would degrade user's experience, especially with our full
screen hack, by causing the window to minimize or flash multiple times
depending on a game/window manager combo.

Because of that the programs may miss on some KEYUP events that happen
during the grab, and since there are no focus changes on the Windows
side the state doesn't get resynced.

This change attempts to improve user experience by syncing any missed
key release events that happened while the window haven't had focus on
the X11 side.

There's no syncing of key presses as those are more problematic because
of window manager quirks, e.g. on KDE it may end up syncing the Tab
press portion of Alt+Tab. Luckily missing key events for keys that were
pressed and not released while the WM had the keyboard grab is not
nearly as confusing as stuck keys.

For Warhammer: Chaosbane, theHunter: Call of the Wild, Far Cry Primal
and many other games that end up with stuck Alt after Alt+Tabbing.

CW-Bug-ID: #17046
CW-Bug-ID: #18904
---
 dlls/winex11.drv/event.c    |  5 ++---
 dlls/winex11.drv/keyboard.c | 10 +++++-----
 dlls/winex11.drv/mouse.c    |  2 ++
 dlls/winex11.drv/x11drv.h   |  2 +-
 4 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -903,6 +903,8 @@ BOOL x11drv_handle_focus_in_event( HWND hwnd, XEvent *xev, Time time )
         x11drv_global_focus_in( event->display );
     if (hwnd == NtUserGetDesktopWindow()) return FALSE;
 
+    x11drv_thread_data()->keymapnotify_hwnd = hwnd;
+
     if (!try_grab_pointer( event->display ))
     {
         /* ask the desktop window to release its grab before trying to get ours */
@@ -911,9 +913,6 @@ BOOL x11drv_handle_focus_in_event( HWND hwnd, XEvent *xev, Time time )
         return FALSE;
     }
 
-    if (event->mode == NotifyUngrab)
-        x11drv_thread_data()->kbd_grab_release_hwnd = hwnd;
-
     /* ask the desktop window to re-apply the current ClipCursor rect */
     send_message( NtUserGetDesktopWindow(), WM_X11DRV_DESKTOP_CLIP_CURSOR, FALSE, FALSE );
 
diff --git a/dlls/winex11.drv/keyboard.c b/dlls/winex11.drv/keyboard.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/keyboard.c
+++ b/dlls/winex11.drv/keyboard.c
@@ -1214,7 +1214,7 @@ BOOL X11DRV_KeymapNotify( HWND hwnd, XEvent *event )
     WORD vkey;
     DWORD flags;
     KeyCode keycode;
-    HWND kbd_grab_release_hwnd;
+    HWND keymapnotify_hwnd;
     BOOL changed = FALSE;
     struct {
         WORD vkey;
@@ -1223,8 +1223,8 @@ BOOL X11DRV_KeymapNotify( HWND hwnd, XEvent *event )
     } keys[256];
     struct x11drv_thread_data *thread_data = x11drv_thread_data();
 
-    kbd_grab_release_hwnd = thread_data->kbd_grab_release_hwnd;
-    thread_data->kbd_grab_release_hwnd = NULL;
+    keymapnotify_hwnd = thread_data->keymapnotify_hwnd;
+    thread_data->keymapnotify_hwnd = NULL;
 
     if (!get_async_key_state( keystate )) return FALSE;
 
@@ -1278,12 +1278,12 @@ BOOL X11DRV_KeymapNotify( HWND hwnd, XEvent *event )
              * event sequences, e.g. KDE performs two keyboard grabs for
              * Alt+Tab, which would sync the Tab press.
              */
-            if (kbd_grab_release_hwnd && !keys[vkey].pressed)
+            if (keymapnotify_hwnd && !keys[vkey].pressed)
             {
                 TRACE( "Sending KEYUP for a modifier %#.2x\n", vkey);
                 flags = KEYEVENTF_KEYUP;
                 if (keys[vkey].vkey & 0x1000) flags |= KEYEVENTF_EXTENDEDKEY;
-                X11DRV_send_keyboard_input( kbd_grab_release_hwnd, vkey, keys[vkey].scan, flags, GetTickCount() );
+                X11DRV_send_keyboard_input( keymapnotify_hwnd, vkey, keys[vkey].scan, flags, GetTickCount() );
             }
 
             update_key_state( keystate, vkey, keys[vkey].pressed );
diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/mouse.c
+++ b/dlls/winex11.drv/mouse.c
@@ -1705,6 +1705,8 @@ BOOL X11DRV_EnterNotify( HWND hwnd, XEvent *xev )
 
     TRACE( "hwnd %p/%lx pos %d,%d detail %d\n", hwnd, event->window, event->x, event->y, event->detail );
 
+    x11drv_thread_data()->keymapnotify_hwnd = hwnd;
+
     if (event->detail == NotifyVirtual) return FALSE;
     if (hwnd == x11drv_thread_data()->grab_hwnd) return FALSE;
 
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -378,7 +378,7 @@ struct x11drv_thread_data
     HWND     last_focus;           /* last window that had focus */
     DWORD    activating_time;      /* time of the last SetActiveWindow call */
     HWND     activating_hwnd;      /* window currently activating */
-    HWND     kbd_grab_release_hwnd;/* window that should receive modifier release events */
+    HWND     keymapnotify_hwnd;    /* window that should receive modifier release events */
     XIM      xim;                  /* input method */
     HWND     last_xic_hwnd;        /* last xic window */
     XFontSet font_set;             /* international text drawing font set */
