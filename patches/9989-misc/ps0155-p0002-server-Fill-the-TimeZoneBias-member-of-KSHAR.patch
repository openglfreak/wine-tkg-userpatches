From: Zebediah Figura <zfigura@codeweavers.com>
Subject: [PATCH 2/2] server: Fill the TimeZoneBias member of KSHARED_USER_DATA.
Message-Id: <20210823205439.165512-2-zfigura@codeweavers.com>
Date: Mon, 23 Aug 2021 15:54:39 -0500
In-Reply-To: <20210823205439.165512-1-zfigura@codeweavers.com>
References: <20210823205439.165512-1-zfigura@codeweavers.com>

Signed-off-by: Zebediah Figura <zfigura@codeweavers.com>
---
 dlls/ntdll/tests/time.c |  8 ++++++++
 server/fd.c             | 14 ++++++++++++++
 2 files changed, 22 insertions(+)

diff --git a/dlls/ntdll/tests/time.c b/dlls/ntdll/tests/time.c
index 7ea506337a4..549db5b22b6 100644
--- a/dlls/ntdll/tests/time.c
+++ b/dlls/ntdll/tests/time.c
@@ -410,7 +410,9 @@ static ULONGLONG read_ksystem_time(volatile KSYSTEM_TIME *time)
 static void test_user_shared_data_time(void)
 {
     KSHARED_USER_DATA *user_shared_data = (void *)0x7ffe0000;
+    SYSTEM_TIMEOFDAY_INFORMATION timeofday;
     ULONGLONG t1, t2, t3;
+    NTSTATUS status;
     int i = 0;
 
     i = 0;
@@ -464,6 +466,12 @@ static void test_user_shared_data_time(void)
         ok(t2 <= t3, "USD InterruptTime / RtlQueryUnbiasedInterruptTime are out of order %s %s\n",
            wine_dbgstr_longlong(t2), wine_dbgstr_longlong(t3));
     }
+
+    t1 = read_ksystem_time(&user_shared_data->TimeZoneBias);
+    status = NtQuerySystemInformation(SystemTimeOfDayInformation, &timeofday, sizeof(timeofday), NULL);
+    ok(!status, "failed to query time of day, status %#x\n", status);
+    ok(timeofday.TimeZoneBias.QuadPart == t1, "got USD bias %I64u, ntdll bias %I64u\n",
+            t1, timeofday.TimeZoneBias.QuadPart);
 }
 
 START_TEST(time)
diff --git a/server/fd.c b/server/fd.c
index 60555032f21..86c51529147 100644
--- a/server/fd.c
+++ b/server/fd.c
@@ -457,6 +457,9 @@ static void set_user_shared_data_time(void)
     unsigned __int64 tsc, qpc_bias, qpc_freq = user_shared_data->QpcFrequency;
     unsigned int aux, qpc_shift = user_shared_data->QpcShift;
     unsigned int qpc_bypass = user_shared_data->QpcBypassEnabled;
+    timeout_t timezone_bias;
+    struct tm *tm;
+    time_t now;
 
     if (!(qpc_bypass & SHARED_GLOBAL_FLAGS_QPC_BYPASS_ENABLED))
         tsc = 0;
@@ -481,6 +484,13 @@ static void set_user_shared_data_time(void)
         qpc_bias = monotonic_time - tsc;
     }
 
+    now = time( NULL );
+    tm = gmtime( &now );
+    timezone_bias = mktime( tm ) - now;
+    tm = localtime( &now );
+    if (tm->tm_isdst) timezone_bias -= 3600;
+    timezone_bias *= TICKS_PER_SEC;
+
     atomic_store_long(&user_shared_data->SystemTime.High2Time, current_time >> 32);
     atomic_store_ulong(&user_shared_data->SystemTime.LowPart, current_time);
     atomic_store_long(&user_shared_data->SystemTime.High1Time, current_time >> 32);
@@ -493,6 +503,10 @@ static void set_user_shared_data_time(void)
     atomic_store_ulong(&user_shared_data->TickCount.LowPart, tick_count);
     atomic_store_long(&user_shared_data->TickCount.High1Time, tick_count >> 32);
     atomic_store_ulong(&user_shared_data->TickCountLowDeprecated, tick_count);
+
+    atomic_store_long(&user_shared_data->TimeZoneBias.High2Time, timezone_bias >> 32);
+    atomic_store_ulong(&user_shared_data->TimeZoneBias.LowPart, timezone_bias);
+    atomic_store_long(&user_shared_data->TimeZoneBias.High1Time, timezone_bias >> 32);
     if (qpc_bypass & SHARED_GLOBAL_FLAGS_QPC_BYPASS_USE_HV_PAGE)
         atomic_store_ulonglong(&hypervisor_shared_data->QpcBias, qpc_bias);
     else

-- 
2.30.2

