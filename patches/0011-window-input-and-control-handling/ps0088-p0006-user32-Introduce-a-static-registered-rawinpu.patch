From 33fefddc87693909be5733a7f42989317b7a59fb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 23 Dec 2021 11:50:38 +0100
Subject: [PATCH 6/9] user32: Introduce a static registered rawinput device
 array.

---
 dlls/user32/rawinput.c | 25 +++++++++++++++++--------
 1 file changed, 17 insertions(+), 8 deletions(-)

diff --git a/dlls/user32/rawinput.c b/dlls/user32/rawinput.c
index 642b5a6b04c..f5d768f95bc 100644
--- a/dlls/user32/rawinput.c
+++ b/dlls/user32/rawinput.c
@@ -58,6 +58,9 @@ struct device
 static struct device *device_array;
 static unsigned int device_count, device_capacity;
 
+static struct rawinput_device *registered_array;
+static unsigned int registered_capacity;
+
 static CRITICAL_SECTION rawinput_devices_cs;
 static CRITICAL_SECTION_DEBUG rawinput_devices_cs_debug =
 {
@@ -474,7 +477,6 @@ UINT WINAPI GetRawInputDeviceList(RAWINPUTDEVICELIST *devices, UINT *count, UINT
  */
 BOOL WINAPI DECLSPEC_HOTPATCH RegisterRawInputDevices(RAWINPUTDEVICE *devices, UINT device_count, UINT size)
 {
-    struct rawinput_device *d;
     BOOL ret;
     UINT i;
 
@@ -504,7 +506,14 @@ BOOL WINAPI DECLSPEC_HOTPATCH RegisterRawInputDevices(RAWINPUTDEVICE *devices, U
         }
     }
 
-    if (!(d = HeapAlloc( GetProcessHeap(), 0, device_count * sizeof(*d) ))) return FALSE;
+    EnterCriticalSection( &rawinput_devices_cs );
+
+    if (!array_reserve( (void **)&registered_array, &registered_capacity,
+                        device_count, sizeof(*registered_array)) )
+    {
+        LeaveCriticalSection( &rawinput_devices_cs );
+        return FALSE;
+    }
 
     for (i = 0; i < device_count; ++i)
     {
@@ -514,20 +523,20 @@ BOOL WINAPI DECLSPEC_HOTPATCH RegisterRawInputDevices(RAWINPUTDEVICE *devices, U
         if (devices[i].dwFlags & ~(RIDEV_REMOVE|RIDEV_NOLEGACY|RIDEV_INPUTSINK|RIDEV_DEVNOTIFY))
             FIXME("Unhandled flags %#x for device %u.\n", devices[i].dwFlags, i);
 
-        d[i].usage_page = devices[i].usUsagePage;
-        d[i].usage = devices[i].usUsage;
-        d[i].flags = devices[i].dwFlags;
-        d[i].target = wine_server_user_handle( devices[i].hwndTarget );
+        registered_array[i].usage_page = devices[i].usUsagePage;
+        registered_array[i].usage = devices[i].usUsage;
+        registered_array[i].flags = devices[i].dwFlags;
+        registered_array[i].target = wine_server_user_handle( devices[i].hwndTarget );
     }
 
     SERVER_START_REQ( update_rawinput_devices )
     {
-        wine_server_add_data( req, d, device_count * sizeof(*d) );
+        wine_server_add_data( req, registered_array, device_count * sizeof(*registered_array) );
         ret = !wine_server_call( req );
     }
     SERVER_END_REQ;
 
-    HeapFree( GetProcessHeap(), 0, d );
+    LeaveCriticalSection( &rawinput_devices_cs );
 
     return ret;
 }
-- 
2.35.1

