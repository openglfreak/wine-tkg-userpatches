From: Daniel Lehman <dlehman@esri.com>
#Subject: [PATCH 1/2] ntdll/tests: Add tests for exception from NtClose.
Message-Id: <PH0PR05MB75119CADE18970D4F0708ED5DF0F9@PH0PR05MB7511.namprd05.prod.outlook.com>
Date: Mon, 14 Mar 2022 23:12:23 +0000


From bbad2b3f26b7cf8822044a1a50f0650539170215 Mon Sep 17 00:00:00 2001
From: Daniel Lehman <dlehman@esri.com>
Date: Mon, 14 Mar 2022 12:27:40 -0700
Subject: [PATCH 1/2] ntdll/tests: Add tests for exception from NtClose.

Signed-off-by: Daniel Lehman <dlehman@esri.com>
---
 dlls/ntdll/tests/exception.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/dlls/ntdll/tests/exception.c b/dlls/ntdll/tests/exception.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/tests/exception.c
+++ b/dlls/ntdll/tests/exception.c
@@ -1245,6 +1245,12 @@ static void test_debugger(DWORD cont_status)
                         ok( !ctx.SegGs, "wrong gs %04lx / %04lx\n", ctx.SegGs, ctx.SegSs );
                     }
                 }
+                else if (stage == 17)
+                {
+                    todo_wine
+                    ok(FALSE, "should not throw exception\n");
+                    continuestatus = DBG_EXCEPTION_NOT_HANDLED;
+                }
                 else
                     ok(FALSE, "unexpected stage %u\n", stage);
 
@@ -3943,6 +3949,12 @@ static void test_debugger(DWORD cont_status)
                     todo_wine ok( ctx.SegFs != ctx.SegSs, "wrong fs %04x / %04x\n", ctx.SegFs, ctx.SegSs );
                     ok( ctx.SegGs == ctx.SegSs, "wrong gs %04x / %04x\n", ctx.SegGs, ctx.SegSs );
                 }
+                else if (stage == 17)
+                {
+                    todo_wine
+                    ok(FALSE, "should not throw exception\n");
+                    continuestatus = DBG_EXCEPTION_NOT_HANDLED;
+                }
                 else
                     ok(FALSE, "unexpected stage %u\n", stage);
 
@@ -6614,6 +6626,12 @@ static void test_debugger(DWORD cont_status)
 
                     if (stage == 12|| stage == 13) continuestatus = DBG_EXCEPTION_NOT_HANDLED;
                 }
+                else if (stage == 17)
+                {
+                    todo_wine
+                    ok(FALSE, "should not throw exception\n");
+                    continuestatus = DBG_EXCEPTION_NOT_HANDLED;
+                }
                 else
                     ok(FALSE, "unexpected stage %x\n", stage);
 
@@ -7862,6 +7880,12 @@ static void test_debugger(DWORD cont_status)
 
                     if (stage == 12|| stage == 13) continuestatus = DBG_EXCEPTION_NOT_HANDLED;
                 }
+                else if (stage == 17)
+                {
+                    todo_wine
+                    ok(FALSE, "should not throw exception\n");
+                    continuestatus = DBG_EXCEPTION_NOT_HANDLED;
+                }
                 else
                     ok(FALSE, "unexpected stage %x\n", stage);
 
@@ -8674,11 +8698,13 @@ static void test_closehandle(DWORD numexc, HANDLE handle)
 
     invalid_handle_exceptions = 0;
     CloseHandle(handle);
+    todo_wine_if(handle == INVALID_HANDLE_VALUE)
     ok(invalid_handle_exceptions == numexc, "CloseHandle generated %ld exceptions, expected %ld\n",
        invalid_handle_exceptions, numexc);
 
     invalid_handle_exceptions = 0;
     pNtClose(handle);
+    todo_wine_if(handle == INVALID_HANDLE_VALUE)
     ok(invalid_handle_exceptions == numexc, "NtClose generated %ld exceptions, expected %ld\n",
        invalid_handle_exceptions, numexc);
 
@@ -10858,6 +10884,8 @@ START_TEST(exception)
         test_stage = 16;
         test_debuggee_segments();
 #endif
+        test_stage = 17;
+        test_closehandle(0, INVALID_HANDLE_VALUE); /* Special case. */
 
         /* rest of tests only run in parent */
         return;

-- 
2.35.1

