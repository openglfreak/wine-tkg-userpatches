From 60a92afd7b8d72e58ceedd7ed1e5323a4af7a0fc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 23 Dec 2021 12:07:45 +0100
Subject: [PATCH 7/9] server: Return the rawinput device list in
 update_rawinput_devices.

---
 dlls/user32/rawinput.c | 30 ++++++++++++++++++++----------
 server/protocol.def    |  6 +-----
 server/queue.c         | 14 ++++----------
 3 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/dlls/user32/rawinput.c b/dlls/user32/rawinput.c
index 11111111111..11111111111 100644
--- a/dlls/user32/rawinput.c
+++ b/dlls/user32/rawinput.c
@@ -59,7 +59,7 @@ static struct device *device_array;
 static unsigned int device_count, device_capacity;
 
 static struct rawinput_device *registered_array;
-static unsigned int registered_capacity;
+static unsigned int registered_count, registered_capacity;
 
 static CRITICAL_SECTION rawinput_devices_cs;
 static CRITICAL_SECTION_DEBUG rawinput_devices_cs_debug =
@@ -477,8 +477,7 @@ UINT WINAPI GetRawInputDeviceList(RAWINPUTDEVICELIST *devices, UINT *count, UINT
  */
 BOOL WINAPI DECLSPEC_HOTPATCH RegisterRawInputDevices(RAWINPUTDEVICE *devices, UINT device_count, UINT size)
 {
-    BOOL ret;
-    UINT i;
+    UINT i, status = 0;
 
     TRACE("devices %p, device_count %u, size %u.\n", devices, device_count, size);
 
@@ -514,6 +513,7 @@ BOOL WINAPI DECLSPEC_HOTPATCH RegisterRawInputDevices(RAWINPUTDEVICE *devices, U
         LeaveCriticalSection( &rawinput_devices_cs );
         return FALSE;
     }
+    registered_count = max(registered_count, device_count);
 
     for (i = 0; i < device_count; ++i)
     {
@@ -529,16 +529,26 @@ BOOL WINAPI DECLSPEC_HOTPATCH RegisterRawInputDevices(RAWINPUTDEVICE *devices, U
         registered_array[i].target = wine_server_user_handle( devices[i].hwndTarget );
     }
 
-    SERVER_START_REQ( update_rawinput_devices )
+    do
     {
-        wine_server_add_data( req, registered_array, device_count * sizeof(*registered_array) );
-        ret = !wine_server_call( req );
-    }
-    SERVER_END_REQ;
+        SERVER_START_REQ( update_rawinput_devices )
+        {
+            if (!status) wine_server_add_data( req, registered_array, device_count * sizeof(*registered_array) );
+            wine_server_set_reply( req, registered_array, registered_count * sizeof(*registered_array) );
+            status = wine_server_call( req );
+            registered_count = reply->device_count;
+        }
+        SERVER_END_REQ;
+
+        if (status != STATUS_BUFFER_TOO_SMALL) break;
+        if (!array_reserve( (void **)&registered_array, &registered_capacity,
+                            registered_count, sizeof(*registered_array)) )
+            status = STATUS_NO_MEMORY;
+    } while (status == STATUS_BUFFER_TOO_SMALL);
 
     LeaveCriticalSection( &rawinput_devices_cs );
 
-    return ret;
+    return !status;
 }
 
 /***********************************************************************
@@ -831,7 +841,7 @@ UINT WINAPI DECLSPEC_HOTPATCH GetRegisteredRawInputDevices(RAWINPUTDEVICE *devic
     if (devices && !(buffer = HeapAlloc(GetProcessHeap(), 0, buffer_size)))
         return ~0U;
 
-    SERVER_START_REQ(get_rawinput_devices)
+    SERVER_START_REQ(update_rawinput_devices)
     {
         if (buffer) wine_server_set_reply(req, buffer, buffer_size);
         status = wine_server_call_err(req);
diff --git a/server/protocol.def b/server/protocol.def
index 11111111111..11111111111 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -3737,13 +3737,9 @@ struct handle_info
     VARARG(data,bytes);
 @END
 
-/* Modify the list of registered rawinput devices */
+/* Modify and return the list of registered rawinput devices */
 @REQ(update_rawinput_devices)
     VARARG(devices,rawinput_devices);
-@END
-
-/* Retrieve the list of registered rawinput devices */
-@REQ(get_rawinput_devices)
 @REPLY
     unsigned int device_count;
     VARARG(devices,rawinput_devices);
diff --git a/server/queue.c b/server/queue.c
index 11111111111..11111111111 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -3742,10 +3742,10 @@ DECL_HANDLER(get_rawinput_buffer)
 
 DECL_HANDLER(update_rawinput_devices)
 {
-    const struct rawinput_device *devices = get_req_data();
+    struct rawinput_device *devices = (struct rawinput_device *)get_req_data();
     unsigned int device_count = get_req_data_size() / sizeof (*devices);
     const struct rawinput_device_entry *e;
-    unsigned int i;
+    unsigned int i, size;
 
     for (i = 0; i < device_count; ++i)
     {
@@ -3756,15 +3756,9 @@ DECL_HANDLER(update_rawinput_devices)
     current->process->rawinput_mouse = e ? &e->device : NULL;
     e = find_rawinput_device( current->process, 1, 6 );
     current->process->rawinput_kbd   = e ? &e->device : NULL;
-}
-
-DECL_HANDLER(get_rawinput_devices)
-{
-    struct rawinput_device_entry *e;
-    struct rawinput_device *devices;
-    unsigned int i = 0, device_count = list_count( &current->process->rawinput_devices );
-    unsigned int size = device_count * sizeof(*devices);
 
+    device_count = list_count( &current->process->rawinput_devices );
+    size = device_count * sizeof(*devices);
     reply->device_count = device_count;
 
     /* no buffer provided, nothing else to do */
-- 
2.35.1

