From: Jacek Caban <jacek@codeweavers.com>
Subject: [PATCH 3/3] winebuild: Don't perform xrstor in x86_64 syscall dispatcher.
Message-Id: <b4967348-d351-edee-cf4b-9ac49f55d71d@codeweavers.com>
Date: Thu, 3 Jun 2021 15:02:23 +0200

Signed-off-by: Jacek Caban <jacek@codeweavers.com>
---
  tools/winebuild/import.c | 15 +++------------
  1 file changed, 3 insertions(+), 12 deletions(-)

diff --git a/tools/winebuild/import.c b/tools/winebuild/import.c
index c5451014bc6..e0e89d1a31c 100644
--- a/tools/winebuild/import.c
+++ b/tools/winebuild/import.c
@@ -1649,7 +1649,7 @@ static void output_syscall_dispatcher(void)
         output( "\tleaq (%%rcx,%%rbx,2),%%rbx\n" );
         output( "\tandq $0xfff,%%r13\n" );        /* syscall number */
         output( "\tcmpq 16(%%rbx),%%r13\n" );     /* table->ServiceLimit */
-        output( "\tjae 5f\n" );
+        output( "\tjae 3f\n" );
         output( "\tmovq 24(%%rbx),%%rcx\n" );     /* table->ArgumentTable */
         output( "\tmovzbl (%%rcx,%%r13),%%ecx\n" );
         output( "\tsubq $0x20,%%rcx\n" );
@@ -1669,16 +1669,7 @@ static void output_syscall_dispatcher(void)
         output( "\tcallq *(%%r10,%%r13,8)\n" );
         output( "2:\tmovq %%gs:0x30,%%rcx\n" );
         output( "\tmovq $0,0x328(%%rcx)\n" );
-        output( "\ttestl $3,%%r14d\n" );  /* SYSCALL_HAVE_XSAVE | SYSCALL_HAVE_XSAVEC */
-        output( "\tjz 3f\n" );
-        output( "\tmovq %%rax,%%r11\n" );
-        output( "\tmovl $7,%%eax\n" );
-        output( "\txorq %%rdx,%%rdx\n" );
-        output( "\txrstor64 (%%r12)\n" );
-        output( "\tmovq %%r11,%%rax\n" );
-        output( "\tjmp 4f\n" );
-        output( "3:\tfxrstor64 (%%r12)\n" );
-        output( "4:\tmovq -0x30(%%rbp),%%r15\n" );
+        output( "\tmovq -0x30(%%rbp),%%r15\n" );
         output( "\tmovq -0x38(%%rbp),%%r14\n" );
         output( "\tmovq -0x40(%%rbp),%%r13\n" );
         output( "\tmovq -0x48(%%rbp),%%r12\n" );
@@ -1694,7 +1685,7 @@ static void output_syscall_dispatcher(void)
         output_cfi( ".cfi_adjust_cfa_offset -8" );
         output_cfi( ".cfi_same_value %%rbp" );
         output( "\tretq\n" );
-        output( "5:\tmovl $0x%x,%%eax\n", invalid_param );
+        output( "3:\tmovl $0x%x,%%eax\n", invalid_param );
         output( "\tjmp 2b\n" );
         break;
     case CPU_ARM:

