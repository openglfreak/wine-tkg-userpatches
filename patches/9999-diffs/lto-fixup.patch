diff --git a/loader/preloader.c b/loader/preloader.c
index 11111111111..11111111111 100644
--- a/loader/preloader.c
+++ b/loader/preloader.c
@@ -349,7 +349,7 @@ void __bb_init_func(void) { return; }
 
 /* data for setting up the glibc-style thread-local storage in %gs */
 
-static int thread_data[256];
+static int thread_data[256] __attribute__((used));
 
 struct
 {
@@ -364,7 +364,7 @@ struct
     unsigned int  seg_not_present : 1;
     unsigned int  usable : 1;
     unsigned int  garbage : 25;
-} thread_ldt = { -1, (unsigned long)thread_data, 0xfffff, 1, 0, 0, 1, 0, 1, 0 };
+} thread_ldt __attribute__((used)) = { -1, (unsigned long)thread_data, 0xfffff, 1, 0, 0, 1, 0, 1, 0 };
 
 typedef unsigned long wld_old_sigset_t;
 
@@ -590,7 +590,7 @@ static inline pid_t wld_getpid( void )
 
 #elif defined(__x86_64__)
 
-void *thread_data[256];
+void *thread_data[256] __attribute__((used));
 
 /*
  * The _start function is the entry and exit point of this program
@@ -689,7 +689,7 @@ SYSCALL_NOERR( wld_getegid, 108 /* SYS_getegid */ );
 
 #elif defined(__aarch64__)
 
-void *thread_data[256];
+void *thread_data[256] __attribute__((used));
 
 /*
  * The _start function is the entry and exit point of this program
@@ -2702,7 +2702,7 @@ static void map_reserve_preload_ranges( const struct vma_area_list *vma_list )
  *  Load the binary and then its ELF interpreter.
  *  Note, we assume that the binary is a dynamically linked ELF shared object.
  */
-void* wld_start( void **stack )
+__attribute__((used)) void* wld_start( void **stack )
 {
     long i;
     char *interp, *reserve;
