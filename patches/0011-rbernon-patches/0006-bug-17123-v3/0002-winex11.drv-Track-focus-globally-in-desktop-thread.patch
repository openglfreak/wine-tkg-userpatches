From 3e2032ba9c805f0bf1656123c0234ff40341c997 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 16 Jan 2020 12:30:17 +0100
Subject: [PATCH 2/2] winex11.drv: Track focus globally, in desktop thread.

This lets us track if a Wine window has input focus, without relying on
their message processing loop. Some applications do not process their
messages for a while and it makes Wine focus state unreliable.
---
 dlls/winex11.drv/event.c  | 17 +++++++++++++++++
 dlls/winex11.drv/window.c |  5 +++++
 2 files changed, 22 insertions(+)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -1444,6 +1444,23 @@ done:
 static BOOL X11DRV_PropertyNotify( HWND hwnd, XEvent *xev )
 {
     XPropertyEvent *event = &xev->xproperty;
+    HWND active_window;
+
+    x11drv_time_to_ticks( event->time );
+
+    if (event->atom == x11drv_atom(_NET_ACTIVE_WINDOW))
+    {
+        /* virtual desktop uses focus events to track global focus instead */
+        if (is_virtual_desktop() || NtUserGetWindowThread( NtUserGetDesktopWindow(), NULL ) != GetCurrentThreadId())
+            return FALSE;
+
+        if (!(active_window = get_foreground_window( event->display, NULL )))
+            set_foreground_window( NtUserGetDesktopWindow() );
+        else
+            set_foreground_window( active_window );
+
+        return FALSE;
+    }
 
     /* sync with the X server time */
     x11drv_time_to_ticks( event->time );
diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -2053,6 +2053,11 @@ BOOL X11DRV_CreateWindow( HWND hwnd )
         struct x11drv_thread_data *data = x11drv_init_thread_data();
         XSetWindowAttributes attr;
 
+        if (ewmh.has__net_active_window)
+            XSelectInput( data->display, DefaultRootWindow( data->display ), PropertyChangeMask );
+        else if (!is_virtual_desktop())
+            ERR("_NET_ACTIVE_WINDOW is not supported, and virtual desktop not enabled, unable to track focus globally!\n");
+
         /* create the cursor clipping window */
         attr.override_redirect = TRUE;
         attr.event_mask = StructureNotifyMask | FocusChangeMask;
-- 
2.36.1

