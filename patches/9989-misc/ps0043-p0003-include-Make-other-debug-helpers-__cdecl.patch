From: "Rémi Bernon" <rbernon@codeweavers.com>
Subject: [PATCH 3/6] include: Make other debug helpers __cdecl.
Message-Id: <20201121201913.1177092-3-rbernon@codeweavers.com>
Date: Sat, 21 Nov 2020 21:19:10 +0100
In-Reply-To: <20201121201913.1177092-1-rbernon@codeweavers.com>
References: <20201121201913.1177092-1-rbernon@codeweavers.com>

Signed-off-by: Rémi Bernon <rbernon@codeweavers.com>
---
 include/wine/debug.h | 34 +++++++++++++++++-----------------
 1 file changed, 17 insertions(+), 17 deletions(-)

diff --git a/include/wine/debug.h b/include/wine/debug.h
index e75d7556dd9..e5656835d76 100644
--- a/include/wine/debug.h
+++ b/include/wine/debug.h
@@ -206,7 +206,7 @@ static inline int __cdecl wine_dbg_log( enum __wine_debug_class cls,
     return ret;
 }
 
-static inline const char *wine_dbgstr_an( const char *str, int n )
+static inline const char *__cdecl wine_dbgstr_an( const char *str, int n )
 {
     static const char hex[16] = {'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};
     char buffer[300], *dst = buffer;
@@ -250,7 +250,7 @@ static inline const char *wine_dbgstr_an( const char *str, int n )
     return __wine_dbg_strdup( buffer );
 }
 
-static inline const char *wine_dbgstr_wn( const WCHAR *str, int n )
+static inline const char *__cdecl wine_dbgstr_wn( const WCHAR *str, int n )
 {
     static const char hex[16] = {'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};
     char buffer[300], *dst = buffer;
@@ -296,17 +296,17 @@ static inline const char *wine_dbgstr_wn( const WCHAR *str, int n )
     return __wine_dbg_strdup( buffer );
 }
 
-static inline const char *wine_dbgstr_a( const char *s )
+static inline const char *__cdecl wine_dbgstr_a( const char *s )
 {
     return wine_dbgstr_an( s, -1 );
 }
 
-static inline const char *wine_dbgstr_w( const WCHAR *s )
+static inline const char *__cdecl wine_dbgstr_w( const WCHAR *s )
 {
     return wine_dbgstr_wn( s, -1 );
 }
 
-static inline const char *wine_dbgstr_guid( const GUID *id )
+static inline const char *__cdecl wine_dbgstr_guid( const GUID *id )
 {
     if (!id) return "(null)";
     if (!((ULONG_PTR)id >> 16)) return wine_dbg_sprintf( "<guid-0x%04hx>", (WORD)(ULONG_PTR)id );
@@ -316,20 +316,20 @@ static inline const char *wine_dbgstr_guid( const GUID *id )
                              id->Data4[4], id->Data4[5], id->Data4[6], id->Data4[7] );
 }
 
-static inline const char *wine_dbgstr_point( const POINT *pt )
+static inline const char *__cdecl wine_dbgstr_point( const POINT *pt )
 {
     if (!pt) return "(null)";
     return wine_dbg_sprintf( "(%d,%d)", (int)pt->x, (int)pt->y );
 }
 
-static inline const char *wine_dbgstr_rect( const RECT *rect )
+static inline const char *__cdecl wine_dbgstr_rect( const RECT *rect )
 {
     if (!rect) return "(null)";
     return wine_dbg_sprintf( "(%d,%d)-(%d,%d)", (int)rect->left, (int)rect->top,
                              (int)rect->right, (int)rect->bottom );
 }
 
-static inline const char *wine_dbgstr_longlong( ULONGLONG ll )
+static inline const char *__cdecl wine_dbgstr_longlong( ULONGLONG ll )
 {
     if (sizeof(ll) > sizeof(unsigned long) && ll >> 32)
         return wine_dbg_sprintf( "%lx%08lx", (unsigned long)(ll >> 32), (unsigned long)ll );
@@ -338,7 +338,7 @@ static inline const char *wine_dbgstr_longlong( ULONGLONG ll )
 
 #if defined(__oaidl_h__) && defined(V_VT)
 
-static inline const char *wine_dbgstr_vt( VARTYPE vt )
+static inline const char *__cdecl wine_dbgstr_vt( VARTYPE vt )
 {
     static const char *const variant_types[] =
     {
@@ -386,7 +386,7 @@ static inline const char *wine_dbgstr_vt( VARTYPE vt )
     return wine_dbg_sprintf( "vt(invalid %x)", vt );
 }
 
-static inline const char *wine_dbgstr_variant( const VARIANT *v )
+static inline const char *__cdecl wine_dbgstr_variant( const VARIANT *v )
 {
     if (!v)
         return "(null)";
@@ -493,15 +493,15 @@ static inline const char *wine_dbgstr_variant( const VARIANT *v )
 #ifdef __WINESRC__
 /* Wine uses shorter names that are very likely to conflict with other software */
 
-static inline const char *debugstr_an( const char * s, int n ) { return wine_dbgstr_an( s, n ); }
-static inline const char *debugstr_wn( const WCHAR *s, int n ) { return wine_dbgstr_wn( s, n ); }
-static inline const char *debugstr_guid( const struct _GUID *id ) { return wine_dbgstr_guid(id); }
-static inline const char *debugstr_a( const char *s )  { return wine_dbgstr_an( s, -1 ); }
-static inline const char *debugstr_w( const WCHAR *s ) { return wine_dbgstr_wn( s, -1 ); }
+static inline const char *__cdecl debugstr_an( const char * s, int n ) { return wine_dbgstr_an( s, n ); }
+static inline const char *__cdecl debugstr_wn( const WCHAR *s, int n ) { return wine_dbgstr_wn( s, n ); }
+static inline const char *__cdecl debugstr_guid( const struct _GUID *id ) { return wine_dbgstr_guid(id); }
+static inline const char *__cdecl debugstr_a( const char *s )  { return wine_dbgstr_an( s, -1 ); }
+static inline const char *__cdecl debugstr_w( const WCHAR *s ) { return wine_dbgstr_wn( s, -1 ); }
 
 #if defined(__oaidl_h__) && defined(V_VT)
-static inline const char *debugstr_vt( VARTYPE vt ) { return wine_dbgstr_vt( vt ); }
-static inline const char *debugstr_variant( const VARIANT *v ) { return wine_dbgstr_variant( v ); }
+static inline const char *__cdecl debugstr_vt( VARTYPE vt ) { return wine_dbgstr_vt( vt ); }
+static inline const char *__cdecl debugstr_variant( const VARIANT *v ) { return wine_dbgstr_variant( v ); }
 #endif
 
 #define TRACE                      WINE_TRACE

-- 
2.35.1

