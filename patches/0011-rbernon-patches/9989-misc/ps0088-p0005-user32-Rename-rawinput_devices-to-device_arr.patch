From c2d191b0d0a3b017c58f01fc2d80e293916c0f75 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 23 Dec 2021 11:28:39 +0100
Subject: [PATCH 5/9] user32: Rename rawinput_devices to device_array.

And rawinput_devices_count (resp. rawinput_devices_max) to device_count,
(resp. device_capacity).
---
 dlls/user32/rawinput.c | 58 +++++++++++++++++++++---------------------
 1 file changed, 29 insertions(+), 29 deletions(-)

diff --git a/dlls/user32/rawinput.c b/dlls/user32/rawinput.c
index 11111111111..11111111111 100644
--- a/dlls/user32/rawinput.c
+++ b/dlls/user32/rawinput.c
@@ -55,8 +55,8 @@ struct device
     PHIDP_PREPARSED_DATA data;
 };
 
-static struct device *rawinput_devices;
-static unsigned int rawinput_devices_count, rawinput_devices_max;
+static struct device *device_array;
+static unsigned int device_count, device_capacity;
 
 static CRITICAL_SECTION rawinput_devices_cs;
 static CRITICAL_SECTION_DEBUG rawinput_devices_cs_debug =
@@ -138,9 +138,9 @@ static struct device *add_device(HDEVINFO set, SP_DEVICE_INTERFACE_DATA *iface)
         return NULL;
     }
 
-    for (i = 0; i < rawinput_devices_count && !device; ++i)
-        if (rawinput_devices[i].handle == UlongToHandle(handle))
-            device = rawinput_devices + i;
+    for (i = 0; i < device_count && !device; ++i)
+        if (device_array[i].handle == UlongToHandle(handle))
+            device = device_array + i;
 
     if (device)
     {
@@ -149,10 +149,10 @@ static struct device *add_device(HDEVINFO set, SP_DEVICE_INTERFACE_DATA *iface)
         CloseHandle(device->file);
         free(device->detail);
     }
-    else if (array_reserve((void **)&rawinput_devices, &rawinput_devices_max,
-                           rawinput_devices_count + 1, sizeof(*rawinput_devices)))
+    else if (array_reserve((void **)&device_array, &device_capacity,
+                           device_count + 1, sizeof(*device_array)))
     {
-        device = &rawinput_devices[rawinput_devices_count++];
+        device = &device_array[device_count++];
         TRACE("Adding device %x / %s.\n", handle, debugstr_w(detail->DevicePath));
     }
     else
@@ -189,13 +189,13 @@ void rawinput_update_device_list(void)
     EnterCriticalSection(&rawinput_devices_cs);
 
     /* destroy previous list */
-    for (idx = 0; idx < rawinput_devices_count; ++idx)
+    for (idx = 0; idx < device_count; ++idx)
     {
-        HidD_FreePreparsedData(rawinput_devices[idx].data);
-        CloseHandle(rawinput_devices[idx].file);
-        free(rawinput_devices[idx].detail);
+        HidD_FreePreparsedData(device_array[idx].data);
+        CloseHandle(device_array[idx].file);
+        free(device_array[idx].detail);
     }
-    rawinput_devices_count = 0;
+    device_count = 0;
 
     set = SetupDiGetClassDevsW(&hid_guid, NULL, NULL, DIGCF_DEVICEINTERFACE | DIGCF_PRESENT);
 
@@ -262,13 +262,13 @@ void rawinput_update_device_list(void)
 static struct device *find_device_from_handle(HANDLE handle)
 {
     UINT i;
-    for (i = 0; i < rawinput_devices_count; ++i)
-        if (rawinput_devices[i].handle == handle)
-            return rawinput_devices + i;
+    for (i = 0; i < device_count; ++i)
+        if (device_array[i].handle == handle)
+            return device_array + i;
     rawinput_update_device_list();
-    for (i = 0; i < rawinput_devices_count; ++i)
-        if (rawinput_devices[i].handle == handle)
-            return rawinput_devices + i;
+    for (i = 0; i < device_count; ++i)
+        if (device_array[i].handle == handle)
+            return device_array + i;
     return NULL;
 }
 
@@ -422,12 +422,12 @@ BOOL rawinput_from_hardware_message(RAWINPUT *rawinput, const struct hardware_ms
 /***********************************************************************
  *              GetRawInputDeviceList   (USER32.@)
  */
-UINT WINAPI GetRawInputDeviceList(RAWINPUTDEVICELIST *devices, UINT *device_count, UINT size)
+UINT WINAPI GetRawInputDeviceList(RAWINPUTDEVICELIST *devices, UINT *count, UINT size)
 {
     static UINT last_check;
     UINT i, ticks = GetTickCount();
 
-    TRACE("devices %p, device_count %p, size %u.\n", devices, device_count, size);
+    TRACE("devices %p, count %p, size %u.\n", devices, count, size);
 
     if (size != sizeof(*devices))
     {
@@ -435,7 +435,7 @@ UINT WINAPI GetRawInputDeviceList(RAWINPUTDEVICELIST *devices, UINT *device_coun
         return ~0U;
     }
 
-    if (!device_count)
+    if (!count)
     {
         SetLastError(ERROR_NOACCESS);
         return ~0U;
@@ -449,24 +449,24 @@ UINT WINAPI GetRawInputDeviceList(RAWINPUTDEVICELIST *devices, UINT *device_coun
 
     if (!devices)
     {
-        *device_count = rawinput_devices_count;
+        *count = device_count;
         return 0;
     }
 
-    if (*device_count < rawinput_devices_count)
+    if (*count < device_count)
     {
         SetLastError(ERROR_INSUFFICIENT_BUFFER);
-        *device_count = rawinput_devices_count;
+        *count = device_count;
         return ~0U;
     }
 
-    for (i = 0; i < rawinput_devices_count; ++i)
+    for (i = 0; i < device_count; ++i)
     {
-        devices[i].hDevice = rawinput_devices[i].handle;
-        devices[i].dwType = rawinput_devices[i].info.dwType;
+        devices[i].hDevice = device_array[i].handle;
+        devices[i].dwType = device_array[i].info.dwType;
     }
 
-    return rawinput_devices_count;
+    return device_count;
 }
 
 /***********************************************************************
-- 
2.36.0

