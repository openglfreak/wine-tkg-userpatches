From 37d1fa54068283b5a02b9cb1635a8ba4ace5654e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 25 Jan 2021 15:16:19 +0100
Subject: [PATCH 02/13] server: Notify desktop of cursor handle changes.

---
 server/protocol.def |  1 +
 server/queue.c      | 18 ++++++++++++++++++
 server/user.h       |  2 ++
 3 files changed, 21 insertions(+)

diff --git a/server/protocol.def b/server/protocol.def
index 2c90e9d05a2..a0b0f0ac08d 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -3586,6 +3586,7 @@ struct handle_info
     int            y;
     rectangle_t    clip;          /* cursor clip rectangle */
     unsigned int   clip_msg;      /* message to post on cursor clip changes */
+    unsigned int   change_msg;    /* message to post on cursor win / handle changes */
 @REPLY
     user_handle_t  prev_handle;   /* previous handle */
     int            prev_count;    /* previous show count */
diff --git a/server/queue.c b/server/queue.c
index aa579c4242a..754ab97a8c4 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -402,6 +402,13 @@ static int update_desktop_cursor_pos( struct desktop *desktop, user_handle_t win
     return updated;
 }
 
+static void update_desktop_cursor_handle( struct desktop *desktop, user_handle_t handle )
+{
+    if (desktop->cursor.change_msg && desktop->cursor.handle != handle)
+        post_desktop_message( desktop, desktop->cursor.change_msg, desktop->cursor.win, handle );
+    desktop->cursor.handle = handle;
+}
+
 void update_desktop_cursor_win( struct desktop *desktop )
 {
     update_desktop_cursor_pos( desktop, 0, desktop->cursor.x, desktop->cursor.y );
@@ -3290,6 +3297,11 @@ DECL_HANDLER(set_cursor)
             set_win32_error( ERROR_INVALID_CURSOR_HANDLE );
             return;
         }
+
+        /* only the desktop owner can set the message */
+        if (req->change_msg && get_top_window_owner(desktop) == current->process)
+            desktop->cursor.change_msg = req->change_msg;
+
         input->cursor = req->handle;
     }
     if (req->flags & SET_CURSOR_COUNT)
@@ -3310,6 +3322,12 @@ DECL_HANDLER(set_cursor)
         set_clip_rectangle( desktop, (req->flags & SET_CURSOR_NOCLIP) ? NULL : &req->clip, 0 );
     }
 
+    if (req->flags & (SET_CURSOR_HANDLE | SET_CURSOR_COUNT))
+    {
+        if (input->cursor_count < 0) update_desktop_cursor_handle( desktop, 0 );
+        else update_desktop_cursor_handle( desktop, input->cursor );
+    }
+
     reply->new_x       = desktop->cursor.x;
     reply->new_y       = desktop->cursor.y;
     reply->new_clip    = desktop->cursor.clip;
diff --git a/server/user.h b/server/user.h
index e1310634684..74437a5db57 100644
--- a/server/user.h
+++ b/server/user.h
@@ -58,8 +58,10 @@ struct global_cursor
     int                  y;
     rectangle_t          clip;             /* cursor clip rectangle */
     unsigned int         clip_msg;         /* message to post for cursor clip changes */
+    unsigned int         change_msg;       /* message to post for cursor win / handle changes */
     unsigned int         last_change;      /* time of last position change */
     user_handle_t        win;              /* window that contains the cursor */
+    user_handle_t        handle;           /* last set cursor handle */
 };
 
 struct desktop

