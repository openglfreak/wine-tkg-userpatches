From 87392a561b32f3686eba369a2e494e1c54c24178 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 23 Dec 2021 12:30:00 +0100
Subject: [PATCH 9/9] user32: Handle RIDEV_DEVNOTIFY message filter on the
 client side.

---
 dlls/user32/rawinput.c       | 31 +++++++++++++++++++++++++------
 dlls/user32/user_private.h   |  2 +-
 dlls/win32u/message.c        |  4 +++-
 dlls/win32u/ntuser_private.h |  2 +-
 server/queue.c               |  2 --
 5 files changed, 30 insertions(+), 11 deletions(-)

diff --git a/dlls/user32/rawinput.c b/dlls/user32/rawinput.c
index 11111111111..11111111111 100644
--- a/dlls/user32/rawinput.c
+++ b/dlls/user32/rawinput.c
@@ -276,18 +276,37 @@ static struct device *find_device_from_handle(HANDLE handle)
 }
 
 
-BOOL rawinput_device_get_usages(HANDLE handle, USAGE *usage_page, USAGE *usage)
+BOOL rawinput_device_get_usages(HANDLE handle, USAGE *usage_page, USAGE *usage, DWORD *flags)
 {
     struct device *device;
+    BOOL ret = TRUE;
+    unsigned int i;
 
     *usage_page = *usage = 0;
 
-    if (!(device = find_device_from_handle(handle))) return FALSE;
-    if (device->info.dwType != RIM_TYPEHID) return FALSE;
+    EnterCriticalSection(&rawinput_devices_cs);
 
-    *usage_page = device->info.hid.usUsagePage;
-    *usage = device->info.hid.usUsage;
-    return TRUE;
+    if (!(device = find_device_from_handle(handle))) ret = FALSE;
+    else if (device->info.dwType != RIM_TYPEHID) ret = FALSE;
+    else
+    {
+        *usage_page = device->info.hid.usUsagePage;
+        *usage = device->info.hid.usUsage;
+
+        for (i = 0; i < registered_count; i++)
+        {
+            if (registered_array[i].usage_page == *usage_page &&
+                registered_array[i].usage == *usage)
+            {
+                *flags = registered_array[i].flags;
+                break;
+            }
+        }
+    }
+
+    LeaveCriticalSection(&rawinput_devices_cs);
+
+    return ret;
 }
 
 
diff --git a/dlls/user32/user_private.h b/dlls/user32/user_private.h
index 11111111111..11111111111 100644
--- a/dlls/user32/user_private.h
+++ b/dlls/user32/user_private.h
@@ -72,7 +72,7 @@ struct tagWND;
 
 struct hardware_msg_data;
 extern BOOL rawinput_from_hardware_message(RAWINPUT *rawinput, const struct hardware_msg_data *msg_data);
-extern BOOL rawinput_device_get_usages(HANDLE handle, USAGE *usage_page, USAGE *usage);
+extern BOOL rawinput_device_get_usages(HANDLE handle, USAGE *usage_page, USAGE *usage, DWORD *flags);
 extern struct rawinput_thread_data *rawinput_thread_data(void);
 extern void rawinput_update_device_list(void);
 
diff --git a/dlls/win32u/message.c b/dlls/win32u/message.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/message.c
+++ b/dlls/win32u/message.c
@@ -2448,6 +2448,7 @@ NTSTATUS send_hardware_message( HWND hwnd, const INPUT *input, const RAWINPUT *r
     int prev_x, prev_y, new_x, new_y;
     USAGE hid_usage_page, hid_usage;
     NTSTATUS ret;
+    DWORD dummy;
     BOOL wait;
 
     info.type     = MSG_HARDWARE;
@@ -2465,7 +2466,8 @@ NTSTATUS send_hardware_message( HWND hwnd, const INPUT *input, const RAWINPUT *r
         }
         if (input->hi.uMsg == WM_INPUT && user_callbacks &&
             !user_callbacks->rawinput_device_get_usages( rawinput->header.hDevice,
-                                                         &hid_usage_page, &hid_usage ))
+                                                         &hid_usage_page, &hid_usage,
+                                                         &dummy ))
         {
             WARN( "unable to get HID usages for device %p\n", rawinput->header.hDevice );
             return STATUS_INVALID_HANDLE;
diff --git a/dlls/win32u/ntuser_private.h b/dlls/win32u/ntuser_private.h
index 11111111111..11111111111 100644
--- a/dlls/win32u/ntuser_private.h
+++ b/dlls/win32u/ntuser_private.h
@@ -45,7 +45,7 @@ struct user_callbacks
     BOOL (CDECL *post_dde_message)( HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam, DWORD dest_tid,
                                     DWORD type );
     BOOL (CDECL *process_rawinput_message)( MSG *msg, UINT hw_id, const struct hardware_msg_data *msg_data );
-    BOOL (CDECL *rawinput_device_get_usages)(HANDLE handle, USHORT *usage_page, USHORT *usage);
+    BOOL (CDECL *rawinput_device_get_usages)(HANDLE handle, USHORT *usage_page, USHORT *usage, DWORD *flags);
     void (WINAPI *set_standard_scroll_painted)( HWND hwnd, INT bar, BOOL visible );
     BOOL (CDECL *unpack_dde_message)( HWND hwnd, UINT message, WPARAM *wparam, LPARAM *lparam,
                                       void **buffer, size_t size );
diff --git a/server/queue.c b/server/queue.c
index 11111111111..11111111111 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -1982,8 +1982,6 @@ static int queue_rawinput_message( struct process* process, void *arg )
         device = &entry->device;
     if (!device) return 0;
 
-    if (raw_msg->message == WM_INPUT_DEVICE_CHANGE && !(device->flags & RIDEV_DEVNOTIFY)) return 0;
-
     if (raw_msg->desktop) desktop = (struct desktop *)grab_object( raw_msg->desktop );
     else if (!(desktop = get_desktop_obj( process, process->desktop, 0 ))) goto done;
 
-- 
2.36.0

