From e7873c212bf3d3ac73acdca0e44346dc929eabe0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Sat, 20 Nov 2021 19:14:31 +0100
Subject: [PATCH 3/4] WIP: ntdll: Compute lower short file name before hashing
 it.

---
 dlls/ntdll/unix/file.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/dlls/ntdll/unix/file.c b/dlls/ntdll/unix/file.c
index 7702fe26aee..44d1be97dbe 100644
--- a/dlls/ntdll/unix/file.c
+++ b/dlls/ntdll/unix/file.c
@@ -1268,7 +1268,8 @@ static ULONG hash_short_file_name( const WCHAR *name, int length, LPWSTR buffer
 {
     static const char hash_chars[32] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ012345";
 
-    LPCWSTR p, ext, end = name + length;
+    WCHAR hash_name[MAX_DIR_ENTRY_LEN + 1];
+    LPCWSTR p, ext, end = name + length, hash_end = hash_name + length;
     LPWSTR dst;
     unsigned short hash;
     int i;
@@ -1278,9 +1279,11 @@ static ULONG hash_short_file_name( const WCHAR *name, int length, LPWSTR buffer
     /* insert a better algorithm here... */
     if (!is_case_sensitive)
     {
-        for (p = name, hash = 0xbeef; p < end - 1; p++)
-            hash = (hash<<3) ^ (hash>>5) ^ towlower(*p) ^ (towlower(p[1]) << 8);
-        hash = (hash<<3) ^ (hash>>5) ^ towlower(*p); /* Last character */
+        for (p = name, dst = hash_name; p < end; p++, dst++)
+            *dst = towlower(*p);
+        for (p = hash_name, hash = 0xbeef; p < hash_end - 1; p++)
+            hash = (hash << 3) ^ (hash >> 5) ^ *p ^ (p[1] << 8);
+        hash = (hash << 3) ^ (hash >> 5) ^ *p;  /* Last character */
     }
     else
     {
-- 
2.34.1

