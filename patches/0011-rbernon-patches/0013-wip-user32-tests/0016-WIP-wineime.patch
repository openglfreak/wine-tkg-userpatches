From 420c39420586388affa55376e0510caa31573814 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Tue, 4 May 2021 14:54:05 +0200
Subject: [PATCH 16/16] WIP: wineime?

---
 configure.ac              |   1 +
 dlls/wineime/Makefile.in  |   6 ++
 dlls/wineime/main.c       | 146 ++++++++++++++++++++++++++++++++++++++
 dlls/wineime/wineime.spec |  21 ++++++
 4 files changed, 174 insertions(+)
 create mode 100644 dlls/wineime/Makefile.in
 create mode 100644 dlls/wineime/main.c
 create mode 100644 dlls/wineime/wineime.spec

diff --git a/configure.ac b/configure.ac
index 11111111111..11111111111 100644
--- a/configure.ac
+++ b/configure.ac
@@ -3214,6 +3214,7 @@ WINE_CONFIG_MAKEFILE(dlls/winecrt0)
 WINE_CONFIG_MAKEFILE(dlls/wined3d)
 WINE_CONFIG_MAKEFILE(dlls/winegstreamer)
 WINE_CONFIG_MAKEFILE(dlls/winehid.sys)
+WINE_CONFIG_MAKEFILE(dlls/wineime)
 WINE_CONFIG_MAKEFILE(dlls/winemac.drv)
 WINE_CONFIG_MAKEFILE(dlls/winemapi)
 WINE_CONFIG_MAKEFILE(dlls/wineoss.drv)
diff --git a/dlls/wineime/Makefile.in b/dlls/wineime/Makefile.in
new file mode 100644
index 00000000000..11111111111
--- /dev/null
+++ b/dlls/wineime/Makefile.in
@@ -0,0 +1,6 @@
+MODULE = wineime.dll
+
+EXTRADLLFLAGS = -mno-cygwin
+
+C_SRCS = \
+	main.c
diff --git a/dlls/wineime/main.c b/dlls/wineime/main.c
new file mode 100644
index 00000000000..11111111111
--- /dev/null
+++ b/dlls/wineime/main.c
@@ -0,0 +1,146 @@
+#include <stdarg.h>
+
+#define COBJMACROS
+#include "windef.h"
+#include "winbase.h"
+#include "wingdi.h"
+#include "imm.h"
+#include "ddk/imm.h"
+#include "objbase.h"
+#include "rpcproxy.h"
+
+#include "wine/debug.h"
+
+WINE_DEFAULT_DEBUG_CHANNEL(ime);
+
+# if 0
+# @ stdcall ImeGetImeMenuItems(long long long ptr ptr long)
+#endif
+
+HRESULT WINAPI DllCanUnloadNow(void)
+{
+    return S_FALSE;
+}
+
+HRESULT WINAPI DllGetClassObject(REFCLSID clsid, REFIID riid, void **out)
+{
+    FIXME("clsid %s, riid %s, out %p stub!\n", debugstr_guid(clsid), debugstr_guid(riid), out);
+    return CLASS_E_CLASSNOTAVAILABLE;
+}
+
+HRESULT WINAPI DllRegisterServer(void)
+{
+    return __wine_register_resources();
+}
+
+HRESULT WINAPI DllUnregisterServer(void)
+{
+    return __wine_unregister_resources();
+}
+
+BOOL WINAPI ImeConfigure(HKL hKL,HWND hWnd, DWORD dwMode, LPVOID lpData)
+{
+    FIXME("stub!\n");
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return FALSE;
+}
+
+DWORD WINAPI ImeConversionList(HIMC hIMC, LPCWSTR lpSource,
+                LPCANDIDATELIST lpCandList, DWORD dwBufLen, UINT uFlag)
+
+{
+    FIXME("stub!\n");
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return 0;
+}
+
+BOOL WINAPI ImeDestroy(UINT uForce)
+{
+    FIXME("stub!\n");
+    return TRUE;
+}
+
+UINT WINAPI ImeEnumRegisterWord(REGISTERWORDENUMPROCW lpfnEnumProc,
+                                LPCWSTR lpszReading, DWORD dwStyle,
+                                LPCWSTR lpszRegister, LPVOID lpData)
+{
+    FIXME("stub!\n");
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return 0;
+}
+
+LRESULT WINAPI ImeEscape(HIMC hIMC, UINT uSubFunc, LPVOID lpData)
+{
+    FIXME("stub!\n");
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return 0;
+}
+
+UINT WINAPI ImeGetRegisterWordStyle(UINT nItem, LPSTYLEBUFW lpStyleBuf)
+{
+    FIXME("stub!\n");
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return 0;
+}
+
+BOOL WINAPI ImeInquire(LPIMEINFO lpIMEInfo, LPWSTR lpszUIClass,
+                       LPCWSTR lpszOption)
+{
+    FIXME("stub!\n");
+    return TRUE;
+}
+
+BOOL WINAPI ImeProcessKey(HIMC hIMC, UINT vKey, LPARAM lKeyData, const LPBYTE lpbKeyState)
+{
+    FIXME("stub!\n");
+    return FALSE;
+}
+
+BOOL WINAPI ImeRegisterWord(LPCWSTR lpszReading, DWORD dwStyle,
+                            LPCWSTR lpszRegister)
+{
+    FIXME("stub!\n");
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return FALSE;
+}
+
+BOOL WINAPI ImeSelect(HIMC hIMC, BOOL fSelect)
+{
+    FIXME("stub!\n");
+    return FALSE;
+}
+
+BOOL WINAPI ImeSetActiveContext(HIMC hIMC,BOOL fFlag)
+{
+    FIXME("stub!\n");
+    return TRUE;
+}
+
+BOOL WINAPI ImeSetCompositionString(HIMC hIMC, DWORD dwIndex, LPCVOID lpComp,
+                                    DWORD dwCompLen, LPCVOID lpRead,
+                                    DWORD dwReadLen)
+{
+    FIXME("stub!\n");
+    return FALSE;
+}
+
+UINT WINAPI ImeToAsciiEx (UINT uVKey, UINT uScanCode, const LPBYTE lpbKeyState,
+                          LPDWORD lpdwTransKey, UINT fuState, HIMC hIMC)
+{
+    FIXME("stub!\n");
+    return 0;
+}
+
+BOOL WINAPI ImeUnregisterWord(LPCWSTR lpszReading, DWORD dwStyle,
+                              LPCWSTR lpszUnregister)
+{
+    FIXME("stub!\n");
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return FALSE;
+}
+
+BOOL WINAPI NotifyIME(HIMC hIMC, DWORD dwAction, DWORD dwIndex, DWORD dwValue)
+{
+    FIXME("stub!\n");
+    return FALSE;
+}
diff --git a/dlls/wineime/wineime.spec b/dlls/wineime/wineime.spec
new file mode 100644
index 00000000000..11111111111
--- /dev/null
+++ b/dlls/wineime/wineime.spec
@@ -0,0 +1,21 @@
+@ stdcall ImeConfigure(long long long ptr)
+@ stdcall ImeConversionList(long wstr ptr long long)
+@ stdcall ImeDestroy(long)
+@ stdcall ImeEnumRegisterWord(ptr wstr long wstr ptr)
+@ stdcall ImeEscape(long long ptr)
+# @ stdcall ImeGetImeMenuItems(long long long ptr ptr long)
+@ stdcall ImeGetRegisterWordStyle(long ptr)
+@ stdcall ImeInquire(ptr wstr wstr)
+@ stdcall ImeProcessKey(long long long ptr)
+@ stdcall ImeRegisterWord(wstr long wstr)
+@ stdcall ImeSelect(long long)
+@ stdcall ImeSetActiveContext(long long)
+@ stdcall ImeSetCompositionString(long long ptr long ptr long)
+@ stdcall ImeToAsciiEx(long long ptr ptr long long)
+@ stdcall ImeUnregisterWord(wstr long wstr)
+@ stdcall NotifyIME(long long long long)
+
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
-- 
2.36.0

