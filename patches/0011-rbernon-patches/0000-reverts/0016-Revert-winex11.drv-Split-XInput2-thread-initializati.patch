From 1734b91680ea2974ca803075b2228d706e016d2f Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Mon, 25 Apr 2022 05:24:27 +0200
Subject: [PATCH 16/16] Revert "winex11.drv: Split XInput2 thread
 initialization."

This reverts staging patch patches/user32-rawinput-mouse/0001-winex11.drv-Split-XInput2-thread-initialization.patch
---
 dlls/winex11.drv/mouse.c       | 46 +++++++++++-----------------------
 dlls/winex11.drv/x11drv.h      |  3 +--
 dlls/winex11.drv/x11drv_main.c |  4 +--
 3 files changed, 17 insertions(+), 36 deletions(-)

diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/mouse.c
+++ b/dlls/winex11.drv/mouse.c
@@ -278,32 +278,6 @@ static void update_relative_valuators(XIAnyClassInfo **valuators, int n_valuator
 }
 
 
-/***********************************************************************
- *              x11drv_xinput_init
- */
-void x11drv_xinput_init(void)
-{
-#ifdef HAVE_X11_EXTENSIONS_XINPUT2_H
-    struct x11drv_thread_data *data = x11drv_thread_data();
-    int major = 2, minor = 0;
-
-    if (data->xi2_state != xi_unknown) return;
-
-    if (xinput2_available &&
-        !pXIQueryVersion( data->display, &major, &minor ))
-    {
-        TRACE( "XInput2 %d.%d available\n", major, minor );
-        data->xi2_state = xi_disabled;
-    }
-    else
-    {
-        data->xi2_state = xi_unavailable;
-        WARN( "XInput 2.0 not available\n" );
-    }
-#endif
-}
-
-
 /***********************************************************************
  *              enable_xinput2
  */
@@ -315,9 +289,19 @@ static void enable_xinput2(void)
     unsigned char mask_bits[XIMaskLen(XI_LASTEVENT)];
     int count;
 
-    TRACE( "state:%d\n", data->xi2_state );
-    if (data->xi2_state != xi_disabled) return;
+    if (!xinput2_available) return;
 
+    if (data->xi2_state == xi_unknown)
+    {
+        int major = 2, minor = 0;
+        if (!pXIQueryVersion( data->display, &major, &minor )) data->xi2_state = xi_disabled;
+        else
+        {
+            data->xi2_state = xi_unavailable;
+            WARN( "X Input 2 not available\n" );
+        }
+    }
+    if (data->xi2_state == xi_unavailable) return;
     if (!pXIGetClientPointer( data->display, None, &data->xi2_core_pointer )) return;
 
     mask.mask     = mask_bits;
@@ -358,9 +342,9 @@ static void disable_xinput2(void)
     struct x11drv_thread_data *data = x11drv_thread_data();
     XIEventMask mask;
 
-    TRACE( "state:%d\n", data->xi2_state );
     if (data->xi2_state != xi_enabled) return;
 
+    TRACE( "disabling\n" );
     data->xi2_state = xi_disabled;
 
     mask.mask = NULL;
@@ -1975,9 +1959,9 @@ static BOOL X11DRV_RawMotion( XGenericEventCookie *xev )
 
 
 /***********************************************************************
- *              x11drv_xinput_load
+ *              X11DRV_XInput2_Init
  */
-void x11drv_xinput_load(void)
+void X11DRV_XInput2_Init(void)
 {
 #if defined(SONAME_LIBXI) && defined(HAVE_X11_EXTENSIONS_XINPUT2_H)
     int event, error;
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -257,8 +257,7 @@ extern void X11DRV_ThreadDetach(void) DECLSPEC_HIDDEN;
 /* X11 driver internal functions */
 
 extern void X11DRV_Xcursor_Init(void) DECLSPEC_HIDDEN;
-extern void x11drv_xinput_load(void) DECLSPEC_HIDDEN;
-extern void x11drv_xinput_init(void) DECLSPEC_HIDDEN;
+extern void X11DRV_XInput2_Init(void) DECLSPEC_HIDDEN;
 
 extern DWORD copy_image_bits( BITMAPINFO *info, BOOL is_r8g8b8, XImage *image,
                               const struct gdi_image_bits *src_bits, struct gdi_image_bits *dst_bits,
diff --git a/dlls/winex11.drv/x11drv_main.c b/dlls/winex11.drv/x11drv_main.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/x11drv_main.c
+++ b/dlls/winex11.drv/x11drv_main.c
@@ -706,7 +706,7 @@ static NTSTATUS x11drv_init( void *arg )
 #ifdef SONAME_LIBXCOMPOSITE
     X11DRV_XComposite_Init();
 #endif
-    x11drv_xinput_load();
+    X11DRV_XInput2_Init();
 
 #ifdef HAVE_XKB
     if (use_xkb) use_xkb = XkbUseExtension( gdi_display, NULL, NULL );
@@ -801,8 +801,6 @@ struct x11drv_thread_data *x11drv_init_thread_data(void)
 
     if (use_xim) X11DRV_SetupXIM();
 
-    x11drv_xinput_init();
-
     return data;
 }
 
-- 
2.39.0

