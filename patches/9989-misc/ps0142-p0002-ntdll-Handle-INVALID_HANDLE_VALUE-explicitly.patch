From: Nikolay Sivov <nsivov@codeweavers.com>
Subject: [PATCH 2/2] ntdll: Handle INVALID_HANDLE_VALUE explicitly in NtClose().
Message-Id: <20210810165120.171726-2-nsivov@codeweavers.com>
Date: Tue, 10 Aug 2021 19:51:20 +0300
In-Reply-To: <20210810165120.171726-1-nsivov@codeweavers.com>
References: <20210810165120.171726-1-nsivov@codeweavers.com>

Signed-off-by: Nikolay Sivov <nsivov@codeweavers.com>
---

Reported by Sergey Bychkow as https://bugs.winehq.org/show_bug.cgi?id=51529.

 dlls/kernel32/tests/process.c | 2 --
 dlls/ntdll/tests/om.c         | 1 -
 dlls/ntdll/unix/server.c      | 2 ++
 3 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/dlls/kernel32/tests/process.c b/dlls/kernel32/tests/process.c
index 11111111111..11111111111 100644
--- a/dlls/kernel32/tests/process.c
+++ b/dlls/kernel32/tests/process.c
@@ -5130,10 +5130,8 @@ static void test_CloseHandle(void)
 
     SetLastError(0xdeadbeef);
     ret = CloseHandle(INVALID_HANDLE_VALUE);
-todo_wine {
     ok(ret, "Unexpected return value %d.\n", ret);
     ok(GetLastError() == 0xdeadbeef, "Unexpected error.\n");
-}
 
     SetLastError(0);
     ret = CloseHandle(UlongToHandle(0xdeadbee1));
diff --git a/dlls/ntdll/tests/om.c b/dlls/ntdll/tests/om.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/tests/om.c
+++ b/dlls/ntdll/tests/om.c
@@ -2725,7 +2725,6 @@ static void test_close_handle(void)
     NTSTATUS status;
 
     status = NtClose(INVALID_HANDLE_VALUE);
-todo_wine
     ok(!status, "Unexpected status %#x.\n", status);
 
     status = NtClose(0);
diff --git a/dlls/ntdll/unix/server.c b/dlls/ntdll/unix/server.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/server.c
+++ b/dlls/ntdll/unix/server.c
@@ -1042,6 +1042,8 @@ int server_get_unix_fd( HANDLE handle, unsigned int wanted_access, int *unix_fd,
     ret = get_cached_fd( handle, &fd, type, &access, options );
     if (ret != STATUS_INVALID_HANDLE) goto done;
 
+    if (handle == INVALID_HANDLE_VALUE) return STATUS_SUCCESS;
+
     server_enter_uninterrupted_section( &fd_cache_mutex, &sigset );

     ret = get_cached_fd( handle, &fd, type, &access, options );
     if (ret == STATUS_INVALID_HANDLE)
-- 
2.35.3

