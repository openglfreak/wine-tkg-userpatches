From 220995052ae29bf019797b94acda32edea1ef2ac Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 1 Mar 2021 20:19:52 +0100
Subject: [PATCH 39/44] HACK: win32u: Always pretend that
 NtUserGetAsyncKeyState recent bit is 0.

---
 dlls/win32u/input.c | 19 +------------------
 1 file changed, 1 insertion(+), 18 deletions(-)

diff --git a/dlls/win32u/input.c b/dlls/win32u/input.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/input.c
+++ b/dlls/win32u/input.c
@@ -273,7 +273,6 @@ SHORT WINAPI NtUserGetAsyncKeyState( INT key )
 {
     volatile struct desktop_shared_memory *shared = get_desktop_shared_memory();
     BYTE state;
-    SHORT ret;
 
     if (key < 0 || key >= 256 || !shared) return 0;
 
@@ -285,23 +284,7 @@ SHORT WINAPI NtUserGetAsyncKeyState( INT key )
     }
     SHARED_READ_END( &shared->seq );
 
-    if (!(state & 0x40)) return (state & 0x80) << 8;
-
-    /* Need to make a server call to reset the last pressed bit */
-    ret = 0;
-    SERVER_START_REQ( get_key_state )
-    {
-        req->async = 1;
-        req->key = key;
-        if (!wine_server_call( req ))
-        {
-            if (reply->state & 0x40) ret |= 0x0001;
-            if (reply->state & 0x80) ret |= 0x8000;
-        }
-    }
-    SERVER_END_REQ;
-
-    return ret;
+    return (state & 0x80) << 8;
 }
 

 /***********************************************************************
