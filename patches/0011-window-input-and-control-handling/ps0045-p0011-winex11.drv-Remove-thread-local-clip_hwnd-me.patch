From b5eeba31457f9ee732311a98e18a2d33d11fdcaa Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Tue, 26 Jan 2021 09:59:04 +0100
Subject: [PATCH 11/13] winex11.drv: Remove thread-local clip_hwnd message
 window.

---
 dlls/winex11.drv/mouse.c  | 36 +++++++++---------------------------
 dlls/winex11.drv/x11drv.h |  1 -
 2 files changed, 9 insertions(+), 28 deletions(-)

diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
index e3c4f124afc..1e954cebfc7 100644
--- a/dlls/winex11.drv/mouse.c
+++ b/dlls/winex11.drv/mouse.c
@@ -496,7 +496,6 @@ void x11drv_xinput_disable( Display *display, Window window, long event_mask )
 static BOOL grab_clipping_window( const RECT *clip )
 {
 #if HAVE_X11_EXTENSIONS_XINPUT2_H
-    static const WCHAR messageW[] = {'M','e','s','s','a','g','e',0};
     struct x11drv_thread_data *data = x11drv_thread_data();
     CURSORINFO pci;
     Window clip_window;
@@ -505,11 +504,6 @@ static BOOL grab_clipping_window( const RECT *clip )
     if (!data) return FALSE;
     if (!(clip_window = init_clip_window())) return TRUE;
 
-    if (!data->clip_hwnd &&
-        !(data->clip_hwnd = CreateWindowW( messageW, NULL, 0, 0, 0, 0, 0, HWND_MESSAGE, 0,
-                                    GetModuleHandleW(0), NULL )))
-        return TRUE;
-
     if (keyboard_grabbed)
     {
         WARN( "refusing to clip to %s\n", wine_dbgstr_rect(clip) );
@@ -524,13 +518,11 @@ static BOOL grab_clipping_window( const RECT *clip )
     }
 
     /* enable XInput2 unless we are already clipping */
-    if (!data->clip_hwnd) x11drv_xinput_enable( data->display, DefaultRootWindow( data->display ), PointerMotionMask );
+    if (!clipping_cursor) x11drv_xinput_enable( data->display, DefaultRootWindow( data->display ), PointerMotionMask );
 
     if (data->xi2_state != xi_enabled)
     {
         WARN( "XInput2 not supported, refusing to clip to %s\n", wine_dbgstr_rect(clip) );
-        DestroyWindow( data->clip_hwnd );
-        data->clip_hwnd = NULL;
         ClipCursor( NULL );
         return TRUE;
     }
@@ -562,8 +554,6 @@ static BOOL grab_clipping_window( const RECT *clip )
     {
         x11drv_xinput_disable( data->display, DefaultRootWindow( data->display ), PointerMotionMask );
         XUnmapWindow( data->display, clip_window );
-        DestroyWindow( data->clip_hwnd );
-        data->clip_hwnd = NULL;
         return FALSE;
     }
     clip_rect = *clip;
@@ -587,8 +577,6 @@ void ungrab_clipping_window(void)
     XUnmapWindow( data->display, clip_window );
     if (clipping_cursor) XUngrabPointer( data->display, CurrentTime );
     clipping_cursor = FALSE;
-    if (data->clip_hwnd) DestroyWindow( data->clip_hwnd );
-    data->clip_hwnd = NULL;
     data->clip_reset = GetTickCount();
     x11drv_xinput_disable( data->display, DefaultRootWindow( data->display ), PointerMotionMask );
 }
@@ -645,7 +633,7 @@ static BOOL clip_fullscreen_window( HWND hwnd, BOOL reset )
     if (!fullscreen) return FALSE;
     if (!(thread_data = x11drv_thread_data())) return FALSE;
     if (GetTickCount() - thread_data->clip_reset < 1000) return FALSE;
-    if (!reset && clipping_cursor && thread_data->clip_hwnd) return FALSE;  /* already clipping */
+    if (!reset && clipping_cursor) return FALSE;  /* already clipping */
 
     monitor = MonitorFromWindow( hwnd, MONITOR_DEFAULTTONEAREST );
     if (!monitor) return FALSE;
@@ -693,7 +681,7 @@ static void map_event_coords( HWND hwnd, Window window, Window event_root, int x
     if (!hwnd)
     {
         thread_data = x11drv_thread_data();
-        if (!thread_data->clip_hwnd) return;
+        if (!clipping_cursor) return;
         if (thread_data->clip_window != window) return;
         pt.x += clip_rect.left;
         pt.y += clip_rect.top;
@@ -738,9 +726,7 @@ static void send_mouse_input( HWND hwnd, Window window, unsigned int state, INPU
     if (!hwnd)
     {
         struct x11drv_thread_data *thread_data = x11drv_thread_data();
-        HWND clip_hwnd = thread_data->clip_hwnd;
-
-        if (!clip_hwnd) return;
+        if (!clipping_cursor) return;
         if (thread_data->clip_window != window) return;
         __wine_send_input( hwnd, input, NULL );
         return;
@@ -1636,15 +1622,11 @@ void x11drv_desktop_clip_cursor( BOOL fullscreen, BOOL reset )
         {
             if (grab_clipping_window( &clip )) return;
         }
-        else /* if currently clipping, check if we should switch to fullscreen clipping */
-        {
-            struct x11drv_thread_data *data = x11drv_thread_data();
-            if (data && data->clip_hwnd)
-            {
-                if (EqualRect( &clip, &clip_rect ) || clip_fullscreen_window( foreground, TRUE ))
-                    return;
-            }
-        }
+        /* if currently clipping, check if we should switch to fullscreen clipping */
+        else if (clipping_cursor && EqualRect( &clip, &clip_rect ))
+            return;
+        else if (clipping_cursor && clip_fullscreen_window( foreground, TRUE ))
+            return;
 
         ungrab_clipping_window();
     }
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 1bfc6b2fe1f..9d6aef37154 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -342,7 +342,6 @@ struct x11drv_thread_data
     Window   selection_wnd;        /* window used for selection interactions */
     unsigned long warp_serial;     /* serial number of last pointer warp request */
     Window   clip_window;          /* window used for cursor clipping */
-    HWND     clip_hwnd;            /* message window stored in desktop while clipping is active */
     DWORD    clip_reset;           /* time when clipping was last reset */
 #ifdef HAVE_X11_EXTENSIONS_XINPUT2_H
     enum xi2_state xi2_state;      /* XInput2 state */

