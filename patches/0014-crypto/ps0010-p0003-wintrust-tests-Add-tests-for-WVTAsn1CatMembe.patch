From 749dcdd4a509635499e5022cf2491ef149813880 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Mon, 7 Aug 2023 11:04:34 +0200
Subject: [PATCH 03/15] wintrust/tests: Add tests for
 WVTAsn1CatMemberInfo2Decode.

Signed-off-by: Torge Matthies <openglfreak@googlemail.com>
---
 dlls/wintrust/tests/asn.c | 60 +++++++++++++++++++++++++++++++++++++++
 1 file changed, 60 insertions(+)

diff --git a/dlls/wintrust/tests/asn.c b/dlls/wintrust/tests/asn.c
index 11111111111..11111111111 100644
--- a/dlls/wintrust/tests/asn.c
+++ b/dlls/wintrust/tests/asn.c
@@ -950,6 +950,65 @@ static void test_encodeCatMemberInfo2(void)
     }
 }
 
+static GUID zero_guid;
+
+static void test_decodeCatMemberInfo2(void)
+{
+   BOOL ret;
+   LPBYTE buf;
+   DWORD size;
+   CAT_MEMBERINFO2 *info;
+
+    if (!pCryptDecodeObjectEx)
+    {
+        win_skip("CryptDecodeObjectEx() is not available. Skipping the decodeCatMemberInfo2 tests\n");
+        return;
+    }
+
+    ret = pCryptDecodeObjectEx(X509_ASN_ENCODING, CAT_MEMBERINFO2_STRUCT,
+     emptyCatMemberInfo2, sizeof(emptyCatMemberInfo2),
+     CRYPT_DECODE_ALLOC_FLAG, NULL, &buf, &size);
+    todo_wine
+    ok(ret, "CryptDecodeObjectEx failed: %08lx\n", GetLastError());
+    if (ret)
+    {
+        info = (CAT_MEMBERINFO2 *)buf;
+        ok(!memcmp(&info->SubjectGuid, &zero_guid, sizeof(GUID)),
+         "expected zero SubjectGuid\n");
+        ok(info->dwCertVersion == 0, "expected dwCertVersion == 0, got %ld\n",
+         info->dwCertVersion);
+        LocalFree(buf);
+    }
+    ret = pCryptDecodeObjectEx(X509_ASN_ENCODING, CAT_MEMBERINFO2_STRUCT,
+     catMemberInfo2WithGuid, sizeof(catMemberInfo2WithGuid),
+     CRYPT_DECODE_ALLOC_FLAG, NULL, &buf, &size);
+    todo_wine
+    ok(ret, "CryptDecodeObjectEx failed: %08lx\n", GetLastError());
+    if (ret)
+    {
+        info = (CAT_MEMBERINFO2 *)buf;
+        ok(!memcmp(&info->SubjectGuid, &guid, sizeof(GUID)),
+         "unexpected SubjectGuid\n");
+        ok(info->dwCertVersion == 0, "expected dwCertVersion == 0, got %ld\n",
+         info->dwCertVersion);
+        LocalFree(buf);
+    }
+    ret = pCryptDecodeObjectEx(X509_ASN_ENCODING, CAT_MEMBERINFO2_STRUCT,
+     catMemberInfo2WithSpecialGuid, sizeof(catMemberInfo2WithSpecialGuid),
+     CRYPT_DECODE_ALLOC_FLAG, NULL, &buf, &size);
+    todo_wine
+    ok(ret, "CryptDecodeObjectEx failed: %08lx\n", GetLastError());
+    if (ret)
+    {
+        info = (CAT_MEMBERINFO2 *)buf;
+        ok(!memcmp(&info->SubjectGuid, &specialGuid, sizeof(GUID)),
+         "unexpected SubjectGuid\n");
+        ok(info->dwCertVersion == 0x200,
+         "expected dwCertVersion == 0x200, got 0x%lx\n", info->dwCertVersion);
+        LocalFree(buf);
+    }
+}
+
 static const BYTE emptyCatNameValue[] = {
 0x30,0x07,0x1e,0x00,0x02,0x01,0x00,0x04,0x00 };
 static const BYTE catNameValueWithTag[] = {
@@ -1255,6 +1314,7 @@ START_TEST(asn)
     test_encodeCatMemberInfo();
     test_decodeCatMemberInfo();
     test_encodeCatMemberInfo2();
+    test_decodeCatMemberInfo2();
     test_encodeCatNameValue();
     test_decodeCatNameValue();
     test_encodeSpOpusInfo();
-- 
0.0.0

