From 2d5db4e6f62cd9df06d9b123b4c45a6f773e97ad Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Sat, 26 Feb 2022 18:05:48 +0100
Subject: [PATCH 14/20] HACK: winegstreamer: Fake H264 timestamps if framerate
 cannot be trusted.

Fixes MK11 video framerate.

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=45988
Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=47084
Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=49715
Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=52183
CW-Bug-Id: #16839
CW-Bug-Id: #18678
CW-Bug-Id: #19362
---
 dlls/winegstreamer/h264_decoder.c | 12 ++++++++++++
 dlls/winegstreamer/wg_transform.c |  9 +++++++--
 2 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/dlls/winegstreamer/h264_decoder.c b/dlls/winegstreamer/h264_decoder.c
index 11111111111..11111111111 100644
--- a/dlls/winegstreamer/h264_decoder.c
+++ b/dlls/winegstreamer/h264_decoder.c
@@ -49,6 +49,8 @@ struct h264_decoder
     IMFMediaType *input_type;
     IMFMediaType *output_type;
 
+    LONGLONG last_timestamp;
+
     struct wg_transform *wg_transform;
     struct wg_format wg_format;
 };
@@ -63,6 +65,7 @@ static HRESULT try_create_wg_transform(struct h264_decoder *decoder)
     struct wg_format input_format;
     struct wg_format output_format;
 
+    decoder->last_timestamp = 0;
     memset(&decoder->wg_format, 0, sizeof(decoder->wg_format));
     if (decoder->wg_transform)
         wg_transform_destroy(decoder->wg_transform);
@@ -592,6 +595,15 @@ static HRESULT WINAPI transform_ProcessOutput(IMFTransform *iface, DWORD flags,
     else
         hr = wg_transform_read_data(decoder->wg_transform, wg_sample);
 
+    if (!(wg_sample->flags & (WG_SAMPLE_FLAG_HAS_TIMESTAMP|WG_SAMPLE_FLAG_HAS_DURATION)) &&
+            hr == S_OK)
+    {
+        wg_sample->timestamp = decoder->last_timestamp;
+        wg_sample->duration = (UINT64)10000000 * (UINT32)frame_rate / (frame_rate >> 32);
+        wg_sample->flags |= (WG_SAMPLE_FLAG_HAS_TIMESTAMP|WG_SAMPLE_FLAG_HAS_DURATION);
+        decoder->last_timestamp += wg_sample->duration;
+    }
+
     if (hr == MF_E_TRANSFORM_STREAM_CHANGE)
     {
         decoder->wg_format = wg_sample->format;
diff --git a/dlls/winegstreamer/wg_transform.c b/dlls/winegstreamer/wg_transform.c
index 11111111111..11111111111 100644
--- a/dlls/winegstreamer/wg_transform.c
+++ b/dlls/winegstreamer/wg_transform.c
@@ -52,6 +52,7 @@ struct wg_transform
     GstBufferList *input;
     guint input_max_length;
     bool enable_pool;
+    bool broken_timestamps;
 
     pthread_mutex_t mutex;
     GstCaps *sink_caps, *output_caps;
@@ -326,9 +327,10 @@ NTSTATUS wg_transform_create(void *args)
     {
         case WG_MAJOR_TYPE_H264:
             transform->input_max_length = 16;
-            if (!(element = create_element("h264parse", "base"))
-                    || !transform_append_element(transform, element, &first, &last))
+            if ((element = create_element("h264parse", "base"))
+                    && !transform_append_element(transform, element, &first, &last))
                 goto out;
+            transform->broken_timestamps = !element;
             /* fallthrough */
         case WG_MAJOR_TYPE_WMA:
             if (!(element = transform_find_element(GST_ELEMENT_FACTORY_TYPE_DECODER, src_caps, raw_caps))
@@ -575,5 +577,8 @@ NTSTATUS wg_transform_read_data(void *args)
     }
     pthread_mutex_unlock(&transform->mutex);
 
+    if (transform->broken_timestamps)
+        sample->flags &= ~(WG_SAMPLE_FLAG_HAS_TIMESTAMP|WG_SAMPLE_FLAG_HAS_DURATION);
+
     return status;
 }
-- 
2.35.1

