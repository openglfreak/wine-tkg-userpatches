From b7a533e161717317ef8ec709db3993c33d28f84c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 8 Feb 2021 17:19:43 +0100
Subject: [PATCH 23/26] server: Replace tid with async in get_key_state
 request.

(for bioshock 2 remastered)
---
 dlls/user32/input.c             |  4 +---
 dlls/wineandroid.drv/keyboard.c |  2 +-
 dlls/winemac.drv/keyboard.c     |  2 +-
 dlls/winex11.drv/keyboard.c     |  2 +-
 include/wine/server_protocol.h  |  4 ++--
 server/protocol.def             |  4 ++--
 server/queue.c                  | 14 +++++---------
 server/request.h                |  2 +-
 server/trace.c                  |  2 +-
 9 files changed, 15 insertions(+), 21 deletions(-)

diff --git a/dlls/user32/input.c b/dlls/user32/input.c
index 33fb332382b..81a47658e66 100644
--- a/dlls/user32/input.c
+++ b/dlls/user32/input.c
@@ -408,7 +408,7 @@ SHORT WINAPI DECLSPEC_HOTPATCH GetAsyncKeyState( INT key )
     ret = 0;
     SERVER_START_REQ( get_key_state )
     {
-        req->tid = 0;
+        req->async = 1;
         req->key = key;
         if (!wine_server_call( req ))
         {
@@ -529,7 +529,6 @@ SHORT WINAPI DECLSPEC_HOTPATCH GetKeyState(INT vkey)
 
     SERVER_START_REQ( get_key_state )
     {
-        req->tid = GetCurrentThreadId();
         req->key = vkey;
         if (!wine_server_call( req )) retval = (signed char)(reply->state & 0x81);
     }
@@ -552,7 +551,6 @@ BOOL WINAPI DECLSPEC_HOTPATCH GetKeyboardState( LPBYTE state )
     memset( state, 0, 256 );
     SERVER_START_REQ( get_key_state )
     {
-        req->tid = GetCurrentThreadId();
         req->key = -1;
         wine_server_set_reply( req, state, 256 );
         ret = !wine_server_call_err( req );
diff --git a/dlls/wineandroid.drv/keyboard.c b/dlls/wineandroid.drv/keyboard.c
index 1af8a98f1f9..dc58dd2639b 100644
--- a/dlls/wineandroid.drv/keyboard.c
+++ b/dlls/wineandroid.drv/keyboard.c
@@ -660,7 +660,7 @@ static BOOL get_async_key_state( BYTE state[256] )
 
     SERVER_START_REQ( get_key_state )
     {
-        req->tid = 0;
+        req->async = 1;
         req->key = -1;
         wine_server_set_reply( req, state, 256 );
         ret = !wine_server_call( req );
diff --git a/dlls/winemac.drv/keyboard.c b/dlls/winemac.drv/keyboard.c
index 41919baafc7..a1e6a527a86 100644
--- a/dlls/winemac.drv/keyboard.c
+++ b/dlls/winemac.drv/keyboard.c
@@ -942,7 +942,7 @@ static BOOL get_async_key_state(BYTE state[256])
 
     SERVER_START_REQ(get_key_state)
     {
-        req->tid = 0;
+        req->async = 1;
         req->key = -1;
         wine_server_set_reply(req, state, 256);
         ret = !wine_server_call(req);
diff --git a/dlls/winex11.drv/keyboard.c b/dlls/winex11.drv/keyboard.c
index a03c9a49a52..fc2f1cae1d6 100644
--- a/dlls/winex11.drv/keyboard.c
+++ b/dlls/winex11.drv/keyboard.c
@@ -1161,7 +1161,7 @@ static BOOL get_async_key_state( BYTE state[256] )
 
     SERVER_START_REQ( get_key_state )
     {
-        req->tid = 0;
+        req->async = 1;
         req->key = -1;
         wine_server_set_reply( req, state, 256 );
         ret = !wine_server_call( req );
diff --git a/include/wine/server_protocol.h b/include/wine/server_protocol.h
index ab2eea936db..4f17b6f4fcb 100644
--- a/include/wine/server_protocol.h
+++ b/include/wine/server_protocol.h
@@ -4150,7 +4150,7 @@ struct get_last_input_time_reply
 struct get_key_state_request
 {
     struct request_header __header;
-    thread_id_t    tid;
+    int            async;
     int            key;
     char __pad_20[4];
 };
@@ -6780,7 +6780,7 @@ union generic_reply
 
 /* ### protocol_version begin ### */
 
-#define SERVER_PROTOCOL_VERSION 708
+#define SERVER_PROTOCOL_VERSION 709
 
 /* ### protocol_version end ### */
 
diff --git a/server/protocol.def b/server/protocol.def
index ead8cdf4497..791bfdfd10f 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -2956,9 +2956,9 @@ enum coords_relative
 @END
 
 
-/* Retrieve queue keyboard state for a given thread */
+/* Retrieve queue keyboard state for current thread or global async state */
 @REQ(get_key_state)
-    thread_id_t    tid;           /* id of thread */
+    int            async;         /* whether to query the async state */
     int            key;           /* optional key code or -1 */
 @REPLY
     unsigned char  state;         /* state of specified key */
diff --git a/server/queue.c b/server/queue.c
index 31ba49943f5..9aff492060b 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -3213,14 +3213,13 @@ DECL_HANDLER(get_thread_input)
 }
 
 
-/* retrieve queue keyboard state for a given thread */
+/* retrieve queue keyboard state for current thread or global async state */
 DECL_HANDLER(get_key_state)
 {
-    struct thread *thread;
     struct desktop *desktop;
     data_size_t size = min( 256, get_reply_max_size() );
 
-    if (!req->tid)  /* get global async key state */
+    if (req->async)  /* get global async key state */
     {
         if (!(desktop = get_thread_desktop( current, 0 ))) return;
         if (req->key >= 0)
@@ -3236,20 +3235,17 @@ DECL_HANDLER(get_key_state)
     else
     {
         unsigned char *keystate;
-        if (!(thread = get_thread_from_id( req->tid ))) return;
-        if (thread->queue)
+        if (current->queue)
         {
             if (req->key >= 0)
             {
                 /* synchronize with desktop keystate, but _only_ if req->key is given */
-                synchronize_input_key_state( thread->queue->input );
-                reply->state = thread->queue->input->keystate[req->key & 0xff];
+                synchronize_input_key_state( current->queue->input );
+                reply->state = current->queue->input->keystate[req->key & 0xff];
             }
-            set_reply_data( thread->queue->input->keystate, size );
-            release_object( thread );
+            set_reply_data( current->queue->input->keystate, size );
             return;
         }
-        release_object( thread );
 
         /* fallback to desktop keystate */
         if (!(desktop = get_thread_desktop( current, 0 ))) return;
diff --git a/server/request.h b/server/request.h
index 1f3090598c6..53ad4852b4b 100644
--- a/server/request.h
+++ b/server/request.h
@@ -1869,7 +1869,7 @@ C_ASSERT( sizeof(struct get_thread_input_reply) == 48 );
 C_ASSERT( sizeof(struct get_last_input_time_request) == 16 );
 C_ASSERT( FIELD_OFFSET(struct get_last_input_time_reply, time) == 8 );
 C_ASSERT( sizeof(struct get_last_input_time_reply) == 16 );
-C_ASSERT( FIELD_OFFSET(struct get_key_state_request, tid) == 12 );
+C_ASSERT( FIELD_OFFSET(struct get_key_state_request, async) == 12 );
 C_ASSERT( FIELD_OFFSET(struct get_key_state_request, key) == 16 );
 C_ASSERT( sizeof(struct get_key_state_request) == 24 );
 C_ASSERT( FIELD_OFFSET(struct get_key_state_reply, state) == 8 );
diff --git a/server/trace.c b/server/trace.c
index 428c08fb8c0..49dc348b84b 100644
--- a/server/trace.c
+++ b/server/trace.c
@@ -3524,7 +3524,7 @@ static void dump_get_last_input_time_reply( const struct get_last_input_time_rep
 
 static void dump_get_key_state_request( const struct get_key_state_request *req )
 {
-    fprintf( stderr, " tid=%04x", req->tid );
+    fprintf( stderr, " async=%d", req->async );
     fprintf( stderr, ", key=%d", req->key );
 }
 

