From 9e16d341c98000e42dc2f9455efb69fa950a72b5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 17 Jan 2020 12:45:32 +0100
Subject: [PATCH 02/16] winex11.drv: Support CurrentTime value in
 EVENT_x11_time_to_win32_time.

CurrentTime is 0 so we cannot use 0 anymore to retrieve the current
offset; move it outside of the function instead.
---
 dlls/winex11.drv/event.c | 56 +++++++++++++++++++++-------------------
 1 file changed, 29 insertions(+), 27 deletions(-)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index 4f8df0919fa..551aaacb82d 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -522,39 +522,41 @@ DWORD CDECL X11DRV_MsgWaitForMultipleObjectsEx( DWORD count, const HANDLE *handl
     return ret;
 }
 
+static DWORD time_to_tick_diff = 0;
+
 /***********************************************************************
  *           EVENT_x11_time_to_win32_time
  *
- * Make our timer and the X timer line up as best we can
- *  Pass 0 to retrieve the current adjustment value (times -1)
+ * Make our timer and the X timer line up as best we can.
  */
 DWORD EVENT_x11_time_to_win32_time(Time time)
 {
-  static DWORD adjust = 0;
-  DWORD now = GetTickCount();
-  DWORD ret;
-
-  if (! adjust && time != 0)
-  {
-    ret = now;
-    adjust = time - now;
-  }
-  else
-  {
-      /* If we got an event in the 'future', then our clock is clearly wrong. 
-         If we got it more than 10000 ms in the future, then it's most likely
-         that the clock has wrapped.  */
-
-      ret = time - adjust;
-      if (ret > now && ((ret - now) < 10000) && time != 0)
-      {
-        adjust += ret - now;
-        ret    -= ret - now;
-      }
-  }
+    DWORD now = GetTickCount();
+    DWORD diff = time - now;
+    DWORD ret;
 
-  return ret;
+    if (time == CurrentTime)
+        return now;
 
+    if (!time_to_tick_diff)
+    {
+        time_to_tick_diff = diff;
+        ret = now;
+    }
+    else
+    {
+        /* If we got an event in the 'future', then our clock is clearly wrong.
+         * If we got it more than 10000 ms in the future, then it's most likely
+         * that the clock has wrapped. */
+        ret = time - time_to_tick_diff;
+        if (ret > now && ((ret - now) < 10000))
+        {
+            time_to_tick_diff += ret - now;
+            ret               -= ret - now;
+        }
+    }
+
+    return ret;
 }
 
 /*******************************************************************
@@ -589,10 +591,10 @@ static void set_input_focus( struct x11drv_win_data *data )
 
     if (!data->whole_window) return;
 
-    if (EVENT_x11_time_to_win32_time(0))
+    if (time_to_tick_diff)
         /* ICCCM says don't use CurrentTime, so try to use last message time if possible */
         /* FIXME: this is not entirely correct */
-        timestamp = GetMessageTime() - EVENT_x11_time_to_win32_time(0);
+        timestamp = GetMessageTime() + time_to_tick_diff;
     else
         timestamp = CurrentTime;
 

