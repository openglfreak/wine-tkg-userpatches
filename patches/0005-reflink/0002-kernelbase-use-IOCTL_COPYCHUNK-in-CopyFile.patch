From: "Alex Xu (Hello71)" <alex_y_xu@yahoo.ca>
Subject: [PATCH v3 2/5] kernelbase: use IOCTL_COPYCHUNK in CopyFile*
Message-Id: <20220127215056.243525-3-alex_y_xu@yahoo.ca>
Date: Thu, 27 Jan 2022 16:50:53 -0500
In-Reply-To: <20220127215056.243525-1-alex_y_xu@yahoo.ca>
References: <20220127215056.243525-1-alex_y_xu@yahoo.ca>

---
 dlls/kernelbase/file.c | 53 ++++++++++++++++++------------------------
 1 file changed, 23 insertions(+), 30 deletions(-)

diff --git a/dlls/kernelbase/file.c b/dlls/kernelbase/file.c
index 11111111111..11111111111 100644
--- a/dlls/kernelbase/file.c
+++ b/dlls/kernelbase/file.c
@@ -500,14 +500,17 @@ BOOL WINAPI DECLSPEC_HOTPATCH AreFileApisANSI(void)
 BOOL WINAPI CopyFileExW( const WCHAR *source, const WCHAR *dest, LPPROGRESS_ROUTINE progress,
                          void *param, BOOL *cancel_ptr, DWORD flags )
 {
-    static const int buffer_size = 65536;
     HANDLE h1, h2;
     FILE_NETWORK_OPEN_INFORMATION info;
     FILE_BASIC_INFORMATION basic_info;
     IO_STATUS_BLOCK io;
     DWORD count;
     BOOL ret = FALSE;
-    char *buffer;
+    SRV_COPYCHUNK_COPY copychunk = {
+        .ChunkCount = 1,
+        .Chunk = { [0] = { .Length = 1UL<<30 } }
+    };
+    SRV_COPYCHUNK_RESPONSE copychunk_resp;
     LARGE_INTEGER size;
     LARGE_INTEGER transferred;
     DWORD cbret;
@@ -518,11 +521,6 @@ BOOL WINAPI CopyFileExW( const WCHAR *source, const WCHAR *dest, LPPROGRESS_ROUT
         SetLastError( ERROR_INVALID_PARAMETER );
         return FALSE;
     }
-    if (!(buffer = HeapAlloc( GetProcessHeap(), 0, buffer_size )))
-    {
-        SetLastError( ERROR_NOT_ENOUGH_MEMORY );
-        return FALSE;
-    }
 
     TRACE("%s -> %s, %lx\n", debugstr_w(source), debugstr_w(dest), flags);
 
@@ -540,14 +538,12 @@ BOOL WINAPI CopyFileExW( const WCHAR *source, const WCHAR *dest, LPPROGRESS_ROUT
                            NULL, OPEN_EXISTING, 0, 0 )) == INVALID_HANDLE_VALUE)
     {
         WARN("Unable to open source %s\n", debugstr_w(source));
-        HeapFree( GetProcessHeap(), 0, buffer );
         return FALSE;
     }
 
     if (!set_ntstatus( NtQueryInformationFile( h1, &io, &info, sizeof(info), FileNetworkOpenInformation )))
     {
         WARN("GetFileInformationByHandle returned error for %s\n", debugstr_w(source));
-        HeapFree( GetProcessHeap(), 0, buffer );
         CloseHandle( h1 );
         return FALSE;
     }
@@ -563,7 +559,6 @@ BOOL WINAPI CopyFileExW( const WCHAR *source, const WCHAR *dest, LPPROGRESS_ROUT
         }
         if (same_file)
         {
-            HeapFree( GetProcessHeap(), 0, buffer );
             CloseHandle( h1 );
             SetLastError( ERROR_SHARING_VIOLATION );
             return FALSE;
@@ -579,7 +574,6 @@ BOOL WINAPI CopyFileExW( const WCHAR *source, const WCHAR *dest, LPPROGRESS_ROUT
                            info.FileAttributes, h1 )) == INVALID_HANDLE_VALUE)
     {
         WARN("Unable to open dest %s\n", debugstr_w(dest));
-        HeapFree( GetProcessHeap(), 0, buffer );
         CloseHandle( h1 );
         return FALSE;
     }
@@ -607,19 +601,20 @@ BOOL WINAPI CopyFileExW( const WCHAR *source, const WCHAR *dest, LPPROGRESS_ROUT
         }
     }
 
-    while (ReadFile( h1, buffer, buffer_size, &count, NULL ) && count)
+    /* wine extension: IOCTL_COPYCHUNK works even on local files */
+    ret = DeviceIoControl( h1, IOCTL_PREPARE_COPYCHUNK, NULL, 0,
+                           &copychunk.SourceFile, sizeof(copychunk.SourceFile), &count, NULL );
+    if (ret)
     {
-        char *p = buffer;
-        while (count != 0)
-        {
-            DWORD res;
-            if (!WriteFile( h2, p, count, &res, NULL ) || !res) goto done;
-            p += res;
-            count -= res;
+        do {
+            ret = DeviceIoControl( h2, IOCTL_COPYCHUNK, &copychunk, sizeof(copychunk),
+                                   &copychunk_resp, sizeof(copychunk_resp), &count, NULL );
+            copychunk.Chunk[0].SourceOffset.QuadPart += copychunk_resp.TotalBytesWritten;
+            copychunk.Chunk[0].DestinationOffset.QuadPart += copychunk_resp.TotalBytesWritten;
 
             if (progress)
             {
-                transferred.QuadPart += res;
+                transferred.QuadPart += copychunk_resp.TotalBytesWritten;
                 cbret = progress( size, transferred, size, transferred, 1,
                                   CALLBACK_CHUNK_FINISHED, h1, h2, param );
                 if (cbret == PROGRESS_QUIET)
@@ -637,18 +632,16 @@ BOOL WINAPI CopyFileExW( const WCHAR *source, const WCHAR *dest, LPPROGRESS_ROUT
                     goto done;
                 }
             }
-        }
+        } while (ret && copychunk_resp.TotalBytesWritten);
+        /* Maintain the timestamp of source file to destination file */
+        basic_info.CreationTime = info.CreationTime;
+        basic_info.LastAccessTime = info.LastAccessTime;
+        basic_info.LastWriteTime = info.LastWriteTime;
+        basic_info.ChangeTime = info.ChangeTime;
+        basic_info.FileAttributes = 0;
+        NtSetInformationFile( h2, &io, &basic_info, sizeof(basic_info), FileBasicInformation );
     }
-    ret =  TRUE;
 done:
-    /* Maintain the timestamp of source file to destination file */
-    basic_info.CreationTime = info.CreationTime;
-    basic_info.LastAccessTime = info.LastAccessTime;
-    basic_info.LastWriteTime = info.LastWriteTime;
-    basic_info.ChangeTime = info.ChangeTime;
-    basic_info.FileAttributes = 0;
-    NtSetInformationFile( h2, &io, &basic_info, sizeof(basic_info), FileBasicInformation );
-    HeapFree( GetProcessHeap(), 0, buffer );
     CloseHandle( h1 );
     CloseHandle( h2 );

     if (ret) SetLastError( 0 );
-- 
2.35.3

