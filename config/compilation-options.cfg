#!/hint/bash
# shellcheck disable=SC2034

### Compilation options ###

# x86-64 Feature levels:
_gcc_version="$(gcc -dumpversion)"
_mingw_gcc_version="$(x86_64-w64-mingw32-gcc -dumpversion)"
if [ "${_gcc_version%%.*}" -ge 11 ] && [ "${_mingw_gcc_version%%.*}" -ge 11 ]; then
    _x86_64_base=''
    _x86_64_v2='-march=x86-64-v2'
    _x86_64_v3='-march=x86-64-v3'
    _x86_64_v4='-march=x86-64-v4'
else
    _x86_64_base='-mmmx -msse -msse2 -mno-sahf -mfxsr'
    _x86_64_v2="${_x86_64_base} -msahf -mcx16 -mpopcnt -msse3 -msse4.1 -msse4.2 -mssse3"
    _x86_64_v3="${_x86_64_v2} -mavx -mavx2 -mbmi -mbmi2 -mf16c -mfma -mlzcnt -mmovbe -mxsave"
    _x86_64_v4="${_x86_64_v3} -mavx512f -mavx512bw -mavx512cd -mavx512dq -mavx512vl"
fi

# Preprocessor, compiler, and linker flags:
export CPPFLAGS="-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0"
_common_cflags="-fdebug-prefix-map=${PWD:-$(pwd)}/src=. ${_x86_64_v3} -mtune=${_mtune:-native} -O3 -pipe -fomit-frame-pointer -floop-strip-mine -fno-semantic-interposition -fipa-pta -funroll-loops -fstdarg-opt" #-fgraphite-identity -floop-nest-optimize
_native_common_cflags='-fuse-ld=gold' #-flto=auto -flto-partition=one -fdevirtualize-at-ltrans -fgraphite-identity -floop-nest-optimize
if [ "x${_frogminer_enable_debug:-}" = 'xtrue' ]; then
    _common_cflags="-g3 -fvar-tracking-assignments ${_common_cflags}"
    _GCC_FLAGS="${_common_cflags} ${_native_common_cflags} -gdwarf-5 ${CPPFLAGS}"
    _LD_FLAGS="${_GCC_FLAGS} -gsplit-dwarf -Wl,-O2,--sort-common,--as-needed"
    export CROSSDEBUG=split
else
    export CPPFLAGS="${CPPFLAGS} -DNDEBUG -D_NDEBUG"
    _GCC_FLAGS="${_common_cflags} ${_native_common_cflags} ${CPPFLAGS}"
    _LD_FLAGS="${_GCC_FLAGS} -Wl,-O2,--sort-common,--as-needed"
fi
_CROSS_FLAGS="${_common_cflags} ${CPPFLAGS}"
_CROSS_LD_FLAGS="${_CROSS_FLAGS} -Wl,-O2,--sort-common,--as-needed"

# Needed for ccache:
export SOURCE_DATE_EPOCH=0
