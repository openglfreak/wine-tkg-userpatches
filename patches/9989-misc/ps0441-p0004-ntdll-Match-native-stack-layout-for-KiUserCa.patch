From 3b0985fd4351f94c716415684ac8f2143990eb88 Mon Sep 17 00:00:00 2001
From: Torge Matthies <tmatthies@codeweavers.com>
Date: Thu, 27 Oct 2022 21:31:53 +0200
Subject: [PATCH 4/4] ntdll: Match native stack layout for
 KiUserCallbackDispatcher.

Signed-off-by: Torge Matthies <tmatthies@codeweavers.com>
---
 dlls/ntdll/signal_x86_64.c      |  6 +++---
 dlls/ntdll/unix/signal_x86_64.c | 29 ++++++++++++++++++++++-------
 2 files changed, 25 insertions(+), 10 deletions(-)

diff --git a/dlls/ntdll/signal_x86_64.c b/dlls/ntdll/signal_x86_64.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/signal_x86_64.c
+++ b/dlls/ntdll/signal_x86_64.c
@@ -702,9 +702,9 @@ void WINAPI user_callback_dispatcher( ULONG id, void *args, ULONG len )
  */
 __ASM_GLOBAL_FUNC( KiUserCallbackDispatcher,
                   ".byte 0x0f, 0x1f, 0x44, 0x00, 0x00\n\t" /* Overwatch 2 replaces the first 5 bytes with a jump */
-                  "movq 0x8(%rsp),%rcx\n\t"   /* id */
-                  "movq 0x10(%rsp),%rdx\n\t"  /* args */
-                  "movq 0x18(%rsp),%r8\n\t"   /* len */
+                  "movq 0x20(%rsp), %rdx\n\t"  /* args */
+                  "movl 0x28(%rsp), %r8d\n\t"  /* len */
+                  "movl 0x2c(%rsp), %ecx\n\t"  /* id */
                   "andq $0xFFFFFFFFFFFFFFF0, %rsp\n\t"
                   __ASM_SEH(".seh_endprologue\n\t")
                   "call " __ASM_NAME("user_callback_dispatcher") "\n\t"
diff --git a/dlls/ntdll/unix/signal_x86_64.c b/dlls/ntdll/unix/signal_x86_64.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/signal_x86_64.c
+++ b/dlls/ntdll/unix/signal_x86_64.c
@@ -1658,9 +1658,24 @@ __ASM_GLOBAL_FUNC( call_user_mode_callback,
                    "movw 0x330(%r11),%fs\n"    /* amd64_thread_data()->fs */
                    "1:\n\t"
 #endif
-                   "movq %rcx,%r9\n\t"         /* func */
+                   "movq %rdx,%r8\n\t"         /* stack */
                    "movq %rdx,%rsp\n\t"        /* stack */
-                   "jmpq *%r9" )
+                   "movq $0x246,%r11\n\t"
+
+                   "xorq %rax,%rax\n\t"
+                   "xorq %rbx,%rbx\n\t"
+                   "xorq %rdx,%rdx\n\t"
+                   "xorq %rsi,%rsi\n\t"
+                   "xorq %rdi,%rdi\n\t"
+                   "xorq %rbp,%rbp\n\t"
+                   "xorq %r9,%r9\n\t"
+                   "xorq %r10,%r10\n\t"
+                   "xorq %r12,%r12\n\t"
+                   "xorq %r13,%r13\n\t"
+                   "xorq %r14,%r14\n\t"
+                   "xorq %r15,%r15\n\t"
+
+                   "jmpq *%rcx" )
 
 
 /***********************************************************************
@@ -1727,7 +1742,7 @@ __ASM_GLOBAL_FUNC( user_mode_callback_return,
 NTSTATUS WINAPI KeUserModeCallback( ULONG id, const void *args, ULONG len, void **ret_ptr, ULONG *ret_len )
 {
     struct syscall_frame *frame = amd64_thread_data()->syscall_frame;
-    void *args_data = (void *)((frame->rsp - len) & ~15);
+    void *args_data = (void *)(((frame->rsp - len) & ~15) - 8);
     ULONG_PTR *stack = args_data;
 
     /* if we have no syscall frame, call the callback directly */
@@ -1742,12 +1757,12 @@ NTSTATUS WINAPI KeUserModeCallback( ULONG id, const void *args, ULONG len, void
         return STATUS_STACK_OVERFLOW;
 
     memcpy( args_data, args, len );
+    stack = stack - 4;
     *(--stack) = 0;
-    *(--stack) = 0;
-    *(--stack) = len;
+    ((ULONG*)--stack)[1] = id;
+    ((ULONG*)stack)[0] = len;
     *(--stack) = (ULONG_PTR)args_data;
-    *(--stack) = id;
-    *(--stack) = 0xdeadbabe;
+    stack = stack - 4;
 
     return call_user_mode_callback( pKiUserCallbackDispatcher, stack, ret_ptr, ret_len, NtCurrentTeb() );
 }
-- 
2.40.0

