From 2b262571b5ece30501b6548ab7d2a40cdeac4028 Mon Sep 17 00:00:00 2001
From: Richard Yao <ryao@gentoo.org>
Date: Sun, 2 Aug 2020 15:35:53 -0400
Subject: [PATCH] kernelbase: Implement TzSpecificLocalTimeToSystemTimeEx()

We also reimplement TzSpecificLocalTimeToSystemTime using
TzSpecificLocalTimeToSystemTimeEx.

Signed-off-by: Richard Yao <ryao@gentoo.org>
---
 dlls/kernelbase/kernelbase.spec |  2 +-
 dlls/kernelbase/locale.c        | 42 +++++++++++++++++++++++++--------
 2 files changed, 33 insertions(+), 11 deletions(-)

diff --git a/dlls/kernelbase/kernelbase.spec b/dlls/kernelbase/kernelbase.spec
index 11111111111..11111111111 100644
--- a/dlls/kernelbase/kernelbase.spec
+++ b/dlls/kernelbase/kernelbase.spec
@@ -1647,7 +1647,7 @@
 @ stdcall TryEnterCriticalSection(ptr) ntdll.RtlTryEnterCriticalSection
 @ stdcall TrySubmitThreadpoolCallback(ptr ptr ptr)
 @ stdcall TzSpecificLocalTimeToSystemTime(ptr ptr ptr)
-@ stub TzSpecificLocalTimeToSystemTimeEx
+@ stdcall TzSpecificLocalTimeToSystemTimeEx(ptr ptr ptr)
 @ stdcall UnhandledExceptionFilter(ptr)
 @ stdcall UnlockFile(long long long long long)
 @ stdcall UnlockFileEx(long long long long ptr)
diff --git a/dlls/kernelbase/locale.c b/dlls/kernelbase/locale.c
index 11111111111..11111111111 100644
--- a/dlls/kernelbase/locale.c
+++ b/dlls/kernelbase/locale.c
@@ -6976,39 +6976,61 @@ BOOL WINAPI DECLSPEC_HOTPATCH SystemTimeToTzSpecificLocalTime( const TIME_ZONE_I
 
 
 /***********************************************************************
- *	TzSpecificLocalTimeToSystemTime   (kernelbase.@)
+ *	TzSpecificLocalTimeToSystemTimeEx   (kernelbase.@)
  */
-BOOL WINAPI DECLSPEC_HOTPATCH TzSpecificLocalTimeToSystemTime( const TIME_ZONE_INFORMATION *info,
+BOOL WINAPI DECLSPEC_HOTPATCH TzSpecificLocalTimeToSystemTimeEx( const DYNAMIC_TIME_ZONE_INFORMATION *info,
                                                                const SYSTEMTIME *local,
                                                                SYSTEMTIME *system )
 {
-    TIME_ZONE_INFORMATION tzinfo;
+    DYNAMIC_TIME_ZONE_INFORMATION tzinfo;
     LARGE_INTEGER ft;
+    LONG bias = 0;
 
     if (!info)
     {
-        RtlQueryTimeZoneInformation( (RTL_TIME_ZONE_INFORMATION *)&tzinfo );
+        RtlQueryDynamicTimeZoneInformation( (RTL_TIME_ZONE_INFORMATION *)&tzinfo );
         info = &tzinfo;
     }
 
     if (!SystemTimeToFileTime( local, (FILETIME *)&ft )) return FALSE;
-    switch (get_timezone_id( info, ft, TRUE ))
+    switch (get_timezone_id( (const TIME_ZONE_INFORMATION *) info, ft, TRUE ))
     {
     case TIME_ZONE_ID_UNKNOWN:
-        ft.QuadPart += info->Bias * (LONGLONG)600000000;
-        break;
-    case TIME_ZONE_ID_STANDARD:
-        ft.QuadPart += (info->Bias + info->StandardBias) * (LONGLONG)600000000;
         break;
     case TIME_ZONE_ID_DAYLIGHT:
-        ft.QuadPart += (info->Bias + info->DaylightBias) * (LONGLONG)600000000;
+        bias = info->DaylightBias;
+        if (FALSE == info->DynamicDaylightTimeDisabled)
+            break;
+    case TIME_ZONE_ID_STANDARD:
+        bias = info->StandardBias;
         break;
     default:
         return FALSE;
     }
+    ft.QuadPart += (info->Bias + bias) * (LONGLONG)600000000;
     return FileTimeToSystemTime( (FILETIME *)&ft, system );
 }
 
+/***********************************************************************
+ *	TzSpecificLocalTimeToSystemTime   (kernelbase.@)
+ */
+BOOL WINAPI DECLSPEC_HOTPATCH TzSpecificLocalTimeToSystemTime( const TIME_ZONE_INFORMATION *info,
+                                                               const SYSTEMTIME *local,
+                                                               SYSTEMTIME *system )
+{
+    DYNAMIC_TIME_ZONE_INFORMATION tzinfo;
+
+    if (info)
+    {
+        memset(&tzinfo, 0, sizeof(tzinfo));
+        *((TIME_ZONE_INFORMATION*)&tzinfo) = *info;
+    } else {
+        RtlQueryDynamicTimeZoneInformation( &tzinfo );
+    }
+
+    return TzSpecificLocalTimeToSystemTimeEx( &tzinfo, local, system );
+}
+
 
 /***********************************************************************
  *	VerLanguageNameA   (kernelbase.@)
