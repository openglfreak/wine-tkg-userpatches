From b1b01ff58241ef47e15b5bd8a04b39cd64d4953c Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Tue, 9 Feb 2021 20:36:36 +0100
Subject: [PATCH] ntoskrnl.exe: Implement KdChangeOption

Signed-off-by: Torge Matthies <openglfreak@googlemail.com>
---
 dlls/ntoskrnl.exe/ntoskrnl.c        | 12 +++++++++
 dlls/ntoskrnl.exe/ntoskrnl.exe.spec |  1 +
 include/ddk/wdm.h                   |  5 +++++
 3 files changed, 18 insertions(+)

diff --git a/dlls/ntoskrnl.exe/ntoskrnl.c b/dlls/ntoskrnl.exe/ntoskrnl.c
index e857ae06867..a26e5ecb608 100644
--- a/dlls/ntoskrnl.exe/ntoskrnl.c
+++ b/dlls/ntoskrnl.exe/ntoskrnl.c
@@ -4377,6 +4377,18 @@ void WINAPI KeUnstackDetachProcess(KAPC_STATE *apc_state)
     FIXME("apc_state %p stub.\n", apc_state);
 }
 
+NTSTATUS WINAPI KdChangeOption(KD_OPTION option, ULONG in_buf_size, PVOID in_buf, ULONG out_buf_size, PVOID out_buf, PULONG out_buf_required)
+{
+    TRACE( "%u %lu %p %lu %p %p\n", option, in_buf_size, in_buf, out_buf_size, out_buf, out_buf_required );
+
+    if (option != KD_OPTION_SET_BLOCK_ENABLE)
+        return STATUS_INVALID_INFO_CLASS;
+    if (in_buf_size != sizeof(BOOLEAN) || out_buf_size != 0 || out_buf)
+        return STATUS_INVALID_PARAMETER;
+
+    return STATUS_DEBUGGER_INACTIVE;
+}
+
 NTSTATUS WINAPI KdDisableDebugger(void)
 {
     FIXME(": stub.\n");
diff --git a/dlls/ntoskrnl.exe/ntoskrnl.exe.spec b/dlls/ntoskrnl.exe/ntoskrnl.exe.spec
index e06d24461db..410d71b0c22 100644
--- a/dlls/ntoskrnl.exe/ntoskrnl.exe.spec
+++ b/dlls/ntoskrnl.exe/ntoskrnl.exe.spec
@@ -515,6 +515,7 @@
 @ stub IoWriteTransferCount
 @ extern KdDebuggerEnabled
 @ stub KdDebuggerNotPresent
+@ stdcall KdChangeOption(long long ptr long ptr long)
 @ stdcall KdDisableDebugger()
 @ stdcall KdEnableDebugger()
 @ stub KdEnteredDebugger
diff --git a/include/ddk/wdm.h b/include/ddk/wdm.h
index c805d5afd9c..5bef788d5a6 100644
--- a/include/ddk/wdm.h
+++ b/include/ddk/wdm.h
@@ -1167,6 +1167,10 @@ static inline void MmInitializeMdl(MDL *mdl, void *va, SIZE_T length)
     mdl->ByteCount  = length;
 }
 
+typedef enum _KD_OPTION {
+    KD_OPTION_SET_BLOCK_ENABLE
+} KD_OPTION;
+
 typedef struct _KTIMER {
     DISPATCHER_HEADER Header;
     ULARGE_INTEGER DueTime;
@@ -1719,6 +1723,7 @@ void      WINAPI IoReuseIrp(IRP*,NTSTATUS);
 NTSTATUS  WINAPI IoSetDeviceInterfaceState(UNICODE_STRING*,BOOLEAN);
 NTSTATUS  WINAPI IoWMIRegistrationControl(PDEVICE_OBJECT,ULONG);
 
+NTSTATUS  WINAPI KdChangeOption(KD_OPTION,ULONG,PVOID,ULONG,PVOID,PULONG);
 void    FASTCALL KeAcquireInStackQueuedSpinLockAtDpcLevel(KSPIN_LOCK*,KLOCK_QUEUE_HANDLE*);
 #ifdef __i386__
 void      WINAPI KeAcquireSpinLock(KSPIN_LOCK*,KIRQL*);
-- 
2.30.1

