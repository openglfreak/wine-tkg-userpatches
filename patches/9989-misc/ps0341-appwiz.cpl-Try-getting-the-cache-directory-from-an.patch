From 6b302eb087a3977350d6dfb6a69d0694e8ab11ed Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Sun, 12 Dec 2021 05:11:20 +0100
Subject: [PATCH] appwiz.cpl: Try getting the cache directory from an
 environment variable first.

---
 dlls/appwiz.cpl/addons.c | 24 +++++++++++++++++-------
 1 file changed, 17 insertions(+), 7 deletions(-)

diff --git a/dlls/appwiz.cpl/addons.c b/dlls/appwiz.cpl/addons.c
index 11111111111..11111111111 100644
--- a/dlls/appwiz.cpl/addons.c
+++ b/dlls/appwiz.cpl/addons.c
@@ -77,6 +77,7 @@ typedef struct {
     const char *url_config_key;
     const char *dir_config_key;
     LPCWSTR dialog_template;
+    const char *cache_dir_env_var;
 } addon_info_t;
 
 /* Download addon files over HTTP because Wine depends on an external library
@@ -90,7 +91,8 @@ static const addon_info_t addons_info[] = {
         GECKO_SHA,
         "http://source.winehq.org/winegecko.php",
         "MSHTML", "GeckoUrl", "GeckoCabDir",
-        MAKEINTRESOURCEW(ID_DWL_GECKO_DIALOG)
+        MAKEINTRESOURCEW(ID_DWL_GECKO_DIALOG),
+        "WINE_GECKO_CACHE_DIR"
     },
     {
         MONO_VERSION,
@@ -99,7 +101,8 @@ static const addon_info_t addons_info[] = {
         MONO_SHA,
         "http://source.winehq.org/winemono.php",
         "Dotnet", "MonoUrl", "MonoCabDir",
-        MAKEINTRESOURCEW(ID_DWL_MONO_DIALOG)
+        MAKEINTRESOURCEW(ID_DWL_MONO_DIALOG),
+        "WINE_MONO_CACHE_DIR"
     }
 };
 
@@ -320,13 +323,17 @@ static enum install_res install_from_default_dir(void)
 
 static WCHAR *get_cache_file_name(BOOL ensure_exists)
 {
-    const char *xdg_dir;
+    const char *env_var = NULL, *xdg_dir;
     const WCHAR *home_dir;
     WCHAR *cache_dir, *ret;
     size_t len, size;
 
-    xdg_dir = getenv( "XDG_CACHE_HOME" );
-    if (xdg_dir && *xdg_dir && p_wine_get_dos_file_name)
+    if (addon->cache_dir_env_var && (env_var = getenv( addon->cache_dir_env_var )) && *env_var)
+    {
+        if (!p_wine_get_dos_file_name) return NULL;
+        if (!(cache_dir = p_wine_get_dos_file_name( env_var ))) return NULL;
+    }
+    else if ((xdg_dir = getenv( "XDG_CACHE_HOME" )) && *xdg_dir && p_wine_get_dos_file_name)
     {
         if (!(cache_dir = p_wine_get_dos_file_name( xdg_dir ))) return NULL;
     }
@@ -346,14 +353,17 @@ static WCHAR *get_cache_file_name(BOOL ensure_exists)
         return NULL;
     }
 
-    size = lstrlenW( cache_dir ) + ARRAY_SIZE(L"\\wine") + lstrlenW( addon->file_name ) + 1;
+    size = lstrlenW( cache_dir ) + 1 + lstrlenW( addon->file_name ) + 1;
+    if (!env_var || !*env_var)
+        size += ARRAY_SIZE(L"\\wine") - 1;
     if (!(ret = malloc( size * sizeof(WCHAR) )))
     {
         HeapFree( GetProcessHeap(), 0, cache_dir );
         return NULL;
     }
     lstrcpyW( ret, cache_dir );
-    lstrcatW( ret, L"\\wine" );
+    if (!env_var || !*env_var)
+        lstrcatW( ret, L"\\wine" );
     HeapFree( GetProcessHeap(), 0, cache_dir );
 
     if (ensure_exists && !CreateDirectoryW( ret, NULL ) && GetLastError() != ERROR_ALREADY_EXISTS)
-- 
2.40.0

