From 3b066b60d21e0fa03ee713a5c11ecfc5252de53c Mon Sep 17 00:00:00 2001
From: Arkadiusz Hiler <ahiler@codeweavers.com>
Date: Thu, 3 Jun 2021 22:56:08 +0300
Subject: [PATCH 13/15] wineboot: Check if the kernel trusts TSC before using it
 for Qpc.

Even if the bits are claiming that TSC meets our requirements the
hardware implementation may still be broken.

The Linux kernel does a lot of quality testing before deciding to use as
the clock source. If it (or the user, through an override) does not trust
the TSC we should not trust it either.

CW-Bug-Id: #18918
CW-Bug-Id: #18958
---
 programs/wineboot/wineboot.c | 31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)

diff --git a/programs/wineboot/wineboot.c b/programs/wineboot/wineboot.c
index 9bebededa4f..79a4bda4d67 100644
--- a/programs/wineboot/wineboot.c
+++ b/programs/wineboot/wineboot.c
@@ -315,6 +315,30 @@ static UINT64 read_tsc_frequency(void)
     return freq;
 }
 
+static BOOL is_tsc_trusted_by_the_kernel(void)
+{
+    char buf[4] = {};
+    DWORD num_read;
+    HANDLE handle;
+    BOOL ret = TRUE;
+
+    handle = CreateFileA( "\\??\\unix\\sys\\bus\\clocksource\\devices\\clocksource0\\current_clocksource",
+                          GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, 0, 0 );
+
+    if (handle == INVALID_HANDLE_VALUE)
+        return TRUE;
+
+    if (ReadFile( handle, buf, sizeof(buf)-1, &num_read, NULL ))
+    {
+        if (!!strcmp( "tsc", buf ))
+            ret = FALSE;
+    }
+
+    CloseHandle( handle );
+
+    return ret;
+}
+
 static void initialize_qpc_features(struct _KUSER_SHARED_DATA *data)
 {
     int regs[4];
@@ -346,6 +370,13 @@ static void initialize_qpc_features(struct _KUSER_SHARED_DATA *data)
         WARN("No invariant TSC, disabling QpcBypass\n");
         return;
     }
+
+    if (!is_tsc_trusted_by_the_kernel())
+    {
+        WARN("TSC is not trusted by the kernel, disabling QpcBypass.\n");
+        return;
+    }
+
     data->QpcBypassEnabled |= SHARED_GLOBAL_FLAGS_QPC_BYPASS_ENABLED;
 
     /* check for rdtscp support bit */

