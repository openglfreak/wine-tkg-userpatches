From fe67fb9b91bc29fa9691de9ff177d9bc98f6717a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 3 Dec 2020 11:26:56 +0100
Subject: [PATCH 11/12] secur32: Perform TLS handshake even if input is empty.

Instead of immediately returning even if we don't know how much.

This may be the case if we received SEC_I_RENEGOTIATE status, and in any
case the handshake will tell us if more data is needed.
---
 dlls/secur32/schannel.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/dlls/secur32/schannel.c b/dlls/secur32/schannel.c
index 11111111111..11111111111 100644
--- a/dlls/secur32/schannel.c
+++ b/dlls/secur32/schannel.c
@@ -946,7 +946,7 @@ static SECURITY_STATUS SEC_ENTRY schan_InitializeSecurityContextW(
                 ptr += record_size;
             }
 
-            if (!expected_size)
+            if (!expected_size && record_size)
             {
                 TRACE("Expected at least %Iu bytes, but buffer only contains %lu bytes.\n",
                       max(ctx->header_size, record_size), buffer->cbBuffer);
@@ -1015,6 +1015,8 @@ static SECURITY_STATUS SEC_ENTRY schan_InitializeSecurityContextW(
     else
     {
         pOutput->pBuffers[0].cbBuffer = 0;
+        /* Nothing to read or to send, but we got SEC_I_CONTINUE_NEEDED, it means missing input */
+        if (!expected_size && ret == SEC_I_CONTINUE_NEEDED) ret = SEC_E_INCOMPLETE_MESSAGE;
     }
     RtlFreeHeap( GetProcessHeap(), 0, alloc_buffer.pvBuffer );
 
-- 
2.37.1

