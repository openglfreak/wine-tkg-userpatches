From 365eb9cd142199e7c327497c313e328396d7d208 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Wed, 23 Dec 2020 14:44:10 +0100
Subject: [PATCH 14/14] ntdll: Allocate LFH memory bottom-up instead of
 top-down.

And only enable LFH for process heap after executable has been loaded
so that it doesn't allocate memory in its load range.
---
 dlls/ntdll/heap.c     | 2 +-
 dlls/ntdll/heap_lfh.c | 2 +-
 dlls/ntdll/loader.c   | 2 ++
 3 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/dlls/ntdll/heap.c b/dlls/ntdll/heap.c
index 145a42ea040..67fe7eb4fb8 100644
--- a/dlls/ntdll/heap.c
+++ b/dlls/ntdll/heap.c
@@ -1681,7 +1681,7 @@ HANDLE WINAPI RtlCreateHeap( ULONG flags, PVOID addr, SIZE_T totalSize, SIZE_T c
     else if (!addr)
     {
         processHeap = subheap->heap;  /* assume the first heap we create is the process main heap */
-        processHeap->extended_type = HEAP_LFH;
+        processHeap->extended_type = HEAP_STD;
         list_init( &processHeap->entry );
     }
 
diff --git a/dlls/ntdll/heap_lfh.c b/dlls/ntdll/heap_lfh.c
index 3b7cf76f4ed..b7bb83257b9 100644
--- a/dlls/ntdll/heap_lfh.c
+++ b/dlls/ntdll/heap_lfh.c
@@ -214,7 +214,7 @@ static void *LFH_memory_allocate(size_t size)
     SIZE_T alloc_size = size;
 
     if (NtAllocateVirtualMemory(NtCurrentProcess(), (void **)&addr, 0, &alloc_size,
-                                MEM_RESERVE | MEM_COMMIT | MEM_TOP_DOWN, PAGE_READWRITE))
+                                MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE))
         return NULL;
 
     return addr;
diff --git a/dlls/ntdll/loader.c b/dlls/ntdll/loader.c
index 3419e665b70..1babc576871 100644
--- a/dlls/ntdll/loader.c
+++ b/dlls/ntdll/loader.c
@@ -3942,6 +3942,7 @@ static NTSTATUS process_init(void)
     TEB *teb = NtCurrentTeb();
     PEB *peb = teb->Peb;
     DWORD i;
+    DWORD hci = 2;
 
     peb->LdrData            = &ldr;
     peb->FastPebLock        = &peb_lock;
@@ -4036,6 +4037,7 @@ static NTSTATUS process_init(void)
         peb64->SessionId        = peb->SessionId;
     }
 #endif
+    RtlSetHeapInformation( GetProcessHeap(), HeapCompatibilityInformation, &hci, sizeof(hci) );
 
     build_ntdll_module();
 
-- 
2.30.1

