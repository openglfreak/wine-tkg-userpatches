From c2f5ed4a58ea39c4672edbf98138dbab7da54361 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 18 Jan 2021 19:05:34 +0100
Subject: [PATCH 34/44] win32u: Use input shared memory for
 NtUserGetGUIThreadInfo.

When the current thread is requested.
---
 dlls/win32u/message.c        | 28 ++++++++++++++++++++++++++++
 dlls/win32u/ntuser_private.h |  2 ++
 dlls/win32u/sysparams.c      | 10 ++++++++++
 dlls/win32u/win32u_private.h |  1 +
 dlls/win32u/winstation.c     | 18 ++++++++++++++++++
 include/ntuser.h             |  1 +
 6 files changed, 60 insertions(+)

diff --git a/dlls/win32u/message.c b/dlls/win32u/message.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/message.c
+++ b/dlls/win32u/message.c
@@ -1295,6 +1295,7 @@ static LRESULT handle_internal_message( HWND hwnd, UINT msg, WPARAM wparam, LPAR
  */
 BOOL WINAPI NtUserGetGUIThreadInfo( DWORD id, GUITHREADINFO *info )
 {
+    volatile struct input_shared_memory *shared;
     BOOL ret;
 
     if (info->cbSize != sizeof(*info))
@@ -1303,6 +1304,33 @@ BOOL WINAPI NtUserGetGUIThreadInfo( DWORD id, GUITHREADINFO *info )
         return FALSE;
     }
 
+    if (id == GetCurrentThreadId()) shared = get_input_shared_memory();
+    else if (id == 0) shared = get_foreground_shared_memory();
+    else shared = NULL;
+
+    if (shared)
+    {
+        SHARED_READ_BEGIN( &shared->seq )
+        {
+            info->flags          = 0;
+            info->hwndActive     = wine_server_ptr_handle( shared->active );
+            info->hwndFocus      = wine_server_ptr_handle( shared->focus );
+            info->hwndCapture    = wine_server_ptr_handle( shared->capture );
+            info->hwndMenuOwner  = wine_server_ptr_handle( shared->menu_owner );
+            info->hwndMoveSize   = wine_server_ptr_handle( shared->move_size );
+            info->hwndCaret      = wine_server_ptr_handle( shared->caret );
+            info->rcCaret.left   = shared->caret_rect.left;
+            info->rcCaret.top    = shared->caret_rect.top;
+            info->rcCaret.right  = shared->caret_rect.right;
+            info->rcCaret.bottom = shared->caret_rect.bottom;
+        }
+        SHARED_READ_END( &shared->seq );
+        if (info->hwndMenuOwner) info->flags |= GUI_INMENUMODE;
+        if (info->hwndMoveSize) info->flags |= GUI_INMOVESIZE;
+        if (info->hwndCaret) info->flags |= GUI_CARETBLINKING;
+        return TRUE;
+    }
+
     SERVER_START_REQ( get_thread_input )
     {
         req->tid = id;
diff --git a/dlls/win32u/ntuser_private.h b/dlls/win32u/ntuser_private.h
index 11111111111..11111111111 100644
--- a/dlls/win32u/ntuser_private.h
+++ b/dlls/win32u/ntuser_private.h
@@ -136,6 +136,8 @@ struct user_thread_info
     struct desktop_shared_memory *desktop_shared_memory;  /* Ptr to server's desktop shared memory */
     HANDLE                        queue_shared_map;       /* HANDLE to server's thread queue shared memory */
     struct queue_shared_memory   *queue_shared_memory;     /* Ptr to server's thread queue shared memory */
+    HANDLE                        input_shared_map;       /* HANDLE to server's thread input shared memory */
+    struct input_shared_memory   *input_shared_memory;    /* Ptr to server's thread input shared memory */
     HANDLE                        foreground_shared_map;    /* HANDLE to server's thread input shared memory */
     struct input_shared_memory   *foreground_shared_memory; /* Ptr to server's thread input shared memory */
 };
diff --git a/dlls/win32u/sysparams.c b/dlls/win32u/sysparams.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/sysparams.c
+++ b/dlls/win32u/sysparams.c
@@ -5591,6 +5591,13 @@ static void thread_detach(void)
         thread_info->foreground_shared_memory = NULL;
     }
 
+    if (thread_info->input_shared_map)
+    {
+        NtClose( thread_info->input_shared_map );
+        thread_info->input_shared_map = NULL;
+        thread_info->input_shared_memory = NULL;
+    }
+
     exiting_thread_id = 0;
 }
 
@@ -5640,6 +5647,9 @@ ULONG_PTR WINAPI NtUserCallNoParam( ULONG code )
     case NtUserGetQueueSharedMemory:
         return (ULONG_PTR)get_queue_shared_memory();
 
+    case NtUserGetInputSharedMemory:
+        return (ULONG_PTR)get_input_shared_memory();
+
     case NtUserGetForegroundSharedMemory:
         return (ULONG_PTR)get_foreground_shared_memory();
 
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 11111111111..11111111111 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -418,6 +418,7 @@ static inline void release_win_ptr( struct tagWND *ptr )
 /* winstation.c */
 extern volatile struct desktop_shared_memory *get_desktop_shared_memory( void ) DECLSPEC_HIDDEN;
 extern volatile struct queue_shared_memory *get_queue_shared_memory( void ) DECLSPEC_HIDDEN;
+extern volatile struct input_shared_memory *get_input_shared_memory( void ) DECLSPEC_HIDDEN;
 extern volatile struct input_shared_memory *get_foreground_shared_memory( void ) DECLSPEC_HIDDEN;
 
 extern void wrappers_init( unixlib_handle_t handle ) DECLSPEC_HIDDEN;
diff --git a/dlls/win32u/winstation.c b/dlls/win32u/winstation.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/winstation.c
+++ b/dlls/win32u/winstation.c
@@ -672,6 +672,24 @@ static volatile struct input_shared_memory *get_thread_input_shared_memory( DWOR
 }
 
 
+volatile struct input_shared_memory *get_input_shared_memory( void )
+{
+    volatile struct queue_shared_memory *queue = get_queue_shared_memory();
+    struct user_thread_info *thread_info = get_user_thread_info();
+    DWORD tid;
+
+    if (!queue) return NULL;
+    SHARED_READ_BEGIN( &queue->seq )
+    {
+        tid = queue->input_tid;
+    }
+    SHARED_READ_END( &queue->seq );
+
+    return get_thread_input_shared_memory( tid, &thread_info->input_shared_map,
+                                           &thread_info->input_shared_memory );
+}
+
+
 volatile struct input_shared_memory *get_foreground_shared_memory( void )
 {
     volatile struct desktop_shared_memory *desktop = get_desktop_shared_memory();
diff --git a/include/ntuser.h b/include/ntuser.h
index 11111111111..11111111111 100644
--- a/include/ntuser.h
+++ b/include/ntuser.h
@@ -926,6 +926,7 @@ enum
     NtUserExitingThread,
     NtUserThreadDetach,
     NtUserGetQueueSharedMemory,
+    NtUserGetInputSharedMemory,
     NtUserGetForegroundSharedMemory,
 };
 

