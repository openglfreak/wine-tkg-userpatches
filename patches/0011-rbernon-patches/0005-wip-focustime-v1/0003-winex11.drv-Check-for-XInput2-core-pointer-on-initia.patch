From ca36e3c5cff045a85e0d8887bc5a7c0b1c761392 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Sun, 14 Nov 2021 14:35:52 +0100
Subject: [PATCH 3/9] winex11.drv: Check for XInput2 core pointer on
 initialization.

---
 dlls/winex11.drv/mouse.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/mouse.c
+++ b/dlls/winex11.drv/mouse.c
@@ -289,14 +289,15 @@ void X11DRV_XInput2_Init(void)
     struct x11drv_thread_data *data = x11drv_thread_data();
     int major = 2, minor = 1;
 
-    if (xinput2_available &&
-        !pXIQueryVersion( data->display, &major, &minor ))
+    if (xinput2_available && pXIQueryVersion( data->display, &major, &minor ) == Success &&
+        pXIGetClientPointer( data->display, None, &data->xi2_core_pointer ))
     {
         TRACE( "XInput2 %d.%d available\n", major, minor );
         data->xi2_state = xi_disabled;
     }
     else
     {
+        data->xi2_core_pointer = 0;
         data->xi2_state = xi_unavailable;
         WARN( "XInput 2.1 not available\n" );
     }
@@ -316,7 +317,6 @@ static void enable_xinput2(void)
     int count;
 
     if (data->xi2_state != xi_disabled) return;
-    if (!pXIGetClientPointer( data->display, None, &data->xi2_core_pointer )) return;
 
     mask.mask     = mask_bits;
     mask.mask_len = sizeof(mask_bits);
@@ -361,7 +361,6 @@ static void disable_xinput2(void)
     data->y_valuator.number = -1;
     data->x_valuator.value = 0;
     data->y_valuator.value = 0;
-    data->xi2_core_pointer = 0;
 #endif
 }
 
-- 
2.36.1

