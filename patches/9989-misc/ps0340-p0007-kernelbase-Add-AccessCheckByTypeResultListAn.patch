From: Mohamad Al-Jaf <mohamadaljaf@gmail.com>
Subject: [PATCH 7/8] kernelbase: Add AccessCheckByTypeResultListAndAuditAlarmW stub.
Message-Id: <20220202030554.238348-7-mohamadaljaf@gmail.com>
Date: Tue,  1 Feb 2022 22:05:53 -0500
In-Reply-To: <20220202030554.238348-1-mohamadaljaf@gmail.com>
References: <20220202030554.238348-1-mohamadaljaf@gmail.com>

Needed for IE11.

Signed-off-by: Mohamad Al-Jaf <mohamadaljaf@gmail.com>
---
 dlls/advapi32/advapi32.spec     |  2 +-
 dlls/kernelbase/kernelbase.spec |  2 +-
 dlls/kernelbase/security.c      | 16 ++++++++++++++++
 include/winbase.h               |  2 ++
 4 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/dlls/advapi32/advapi32.spec b/dlls/advapi32/advapi32.spec
index 11111111111..11111111111 100644
--- a/dlls/advapi32/advapi32.spec
+++ b/dlls/advapi32/advapi32.spec
@@ -14,7 +14,7 @@
 @ stdcall AccessCheckByTypeResultListAndAuditAlarmA(str ptr str str ptr ptr long long long ptr long ptr long ptr ptr ptr)
 @ stdcall AccessCheckByTypeResultListAndAuditAlarmByHandleA(str ptr long str str ptr ptr long long long ptr long ptr long ptr ptr ptr)
 @ stdcall -import AccessCheckByTypeResultListAndAuditAlarmByHandleW(wstr ptr long wstr wstr ptr ptr long long long ptr long ptr long ptr ptr ptr)
-# @ stub AccessCheckByTypeResultListAndAuditAlarmW
+@ stdcall -import AccessCheckByTypeResultListAndAuditAlarmW(wstr ptr wstr wstr ptr ptr long long long ptr long ptr long ptr ptr ptr)
 @ stdcall -import AddAccessAllowedAce (ptr long long ptr)
 @ stdcall -import AddAccessAllowedAceEx (ptr long long long ptr)
 @ stdcall -import AddAccessAllowedObjectAce(ptr long long long ptr ptr ptr)
diff --git a/dlls/kernelbase/kernelbase.spec b/dlls/kernelbase/kernelbase.spec
index 11111111111..11111111111 100644
--- a/dlls/kernelbase/kernelbase.spec
+++ b/dlls/kernelbase/kernelbase.spec
@@ -4,7 +4,7 @@
 @ stdcall AccessCheckByTypeAndAuditAlarmW(wstr ptr wstr wstr ptr ptr long long long ptr long ptr long ptr ptr ptr)
 @ stdcall AccessCheckByTypeResultList(ptr ptr long long ptr long ptr ptr ptr ptr ptr)
 @ stdcall AccessCheckByTypeResultListAndAuditAlarmByHandleW(wstr ptr long wstr wstr ptr ptr long long long ptr long ptr long ptr ptr ptr)
-@ stub AccessCheckByTypeResultListAndAuditAlarmW
+@ stdcall AccessCheckByTypeResultListAndAuditAlarmW(wstr ptr wstr wstr ptr ptr long long long ptr long ptr long ptr ptr ptr)
 @ stdcall AcquireSRWLockExclusive(ptr) ntdll.RtlAcquireSRWLockExclusive
 @ stdcall AcquireSRWLockShared(ptr) ntdll.RtlAcquireSRWLockShared
 # @ stub AcquireStateLock
diff --git a/dlls/kernelbase/security.c b/dlls/kernelbase/security.c
index 11111111111..11111111111 100644
--- a/dlls/kernelbase/security.c
+++ b/dlls/kernelbase/security.c
@@ -1324,6 +1324,22 @@ BOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmByHandleW( LPCWSTR subsystem
     return TRUE;
 }
 
+/******************************************************************************
+ * AccessCheckByTypeResultListAndAuditAlarmW    (kernelbase.@)
+ */
+BOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmW( LPCWSTR subsystem, LPVOID id, LPCWSTR type_name, 
+                                                       LPCWSTR name, PSECURITY_DESCRIPTOR descr, PSID sid, 
+                                                       DWORD access, AUDIT_EVENT_TYPE audit, DWORD flags, 
+                                                       POBJECT_TYPE_LIST types, DWORD list_length, 
+                                                       PGENERIC_MAPPING mapping, BOOL creation, 
+                                                       LPDWORD access_list, LPDWORD status_list, LPBOOL on_close )
+{
+    FIXME( "stub ( %s,%p,%s,%s,%p,%p,%08x,%p,%08x,%p,%08x,%p,%x,%p,%p,%p)\n", debugstr_w(subsystem), 
+           id, debugstr_w(type_name), debugstr_w(name), descr, sid, access, audit, flags, types, 
+           list_length, mapping, creation, access_list, status_list, on_close );
+    return TRUE;
+}
+
 /******************************************************************************
  * AddAccessAllowedAce    (kernelbase.@)
  */
diff --git a/include/winbase.h b/include/winbase.h
index 11111111111..11111111111 100644
--- a/include/winbase.h
+++ b/include/winbase.h
@@ -1811,6 +1811,8 @@ WINADVAPI  BOOL        WINAPI AccessCheckByTypeAndAuditAlarmW(LPCWSTR,LPVOID,LPC
 #define                       AccessCheckByTypeAndAuditAlarm WINELIB_NAME_AW(AccessCheckByTypeAndAuditAlarm)
 WINADVAPI  BOOL        WINAPI AccessCheckByTypeResultList(PSECURITY_DESCRIPTOR,PSID,HANDLE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,PPRIVILEGE_SET,LPDWORD,LPDWORD,LPDWORD);
 WINADVAPI  BOOL        WINAPI AccessCheckByTypeResultListAndAuditAlarmA(LPCSTR,LPVOID,LPCSTR,LPCSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
+WINADVAPI  BOOL        WINAPI AccessCheckByTypeResultListAndAuditAlarmW(LPCWSTR,LPVOID,LPCWSTR,LPCWSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
+#define                       AccessCheckByTypeResultListAndAuditAlarm WINELIB_NAME_AW(AccessCheckByTypeResultListAndAuditAlarm)
 WINADVAPI  BOOL        WINAPI AccessCheckByTypeResultListAndAuditAlarmByHandleA(LPCSTR,LPVOID,HANDLE,LPCSTR,LPCSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
 WINADVAPI  BOOL        WINAPI AccessCheckByTypeResultListAndAuditAlarmByHandleW(LPCWSTR,LPVOID,HANDLE,LPCWSTR,LPCWSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
 #define                       AccessCheckByTypeResultListAndAuditAlarmByHandle WINELIB_NAME_AW(AccessCheckByTypeResultListAndAuditAlarmByHandle)

-- 
0.0.0

