From 25fa395dd2917ad93b668165303fb0fee7caa7a0 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Tue, 29 Mar 2022 02:30:12 +0200
Subject: [PATCH 47/44] HACK: win32u: Get key state from desktop memory if
 !keystate_lock.

---
 dlls/win32u/input.c | 27 ++++++++++++++++++++-------
 1 file changed, 20 insertions(+), 7 deletions(-)

diff --git a/dlls/win32u/input.c b/dlls/win32u/input.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/input.c
+++ b/dlls/win32u/input.c
@@ -411,18 +411,31 @@ HKL WINAPI NtUserGetKeyboardLayout( DWORD thread_id )
  */
 SHORT WINAPI NtUserGetKeyState( INT vkey )
 {
-    volatile struct input_shared_memory *shared = get_input_shared_memory();
+    volatile struct input_shared_memory *input_shared = get_input_shared_memory();
+    volatile struct desktop_shared_memory *desktop_shared = get_desktop_shared_memory();
     SHORT retval = 0;
     BOOL skip = TRUE;
+    BOOL keystate_lock = FALSE;
 
-    if (!shared) skip = FALSE;
-    else SHARED_READ_BEGIN( &shared->seq )
+    if (!input_shared) skip = FALSE;
+    else SHARED_READ_BEGIN( &input_shared->seq )
     {
-        if (!shared->created) skip = FALSE; /* server needs to create the queue */
-        else if (!shared->keystate_lock) skip = FALSE; /* server needs to call sync_input_keystate */
-        else retval = (signed char)(shared->keystate[vkey & 0xff] & 0x81);
+        if (!input_shared->created) skip = FALSE; /* server needs to create the queue */
+        else if (!input_shared->keystate_lock) keystate_lock = TRUE; /* server needs to call sync_input_keystate */
+        else retval = (signed char)(input_shared->keystate[vkey & 0xff] & 0x81);
+    }
+    SHARED_READ_END( &input_shared->seq );
+
+    /* HACK: Introduces a race condition but skips the server call. */
+    if (keystate_lock)
+    {
+        if (!desktop_shared) skip = FALSE;
+        else SHARED_READ_BEGIN( &desktop_shared->seq )
+        {
+            retval = (signed char)(desktop_shared->keystate[vkey & 0xff] & 0x81);
+        }
+        SHARED_READ_END( &desktop_shared->seq );
     }
-    SHARED_READ_END( &shared->seq );
 
     if (!skip)
     {
-- 
2.36.0

