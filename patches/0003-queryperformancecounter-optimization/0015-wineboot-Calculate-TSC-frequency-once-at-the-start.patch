From 2bde7d53b3874dfc6f3066819e00da142443a48f Mon Sep 17 00:00:00 2001
From: Joshua Ashton <joshua@froggi.es>
Date: Fri, 4 Jun 2021 10:20:51 +0200
Subject: [PATCH 15/15] wineboot: Calculate TSC frequency once at the start

This calculates the TSC frequency once at the very start of wineboot.

This avoids needing to calculate this multiple times which can lead to stalls.

Signed-off-by: Joshua Ashton <joshua@froggi.es>
---
 programs/wineboot/wineboot.c | 26 ++++++++++++++------------
 1 file changed, 14 insertions(+), 12 deletions(-)

diff --git a/programs/wineboot/wineboot.c b/programs/wineboot/wineboot.c
index 0662feac9ce..dc0e645dd09 100644
--- a/programs/wineboot/wineboot.c
+++ b/programs/wineboot/wineboot.c
@@ -339,7 +339,7 @@ static BOOL is_tsc_trusted_by_the_kernel(void)
     return ret;
 }
 
-static void initialize_qpc_features(struct _KUSER_SHARED_DATA *data)
+static void initialize_qpc_features(struct _KUSER_SHARED_DATA *data, UINT64 tsc_frequency)
 {
     int regs[4];
 
@@ -388,7 +388,7 @@ static void initialize_qpc_features(struct _KUSER_SHARED_DATA *data)
     else
         data->QpcBypassEnabled |= SHARED_GLOBAL_FLAGS_QPC_BYPASS_USE_MFENCE;
 
-    if ((data->QpcFrequency = (read_tsc_frequency() >> 10)))
+    if ((data->QpcFrequency = (tsc_frequency >> 10)))
     {
         data->QpcShift = 10;
         data->QpcBias = 0;
@@ -433,7 +433,7 @@ static UINT64 muldiv_tsc(UINT64 a, UINT64 b, UINT64 c)
     return ka * kb * c + kb * ra + ka * rb + (ra * rb + c / 2) / c;
 }
 
-static void create_hypervisor_shared_data(void)
+static void create_hypervisor_shared_data(UINT64 tsc_frequency)
 {
     struct _KUSER_SHARED_DATA *user_shared_data = (void *)0x7ffe0000;
     struct hypervisor_shared_data *hypervisor_shared_data;
@@ -480,7 +480,7 @@ static void create_hypervisor_shared_data(void)
 
     if (user_shared_data->QpcBypassEnabled & SHARED_GLOBAL_FLAGS_QPC_BYPASS_ENABLED)
     {
-        hypervisor_shared_data->QpcMultiplier = muldiv_tsc((UINT64)5000 << 32, (UINT64)2000 << 32, read_tsc_frequency());
+        hypervisor_shared_data->QpcMultiplier = muldiv_tsc((UINT64)5000 << 32, (UINT64)2000 << 32, tsc_frequency);
         user_shared_data->QpcBypassEnabled |= SHARED_GLOBAL_FLAGS_QPC_BYPASS_USE_HV_PAGE;
         user_shared_data->QpcInterruptTimeIncrement = (ULONGLONG)1 << 63;
         user_shared_data->QpcInterruptTimeIncrementShift = 1;
@@ -495,7 +495,7 @@ static void create_hypervisor_shared_data(void)
     UnmapViewOfFile( hypervisor_shared_data );
 }
 
-static void create_user_shared_data(void)
+static void create_user_shared_data(UINT64 tsc_frequency)
 {
     struct _KUSER_SHARED_DATA *data;
     RTL_OSVERSIONINFOEXW version;
@@ -582,7 +582,7 @@ static void create_user_shared_data(void)
     data->ActiveGroupCount = 1;
 
     initialize_xstate_features( data );
-    initialize_qpc_features( data );
+    initialize_qpc_features( data, tsc_frequency );
 
     UnmapViewOfFile( data );
 }
@@ -894,7 +894,7 @@ static void create_bios_key( HKEY system_key )
 }
 
 /* create the volatile hardware registry keys */
-static void create_hardware_registry_keys(void)
+static void create_hardware_registry_keys(UINT64 tsc_frequency)
 {
     unsigned int i;
     HKEY hkey, system_key, cpu_key, fpu_key;
@@ -969,8 +969,7 @@ static void create_hardware_registry_keys(void)
         if (!RegCreateKeyExW( cpu_key, numW, 0, NULL, REG_OPTION_VOLATILE,
                               KEY_ALL_ACCESS, NULL, &hkey, NULL ))
         {
-            UINT64 tsc_freq = read_tsc_frequency(); /* Hz */
-            DWORD tsc_freq_mhz = (DWORD)(tsc_freq / 1000000ull);
+            DWORD tsc_freq_mhz = (DWORD)(tsc_frequency / 1000000ull); /* Hz -> Mhz */
 
             RegSetValueExW( hkey, L"FeatureSet", 0, REG_DWORD, (BYTE *)&sci.FeatureSet, sizeof(DWORD) );
             set_reg_value( hkey, L"Identifier", id );
@@ -1896,9 +1895,12 @@ int __cdecl main( int argc, char *argv[] )
     BOOL end_session, force, init, kill, restart, shutdown, update;
     HANDLE event;
     OBJECT_ATTRIBUTES attr;
+    UINT64 tsc_frequency;
     UNICODE_STRING nameW;
     BOOL is_wow64;
 
+    tsc_frequency = read_tsc_frequency();
+
     end_session = force = init = kill = restart = shutdown = update = FALSE;
     GetWindowsDirectoryW( windowsdir, MAX_PATH );
     if( !SetCurrentDirectoryW( windowsdir ) )
@@ -1981,9 +1983,9 @@ int __cdecl main( int argc, char *argv[] )
 
     ResetEvent( event );  /* in case this is a restart */
 
-    create_user_shared_data();
-    create_hypervisor_shared_data();
-    create_hardware_registry_keys();
+    create_user_shared_data(tsc_frequency);
+    create_hypervisor_shared_data(tsc_frequency);
+    create_hardware_registry_keys(tsc_frequency);
     create_dynamic_registry_keys();
     create_environment_registry_keys();
     create_computer_name_keys();
