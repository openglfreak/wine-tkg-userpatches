From 29af3557af603c34b6293c696b91641e266c50e9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 4 Oct 2021 16:47:16 +0200
Subject: [PATCH 1/9] user32: Move touch related functions to input.c.

CW-Bug-Id: #18214
---
 dlls/user32/input.c     | 103 ++++++++++++++++++++++++++++++++++++++++
 dlls/user32/misc.c      |  29 -----------
 dlls/user32/user32.spec |   2 +
 dlls/user32/win.c       |  50 -------------------
 4 files changed, 105 insertions(+), 79 deletions(-)

diff --git a/dlls/user32/input.c b/dlls/user32/input.c
index 11111111111..11111111111 100644
--- a/dlls/user32/input.c
+++ b/dlls/user32/input.c
@@ -620,3 +620,106 @@ BOOL WINAPI UnregisterDeviceNotification( HDEVNOTIFY handle )
 
     return I_ScUnregisterDeviceNotification( handle );
 }
+
+/*****************************************************************************
+ * CloseTouchInputHandle (USER32.@)
+ */
+BOOL WINAPI CloseTouchInputHandle( HTOUCHINPUT handle )
+{
+    FIXME( "handle %p stub!\n", handle );
+    SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
+    return FALSE;
+}
+
+/*****************************************************************************
+ * GetTouchInputInfo (USER32.@)
+ */
+BOOL WINAPI GetTouchInputInfo( HTOUCHINPUT handle, UINT count, TOUCHINPUT *ptr, int size )
+{
+    FIXME( "handle %p, count %u, ptr %p, size %u stub!\n", handle, count, ptr, size );
+    SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
+    return FALSE;
+}
+
+/**********************************************************************
+ * IsTouchWindow (USER32.@)
+ */
+BOOL WINAPI IsTouchWindow( HWND hwnd, ULONG *flags )
+{
+    FIXME( "hwnd %p, flags %p stub!\n", hwnd, flags );
+    return FALSE;
+}
+
+/*****************************************************************************
+ * RegisterTouchWindow (USER32.@)
+ */
+BOOL WINAPI RegisterTouchWindow( HWND hwnd, ULONG flags )
+{
+    FIXME( "hwnd %p, flags %#lx stub!\n", hwnd, flags );
+    SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
+    return FALSE;
+}
+
+/*****************************************************************************
+ * UnregisterTouchWindow (USER32.@)
+ */
+BOOL WINAPI UnregisterTouchWindow( HWND hwnd )
+{
+    FIXME( "hwnd %p stub!\n", hwnd );
+    SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
+    return FALSE;
+}
+
+/*****************************************************************************
+ * GetGestureInfo (USER32.@)
+ */
+BOOL WINAPI CloseGestureInfoHandle( HGESTUREINFO handle )
+{
+    FIXME( "handle %p stub!\n", handle );
+    SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
+    return FALSE;
+}
+
+/*****************************************************************************
+ * GetGestureInfo (USER32.@)
+ */
+BOOL WINAPI GetGestureExtraArgs( HGESTUREINFO handle, UINT count, BYTE *args )
+{
+    FIXME( "handle %p, count %u, args %p stub!\n", handle, count, args );
+    SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
+    return FALSE;
+}
+
+/*****************************************************************************
+ * GetGestureInfo (USER32.@)
+ */
+BOOL WINAPI GetGestureInfo( HGESTUREINFO handle, GESTUREINFO *ptr )
+{
+    FIXME( "handle %p, ptr %p stub!\n", handle, ptr );
+    SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
+    return FALSE;
+}
+
+/*****************************************************************************
+ * GetGestureConfig (USER32.@)
+ */
+BOOL WINAPI GetGestureConfig( HWND hwnd, DWORD reserved, DWORD flags, UINT *count,
+                              GESTURECONFIG *config, UINT size )
+{
+    FIXME( "handle %p, reserved %#lx, flags %#lx, count %p, config %p, size %u stub!\n",
+           hwnd, reserved, flags, count, config, size );
+    SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
+    return FALSE;
+}
+
+/**********************************************************************
+ * SetGestureConfig (USER32.@)
+ */
+BOOL WINAPI SetGestureConfig( HWND hwnd, DWORD reserved, UINT count,
+                              GESTURECONFIG *config, UINT size )
+{
+    FIXME( "handle %p, reserved %#lx, count %u, config %p, size %u stub!\n",
+           hwnd, reserved, count, config, size );
+    SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
+    return FALSE;
+}
diff --git a/dlls/user32/misc.c b/dlls/user32/misc.c
index 11111111111..11111111111 100644
--- a/dlls/user32/misc.c
+++ b/dlls/user32/misc.c
@@ -461,35 +461,6 @@ BOOL WINAPI UnregisterSuspendResumeNotification(HPOWERNOTIFY handle)
     return TRUE;
 }
 
-/*****************************************************************************
- * GetGestureConfig (USER32.@)
- */
-BOOL WINAPI GetGestureConfig( HWND hwnd, DWORD reserved, DWORD flags, UINT *count, GESTURECONFIG *config, UINT size )
-{
-    FIXME("(%p %08lx %08lx %p %p %u): stub\n", hwnd, reserved, flags, count, config, size);
-    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
-    return FALSE;
-}
-
-/**********************************************************************
- * SetGestureConfig [USER32.@]
- */
-BOOL WINAPI SetGestureConfig( HWND hwnd, DWORD reserved, UINT id, PGESTURECONFIG config, UINT size )
-{
-    FIXME("(%p %08lx %u %p %u): stub\n", hwnd, reserved, id, config, size);
-    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
-    return FALSE;
-}
-
-/**********************************************************************
- * IsTouchWindow [USER32.@]
- */
-BOOL WINAPI IsTouchWindow( HWND hwnd, PULONG flags )
-{
-    FIXME("(%p %p): stub\n", hwnd, flags);
-    return FALSE;
-}
-
 /**********************************************************************
  * IsWindowRedirectedForPrint [USER32.@]
  */
diff --git a/dlls/user32/user32.spec b/dlls/user32/user32.spec
index 11111111111..11111111111 100644
--- a/dlls/user32/user32.spec
+++ b/dlls/user32/user32.spec
@@ -76,6 +76,7 @@
 @ stdcall CloseClipboard() NtUserCloseClipboard
 @ stdcall CloseDesktop(long) NtUserCloseDesktop
 @ stdcall CloseTouchInputHandle(long)
+@ stdcall CloseGestureInfoHandle(long)
 @ stdcall CloseWindow(long)
 @ stdcall CloseWindowStation(long) NtUserCloseWindowStation
 @ stdcall CopyAcceleratorTableA(long ptr long)
@@ -304,6 +305,7 @@
 @ stdcall GetFocus()
 @ stdcall GetForegroundWindow() NtUserGetForegroundWindow
 @ stdcall GetGestureConfig(long long long ptr ptr long)
+@ stdcall GetGestureExtraArgs(long long ptr)
 @ stdcall GetGestureInfo(long ptr)
 @ stdcall GetGUIThreadInfo(long ptr) NtUserGetGUIThreadInfo
 @ stdcall GetGuiResources(long long)
diff --git a/dlls/user32/win.c b/dlls/user32/win.c
index 11111111111..11111111111 100644
--- a/dlls/user32/win.c
+++ b/dlls/user32/win.c
@@ -1689,56 +1689,6 @@ LONG_PTR WINAPI SetWindowLongPtrA( HWND hwnd, INT offset, LONG_PTR newval )
 
 #endif /* _WIN64 */
 
-/*****************************************************************************
- *              RegisterTouchWindow (USER32.@)
- */
-BOOL WINAPI RegisterTouchWindow(HWND hwnd, ULONG flags)
-{
-    FIXME("(%p %08lx): stub\n", hwnd, flags);
-    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
-    return FALSE;
-}
-
-/*****************************************************************************
- *              UnregisterTouchWindow (USER32.@)
- */
-BOOL WINAPI UnregisterTouchWindow(HWND hwnd)
-{
-    FIXME("(%p): stub\n", hwnd);
-    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
-    return FALSE;
-}
-
-/*****************************************************************************
- *              CloseTouchInputHandle (USER32.@)
- */
-BOOL WINAPI CloseTouchInputHandle(HTOUCHINPUT handle)
-{
-    FIXME("(%p): stub\n", handle);
-    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
-    return FALSE;
-}
-
-/*****************************************************************************
- *              GetTouchInputInfo (USER32.@)
- */
-BOOL WINAPI GetTouchInputInfo(HTOUCHINPUT handle, UINT count, TOUCHINPUT *ptr, int size)
-{
-    FIXME("(%p %u %p %u): stub\n", handle, count, ptr, size);
-    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
-    return FALSE;
-}
-
-/*****************************************************************************
- *              GetGestureInfo (USER32.@)
- */
-BOOL WINAPI GetGestureInfo(HGESTUREINFO handle, PGESTUREINFO ptr)
-{
-    FIXME("(%p %p): stub\n", handle, ptr);
-    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
-    return FALSE;
-}
-
 /*****************************************************************************
  *              GetWindowDisplayAffinity (USER32.@)
  */

