From 5c426e7dcc15f4dde6454bceaeac5b8ade716c7a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 11 Mar 2022 22:07:11 +0100
Subject: [PATCH 14/16] user32: Send WM_NCACTIVATE on SetForegroundWindow call.

When window is already active but has lost foreground, as shown by
concurrent SetForegroundWindow tests.
---
 dlls/user32/tests/msg.c | 14 +++++++-------
 dlls/win32u/input.c     |  4 ++++
 2 files changed, 11 insertions(+), 7 deletions(-)

#diff --git a/dlls/user32/tests/msg.c b/dlls/user32/tests/msg.c
#index 11111111111..11111111111 100644
#--- a/dlls/user32/tests/msg.c
#+++ b/dlls/user32/tests/msg.c
#@@ -15210,25 +15210,25 @@ static void test_interthread_set_foreground_window(struct test_set_foreground_wi
#     const struct test_set_foreground_window_desc test_sfw_tests[] =
#     {
#         { hwnd1, FALSE, FALSE, FALSE,  FALSE, WmEmptySeq, FALSE, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
#-        { hwnd1, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#+        { hwnd1, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq, FALSE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#         { hwnd1, FALSE, TRUE, FALSE,   FALSE, WmEmptySeq, FALSE, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
#-        { hwnd1, TRUE, TRUE, FALSE,    FALSE, WmEmptySeq,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#+        { hwnd1, TRUE, TRUE, FALSE,    FALSE, WmEmptySeq, FALSE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#         { hwnd1, FALSE, FALSE, TRUE,   FALSE, WmEmptySeq, FALSE, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
#-        { hwnd1, TRUE, FALSE, TRUE,    FALSE, WmEmptySeq,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#+        { hwnd1, TRUE, FALSE, TRUE,    FALSE, WmEmptySeq, FALSE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
# 
#         { hwnd2, FALSE, FALSE, FALSE,  FALSE, WmEmptySeq, FALSE, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
#         { hwnd2, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq, FALSE, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
#         { hwnd2, FALSE, TRUE, FALSE,   FALSE, sequence_3, FALSE, WmEmptySeq,  TRUE, sequence_0,  TRUE, hwnd1 },
#-        { hwnd2, TRUE, TRUE, FALSE,    FALSE, sequence_4,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#+        { hwnd2, TRUE, TRUE, FALSE,    FALSE, sequence_4, FALSE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#         { hwnd2, FALSE, FALSE, TRUE,    TRUE, sequence_5, FALSE, WmEmptySeq,  TRUE, sequence_0,  TRUE, hwnd1 },
#-        { hwnd2, TRUE, FALSE, TRUE,     TRUE, sequence_6,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#+        { hwnd2, TRUE, FALSE, TRUE,     TRUE, sequence_6, FALSE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
# 
#         { hwnd0, FALSE, FALSE, FALSE,  FALSE, WmEmptySeq, FALSE, sequence_3, FALSE, sequence_0, FALSE, hwnd1 },
#         { hwnd0, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq, FALSE, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
#         { hwnd0, FALSE, TRUE, FALSE,   FALSE, sequence_3, FALSE, WmEmptySeq, FALSE, sequence_0, FALSE, hwnd1 },
#-        { hwnd0, TRUE, TRUE, FALSE,    FALSE, sequence_4,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#+        { hwnd0, TRUE, TRUE, FALSE,    FALSE, sequence_4, FALSE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#         { hwnd0, FALSE, FALSE, TRUE,    TRUE, sequence_5, FALSE, WmEmptySeq, FALSE, sequence_0, FALSE, hwnd1 },
#-        { hwnd0, TRUE, FALSE, TRUE,     TRUE, sequence_6,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#+        { hwnd0, TRUE, FALSE, TRUE,     TRUE, sequence_6, FALSE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
#     };
# 
#     DWORD i, res;
diff --git a/dlls/win32u/input.c b/dlls/win32u/input.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/input.c
+++ b/dlls/win32u/input.c
@@ -1814,6 +1814,10 @@ BOOL set_foreground_window( HWND hwnd, BOOL mouse )
         else if (send_msg_new)  /* old window belongs to us but new one to other thread */
             ret = set_active_window( 0, NULL, mouse, TRUE );
 
+        /* already active, set_active_window will do no nothing */
+        if (!send_msg_new && hwnd == get_active_window())
+            send_message( hwnd, WM_NCACTIVATE, TRUE, (LPARAM)hwnd );
+
         if (send_msg_new)  /* new window belongs to other thread */
             NtUserPostMessage( hwnd, WM_WINE_SETACTIVEWINDOW, (WPARAM)hwnd, 0 );
         else  /* new window belongs to us */
-- 
2.37.2

