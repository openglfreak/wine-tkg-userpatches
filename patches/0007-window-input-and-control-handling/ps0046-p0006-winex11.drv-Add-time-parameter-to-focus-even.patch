From bcb71a5a7002b7618b5e1e77f19d3919397cb989 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 17 Jan 2020 18:04:35 +0100
Subject: [PATCH 06/16] winex11.drv: Add time parameter to focus events
 handlers.

---
 dlls/winex11.drv/event.c  | 48 +++++++++++++++++++++++++--------------
 dlls/winex11.drv/x11drv.h |  3 +++
 2 files changed, 34 insertions(+), 17 deletions(-)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index 75c75acc4c0..40e515cc93d 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -788,10 +788,7 @@ static const char * const focus_modes[] =
     "NotifyWhileGrabbed"
 };
 
-/**********************************************************************
- *              X11DRV_FocusIn
- */
-static BOOL X11DRV_FocusIn( HWND hwnd, XEvent *xev )
+BOOL x11drv_handle_focus_in_event( HWND hwnd, XEvent *xev, Time time )
 {
     XFocusChangeEvent *event = &xev->xfocus;
     XIC xic;
@@ -835,16 +832,24 @@ static BOOL X11DRV_FocusIn( HWND hwnd, XEvent *xev )
         if (hwnd) hwnd = GetAncestor( hwnd, GA_ROOT );
         if (!hwnd) hwnd = GetActiveWindow();
         if (!hwnd) hwnd = x11drv_thread_data()->last_focus;
-        if (hwnd && can_activate_window(hwnd)) set_focus( event->display, hwnd, CurrentTime );
+        if (hwnd && can_activate_window(hwnd)) set_focus( event->display, hwnd, time );
     }
-    else __wine_set_foreground_window( hwnd, GetTickCount() );
+    else __wine_set_foreground_window( hwnd, EVENT_x11_time_to_win32_time( time ) );
     return TRUE;
 }
 
+/**********************************************************************
+ *              X11DRV_FocusIn
+ */
+static BOOL X11DRV_FocusIn( HWND hwnd, XEvent *xev )
+{
+    return x11drv_handle_focus_in_event( hwnd, xev, CurrentTime );
+}
+
 /**********************************************************************
  *              focus_out
  */
-static void focus_out( Display *display , HWND hwnd )
+static void focus_out( Display *display , HWND hwnd, Time time )
  {
     HWND hwnd_tmp;
     Window focus_win;
@@ -883,17 +888,13 @@ static void focus_out( Display *display , HWND hwnd )
         if (hwnd == GetForegroundWindow())
         {
             TRACE( "lost focus, setting fg to desktop\n" );
-            __wine_set_foreground_window( GetDesktopWindow(), GetTickCount() );
+            __wine_set_foreground_window( GetDesktopWindow(), EVENT_x11_time_to_win32_time( time ) );
         }
     }
  }
 
-/**********************************************************************
- *              X11DRV_FocusOut
- *
- * Note: only top-level windows get FocusOut events.
- */
-static BOOL X11DRV_FocusOut( HWND hwnd, XEvent *xev )
+
+BOOL x11drv_handle_focus_out_event( HWND hwnd, XEvent *xev, Time time )
 {
     XFocusChangeEvent *event = &xev->xfocus;
 
@@ -925,11 +926,22 @@ static BOOL X11DRV_FocusOut( HWND hwnd, XEvent *xev )
         return TRUE; /* ignore wm specific NotifyUngrab / NotifyGrab events w.r.t focus */
     }
 
-    focus_out( event->display, hwnd );
+    focus_out( event->display, hwnd, time );
     return TRUE;
 }
 
 
+/**********************************************************************
+ *              X11DRV_FocusOut
+ *
+ * Note: only top-level windows get FocusOut events.
+ */
+static BOOL X11DRV_FocusOut( HWND hwnd, XEvent *xev )
+{
+    return x11drv_handle_focus_out_event( hwnd, xev, CurrentTime );
+}
+
+
 /***********************************************************************
  *           X11DRV_Expose
  */
@@ -1707,6 +1719,8 @@ static void EVENT_DropURLs( HWND hWnd, XClientMessageEvent *event )
  */
 static void handle_xembed_protocol( HWND hwnd, XClientMessageEvent *event )
 {
+    Time time = event->data.l[0];
+
     switch (event->data.l[1])
     {
     case XEMBED_EMBEDDED_NOTIFY:
@@ -1732,12 +1746,12 @@ static void handle_xembed_protocol( HWND hwnd, XClientMessageEvent *event )
 
     case XEMBED_WINDOW_DEACTIVATE:
         TRACE( "win %p/%lx XEMBED_WINDOW_DEACTIVATE message\n", hwnd, event->window );
-        focus_out( event->display, GetAncestor( hwnd, GA_ROOT ) );
+        focus_out( event->display, GetAncestor( hwnd, GA_ROOT ), time );
         break;
 
     case XEMBED_FOCUS_OUT:
         TRACE( "win %p/%lx XEMBED_FOCUS_OUT message\n", hwnd, event->window );
-        focus_out( event->display, GetAncestor( hwnd, GA_ROOT ) );
+        focus_out( event->display, GetAncestor( hwnd, GA_ROOT ), time );
         break;
 
     case XEMBED_MODALITY_ON:
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index d56617d7a55..44fbc898185 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -203,6 +203,9 @@ extern void x11drv_xinput_init(void) DECLSPEC_HIDDEN;
 extern void x11drv_xinput_enable( Display *display, Window window, long event_mask ) DECLSPEC_HIDDEN;
 extern void x11drv_xinput_disable( Display *display, Window window, long event_mask ) DECLSPEC_HIDDEN;
 
+BOOL x11drv_handle_focus_in_event( HWND hwnd, XEvent *xev, Time time );
+BOOL x11drv_handle_focus_out_event( HWND hwnd, XEvent *xev, Time time );
+
 extern DWORD copy_image_bits( BITMAPINFO *info, BOOL is_r8g8b8, XImage *image,
                               const struct gdi_image_bits *src_bits, struct gdi_image_bits *dst_bits,
                               struct bitblt_coords *coords, const int *mapping, unsigned int zeropad_mask ) DECLSPEC_HIDDEN;

