From ca77e4d54b94134ede5fd155e8af5eda7ae36a0c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 18 Jan 2021 17:58:36 +0100
Subject: [PATCH 30/44] win32u: Use desktop shared memory for
 NtUserGetForegroundWindow.

---
 dlls/win32u/input.c          |  9 +++++----
 dlls/win32u/ntuser_private.h |  2 ++
 dlls/win32u/sysparams.c      | 10 ++++++++++
 dlls/win32u/win32u_private.h |  1 +
 dlls/win32u/winstation.c     | 37 ++++++++++++++++++++++++++++++++++++
 include/ntuser.h             |  1 +
 6 files changed, 56 insertions(+), 4 deletions(-)

diff --git a/dlls/win32u/input.c b/dlls/win32u/input.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/input.c
+++ b/dlls/win32u/input.c
@@ -1413,14 +1413,15 @@ BOOL WINAPI release_capture(void)
  */
 HWND WINAPI NtUserGetForegroundWindow(void)
 {
+    volatile struct input_shared_memory *shared = (void *)NtUserCallNoParam( NtUserGetForegroundSharedMemory );
     HWND ret = 0;
 
-    SERVER_START_REQ( get_thread_input )
+    if (!shared) return 0;
+    SHARED_READ_BEGIN( &shared->seq )
     {
-        req->tid = 0;
-        if (!wine_server_call_err( req )) ret = wine_server_ptr_handle( reply->foreground );
+        ret = wine_server_ptr_handle( shared->active );
     }
-    SERVER_END_REQ;
+    SHARED_READ_END( &shared->seq );
     return ret;
 }
 
diff --git a/dlls/win32u/ntuser_private.h b/dlls/win32u/ntuser_private.h
index 11111111111..11111111111 100644
--- a/dlls/win32u/ntuser_private.h
+++ b/dlls/win32u/ntuser_private.h
@@ -140,6 +140,8 @@ struct user_thread_info
     struct desktop_shared_memory *desktop_shared_memory;  /* Ptr to server's desktop shared memory */
     HANDLE                        queue_shared_map;       /* HANDLE to server's thread queue shared memory */
     struct queue_shared_memory   *queue_shared_memory;     /* Ptr to server's thread queue shared memory */
+    HANDLE                        foreground_shared_map;    /* HANDLE to server's thread input shared memory */
+    struct input_shared_memory   *foreground_shared_memory; /* Ptr to server's thread input shared memory */
 };
 
 C_ASSERT( sizeof(struct user_thread_info) <= sizeof(((TEB *)0)->Win32ClientInfo) );
diff --git a/dlls/win32u/sysparams.c b/dlls/win32u/sysparams.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/sysparams.c
+++ b/dlls/win32u/sysparams.c
@@ -5424,6 +5424,13 @@ static void thread_detach(void)
         thread_info->queue_shared_memory = NULL;
     }
 
+    if (thread_info->foreground_shared_memory)
+    {
+        NtClose( thread_info->foreground_shared_map );
+        thread_info->foreground_shared_map = NULL;
+        thread_info->foreground_shared_memory = NULL;
+    }
+
     exiting_thread_id = 0;
 }
 
@@ -5473,6 +5480,9 @@ ULONG_PTR WINAPI NtUserCallNoParam( ULONG code )
     case NtUserGetQueueSharedMemory:
         return (ULONG_PTR)get_queue_shared_memory();
 
+    case NtUserGetForegroundSharedMemory:
+        return (ULONG_PTR)get_foreground_shared_memory();
+
     default:
         FIXME( "invalid code %u\n", (int)code );
         return 0;
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 11111111111..11111111111 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -417,6 +417,7 @@ static inline void release_win_ptr( struct tagWND *ptr )
 /* winstation.c */
 extern volatile struct desktop_shared_memory *get_desktop_shared_memory( void ) DECLSPEC_HIDDEN;
 extern volatile struct queue_shared_memory *get_queue_shared_memory( void ) DECLSPEC_HIDDEN;
+extern volatile struct input_shared_memory *get_foreground_shared_memory( void ) DECLSPEC_HIDDEN;
 
 extern void wrappers_init( unixlib_handle_t handle ) DECLSPEC_HIDDEN;
 extern void gdi_init(void) DECLSPEC_HIDDEN;
diff --git a/dlls/win32u/winstation.c b/dlls/win32u/winstation.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/winstation.c
+++ b/dlls/win32u/winstation.c
@@ -654,6 +654,43 @@ volatile struct queue_shared_memory *get_queue_shared_memory( void )
 }
 
 
+static volatile struct input_shared_memory *get_thread_input_shared_memory( DWORD tid, HANDLE *handle,
+                                                                            struct input_shared_memory **ptr )
+{
+    char bufA[MAX_PATH];
+    WCHAR buf[MAX_PATH];
+    UINT len;
+
+    if (*ptr && (*ptr)->tid == tid) return *ptr;
+    if (*ptr) NtClose( *handle );
+
+    snprintf( bufA, ARRAY_SIZE(buf), "\\KernelObjects\\__wine_thread_mappings\\%08x-input", tid );
+    len = asciiz_to_unicode( buf, bufA ) / sizeof(WCHAR) - 1;
+    map_shared_memory_section( buf, len, sizeof(struct input_shared_memory), NULL,
+                               handle, (void **)ptr );
+    return *ptr;
+}
+
+
+volatile struct input_shared_memory *get_foreground_shared_memory( void )
+{
+    volatile struct desktop_shared_memory *desktop = get_desktop_shared_memory();
+    struct user_thread_info *thread_info = get_user_thread_info();
+    DWORD tid;
+
+    if (!desktop) return NULL;
+    SHARED_READ_BEGIN( &desktop->seq )
+    {
+        tid = desktop->foreground_tid;
+    }
+    SHARED_READ_END( &desktop->seq );
+
+    if (!tid) return NULL;
+    return get_thread_input_shared_memory( tid, &thread_info->foreground_shared_map,
+                                           &thread_info->foreground_shared_memory );
+}
+
+
 /***********************************************************************
  *           winstation_init
  *
diff --git a/include/ntuser.h b/include/ntuser.h
index 11111111111..11111111111 100644
--- a/include/ntuser.h
+++ b/include/ntuser.h
@@ -919,6 +919,7 @@ enum
     NtUserExitingThread,
     NtUserThreadDetach,
     NtUserGetQueueSharedMemory,
+    NtUserGetForegroundSharedMemory,
 };
 

 static inline BOOL NtUserDestroyCaret(void)
