From: "Roman Pišl" <rpisl@seznam.cz>
Subject: [PATCH 2/4] server: Added get_console_process_list to the protocol.
Message-Id: <20200317132854.32299-2-rpisl@seznam.cz>
Date: Tue, 17 Mar 2020 14:28:52 +0100
In-Reply-To: <20200317132854.32299-1-rpisl@seznam.cz>
References: <20200317132854.32299-1-rpisl@seznam.cz>

Signed-off-by: Roman Pišl <rpisl@seznam.cz>
---
 include/wine/server_protocol.h | 20 +++++++++++++++++++-
 server/protocol.def            |  9 +++++++++
 server/request.h               |  6 ++++++
 server/trace.c                 | 14 ++++++++++++++
 4 files changed, 48 insertions(+), 1 deletion(-)

diff --git a/include/wine/server_protocol.h b/include/wine/server_protocol.h
index a0acbf9deb7..de9fdcf0347 100644
--- a/include/wine/server_protocol.h
+++ b/include/wine/server_protocol.h
@@ -1810,6 +1810,21 @@ struct send_socket_reply
 
 
 
+struct get_console_process_list_request
+{
+    struct request_header __header;
+    data_size_t count;
+};
+struct get_console_process_list_reply
+{
+    struct reply_header __header;
+    data_size_t total;
+    /* VARARG(data,uints); */
+    char __pad_12[4];
+};
+
+
+
 struct get_next_console_request_request
 {
     struct request_header __header;
@@ -5661,6 +5676,7 @@ enum request
     REQ_recv_socket,
     REQ_poll_socket,
     REQ_send_socket,
+    REQ_get_console_process_list,
     REQ_get_next_console_request,
     REQ_read_directory_changes,
     REQ_read_change,
@@ -5956,6 +5972,7 @@ union generic_request
     struct recv_socket_request recv_socket_request;
     struct poll_socket_request poll_socket_request;
     struct send_socket_request send_socket_request;
+    struct get_console_process_list_request get_console_process_list_request;
     struct get_next_console_request_request get_next_console_request_request;
     struct read_directory_changes_request read_directory_changes_request;
     struct read_change_request read_change_request;
@@ -6249,6 +6266,7 @@ union generic_reply
     struct recv_socket_reply recv_socket_reply;
     struct poll_socket_reply poll_socket_reply;
     struct send_socket_reply send_socket_reply;
+    struct get_console_process_list_reply get_console_process_list_reply;
     struct get_next_console_request_reply get_next_console_request_reply;
     struct read_directory_changes_reply read_directory_changes_reply;
     struct read_change_reply read_change_reply;
@@ -6482,7 +6500,7 @@ union generic_reply
 
 /* ### protocol_version begin ### */
 
-#define SERVER_PROTOCOL_VERSION 740
+#define SERVER_PROTOCOL_VERSION 741
 
 /* ### protocol_version end ### */
 
diff --git a/server/protocol.def b/server/protocol.def
index a7cb89dc77e..bd0c9725da9 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -1465,6 +1465,15 @@ enum server_fd_type
 @END
 
 
+/* Get console process list */
+@REQ(get_console_process_list)
+    data_size_t count;          /* maximum number of processes in list */
+@REPLY
+    data_size_t total;
+    VARARG(data,uints);         /* PIDs attached to the console */
+@END
+
+
 /* Retrieve the next pending console ioctl request */
 @REQ(get_next_console_request)
     obj_handle_t handle;        /* console server handle */
diff --git a/server/request.h b/server/request.h
index d5aeea15054..e2fc7d7ff52 100644
--- a/server/request.h
+++ b/server/request.h
@@ -178,6 +178,7 @@ DECL_HANDLER(get_socket_event);
 DECL_HANDLER(recv_socket);
 DECL_HANDLER(poll_socket);
 DECL_HANDLER(send_socket);
+DECL_HANDLER(get_console_process_list);
 DECL_HANDLER(get_next_console_request);
 DECL_HANDLER(read_directory_changes);
 DECL_HANDLER(read_change);
@@ -472,6 +473,7 @@ static const req_handler req_handlers[REQ_NB_REQUESTS] =
     (req_handler)req_recv_socket,
     (req_handler)req_poll_socket,
     (req_handler)req_send_socket,
+    (req_handler)req_get_console_process_list,
     (req_handler)req_get_next_console_request,
     (req_handler)req_read_directory_changes,
     (req_handler)req_read_change,
@@ -1098,6 +1100,10 @@ C_ASSERT( sizeof(struct enable_socket_event_request) == 32 );
 C_ASSERT( FIELD_OFFSET(struct send_socket_reply, wait) == 8 );
 C_ASSERT( FIELD_OFFSET(struct send_socket_reply, options) == 12 );
 C_ASSERT( sizeof(struct send_socket_reply) == 16 );
+C_ASSERT( FIELD_OFFSET(struct get_console_process_list_request, count) == 12 );
+C_ASSERT( sizeof(struct get_console_process_list_request) == 16 );
+C_ASSERT( FIELD_OFFSET(struct get_console_process_list_reply, total) == 8 );
+C_ASSERT( sizeof(struct get_console_process_list_reply) == 16 );
 C_ASSERT( FIELD_OFFSET(struct get_next_console_request_request, handle) == 12 );
 C_ASSERT( FIELD_OFFSET(struct get_next_console_request_request, signal) == 16 );
 C_ASSERT( FIELD_OFFSET(struct get_next_console_request_request, read) == 20 );
diff --git a/server/trace.c b/server/trace.c
index 71248054c08..ea475ca38c8 100644
--- a/server/trace.c
+++ b/server/trace.c
@@ -2027,6 +2027,17 @@ static void dump_send_socket_reply( const struct send_socket_reply *req )
     fprintf( stderr, ", options=%08x", req->options );
 }
 
+static void dump_get_console_process_list_request( const struct get_console_process_list_request *req )
+{
+    fprintf( stderr, " count=%u", req->count );
+}
+
+static void dump_get_console_process_list_reply( const struct get_console_process_list_reply *req )
+{
+    fprintf( stderr, " total=%u", req->total );
+    dump_varargs_uints( ", data=", cur_size );
+}
+
 static void dump_get_next_console_request_request( const struct get_next_console_request_request *req )
 {
     fprintf( stderr, " handle=%04x", req->handle );
@@ -4591,6 +4602,7 @@ static const dump_func req_dumpers[REQ_NB_REQUESTS] = {
     (dump_func)dump_recv_socket_request,
     (dump_func)dump_poll_socket_request,
     (dump_func)dump_send_socket_request,
+    (dump_func)dump_get_console_process_list_request,
     (dump_func)dump_get_next_console_request_request,
     (dump_func)dump_read_directory_changes_request,
     (dump_func)dump_read_change_request,
@@ -4882,6 +4894,7 @@ static const dump_func reply_dumpers[REQ_NB_REQUESTS] = {
     (dump_func)dump_recv_socket_reply,
     (dump_func)dump_poll_socket_reply,
     (dump_func)dump_send_socket_reply,
+    (dump_func)dump_get_console_process_list_reply,
     (dump_func)dump_get_next_console_request_reply,
     NULL,
     (dump_func)dump_read_change_reply,
@@ -5173,6 +5186,7 @@ static const char * const req_names[REQ_NB_REQUESTS] = {
     "recv_socket",
     "poll_socket",
     "send_socket",
+    "get_console_process_list",
     "get_next_console_request",
     "read_directory_changes",
     "read_change",
