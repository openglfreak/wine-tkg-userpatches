From ee1457fad418640c210593a00c91afa10b9491a8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 1 Mar 2021 20:55:26 +0100
Subject: [PATCH 11/11] user32: Use shared memory to read thread input
 keystate.

---
 dlls/user32/input.c | 49 ++++++++++++++++++++++++++++++++-------------
 1 file changed, 35 insertions(+), 14 deletions(-)

diff --git a/dlls/user32/input.c b/dlls/user32/input.c
index dba27f68c57..0abe2026dce 100644
--- a/dlls/user32/input.c
+++ b/dlls/user32/input.c
@@ -508,14 +508,39 @@ BOOL WINAPI AttachThreadInput( DWORD from, DWORD to, BOOL attach )
  */
 SHORT WINAPI DECLSPEC_HOTPATCH GetKeyState(INT vkey)
 {
+    volatile struct desktop_shared_memory *desktop = get_desktop_shared_memory();
+    volatile struct input_shared_memory *foreground = get_foreground_shared_memory();
+    volatile struct input_shared_memory *shared = get_input_shared_memory();
+    DWORD tid = GetCurrentThreadId();
     SHORT retval = 0;
+    BOOL is_foreground, update_keystate;
 
-    SERVER_START_REQ( get_key_state )
+    SHARED_READ_BEGIN( &foreground->seq )
     {
-        req->key = vkey;
-        if (!wine_server_call( req )) retval = (signed char)(reply->state & 0x81);
+        if ((is_foreground = (foreground->tid == tid)))
+            retval = (signed char)(foreground->keystate[vkey & 0xff] & 0x81);
     }
-    SERVER_END_REQ;
+    SHARED_READ_END( &foreground->seq );
+
+    if (!is_foreground)
+    {
+        SHARED_READ_BEGIN( &shared->seq )
+        SHARED_READ_BEGIN( &desktop->seq )
+        {
+            retval = (signed char)(shared->keystate[vkey & 0xff] & 0x81);
+            update_keystate = memcmp( (const void *)desktop->keystate, (const void *)shared->keystate, 256 );
+        }
+        SHARED_READ_END( &desktop->seq );
+        SHARED_READ_END( &shared->seq );
+
+        if (update_keystate) SERVER_START_REQ( get_key_state )
+        {
+            req->key = vkey;
+            if (!wine_server_call( req )) retval = (signed char)(reply->state & 0x81);
+        }
+        SERVER_END_REQ;
+    }
+
     TRACE("key (0x%x) -> %x\n", vkey, retval);
     return retval;
 }
@@ -526,21 +551,17 @@ SHORT WINAPI DECLSPEC_HOTPATCH GetKeyState(INT vkey)
  */
 BOOL WINAPI DECLSPEC_HOTPATCH GetKeyboardState( LPBYTE state )
 {
-    BOOL ret;
-    UINT i;
+    volatile struct input_shared_memory *shared = get_input_shared_memory();
 
     TRACE("(%p)\n", state);
 
-    memset( state, 0, 256 );
-    SERVER_START_REQ( get_key_state )
+    SHARED_READ_BEGIN( &shared->seq )
     {
-        req->key = -1;
-        wine_server_set_reply( req, state, 256 );
-        ret = !wine_server_call_err( req );
-        for (i = 0; i < 256; i++) state[i] &= 0x81;
+        memcpy( state, (const void *)shared->keystate, 256 );
     }
-    SERVER_END_REQ;
-    return ret;
+    SHARED_READ_END( &shared->seq );
+
+    return TRUE;
 }
 
 
