From: Paul Gofman <pgofman@codeweavers.com>
Subject: [PATCH v4 1/4] ntdll: Factor out capture_stack_back_trace() helper.
Message-Id: <20211101111400.153412-1-pgofman@codeweavers.com>
Date: Mon,  1 Nov 2021 14:13:57 +0300

Signed-off-by: Paul Gofman <pgofman@codeweavers.com>
---
v4:
    - added patch.

 dlls/ntdll/exception.c     | 12 ++++++++++++
 dlls/ntdll/ntdll_misc.h    |  2 ++
 dlls/ntdll/signal_arm.c    |  4 ++--
 dlls/ntdll/signal_arm64.c  |  4 ++--
 dlls/ntdll/signal_i386.c   |  6 ++++--
 dlls/ntdll/signal_x86_64.c | 10 ++++++----
 6 files changed, 28 insertions(+), 10 deletions(-)

diff --git a/dlls/ntdll/exception.c b/dlls/ntdll/exception.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/exception.c
+++ b/dlls/ntdll/exception.c
@@ -1094,3 +1094,15 @@ VOID WINAPI RtlGetCallersAddress( PVOID *address, PVOID *caller )
     if ( framecount ) *address = backtrace[0];
     if ( framecount > 1 ) *caller = backtrace[1];
 }
+
+
+/*************************************************************************
+ *		RtlCaptureStackBackTrace (NTDLL.@)
+ */
+USHORT WINAPI RtlCaptureStackBackTrace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash )
+{
+    ULONG ret;
+
+    ret = capture_stack_back_trace( skip, count, buffer, hash );
+    return min( ret, ~(USHORT)0 );
+}
diff --git a/dlls/ntdll/ntdll_misc.h b/dlls/ntdll/ntdll_misc.h
index 11111111111..11111111111 100644
--- a/dlls/ntdll/ntdll_misc.h
+++ b/dlls/ntdll/ntdll_misc.h
@@ -61,6 +61,8 @@ extern void (WINAPI *pWow64PrepareForException)( EXCEPTION_RECORD *rec, CONTEXT
 extern RUNTIME_FUNCTION *lookup_function_info( ULONG_PTR pc, ULONG_PTR *base, LDR_DATA_TABLE_ENTRY **module ) DECLSPEC_HIDDEN;
 #endif
 
+extern ULONG WINAPI capture_stack_back_trace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash ) DECLSPEC_HIDDEN;
+
 /* debug helpers */
 extern LPCSTR debugstr_us( const UNICODE_STRING *str ) DECLSPEC_HIDDEN;
 extern const char *debugstr_exception_code( DWORD code ) DECLSPEC_HIDDEN;
diff --git a/dlls/ntdll/signal_arm.c b/dlls/ntdll/signal_arm.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/signal_arm.c
+++ b/dlls/ntdll/signal_arm.c
@@ -1481,9 +1481,9 @@ __ASM_STDCALL_FUNC( RtlRaiseException, 4,
                     "bl " __ASM_NAME("RtlRaiseStatus") )
 
 /*************************************************************************
- *             RtlCaptureStackBackTrace (NTDLL.@)
+ *             capture_stack_back_trace
  */
-USHORT WINAPI RtlCaptureStackBackTrace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash )
+ULONG WINAPI capture_stack_back_trace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash )
 {
     FIXME( "(%ld, %ld, %p, %p) stub!\n", skip, count, buffer, hash );
     return 0;
diff --git a/dlls/ntdll/signal_arm64.c b/dlls/ntdll/signal_arm64.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/signal_arm64.c
+++ b/dlls/ntdll/signal_arm64.c
@@ -1521,9 +1521,9 @@ __ASM_STDCALL_FUNC( RtlRaiseException, 4,
                    "bl " __ASM_NAME("RtlRaiseStatus") /* does not return */ );
 
 /*************************************************************************
- *             RtlCaptureStackBackTrace (NTDLL.@)
+ *             capture_stack_back_trace
  */
-USHORT WINAPI RtlCaptureStackBackTrace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash )
+ULONG WINAPI capture_stack_back_trace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash )
 {
     FIXME( "(%ld, %ld, %p, %p) stub!\n", skip, count, buffer, hash );
     return 0;
diff --git a/dlls/ntdll/signal_i386.c b/dlls/ntdll/signal_i386.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/signal_i386.c
+++ b/dlls/ntdll/signal_i386.c
@@ -513,14 +513,16 @@ __ASM_STDCALL_FUNC( RtlRaiseException, 4,
 
 
 /*************************************************************************
- *		RtlCaptureStackBackTrace (NTDLL.@)
+ *		capture_stack_back_trace
  */
-USHORT WINAPI RtlCaptureStackBackTrace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash )
+ULONG WINAPI capture_stack_back_trace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash )
 {
     CONTEXT context;
     ULONG i;
     ULONG *frame;
 
+    ++skip;
+
     RtlCaptureContext( &context );
     if (hash) *hash = 0;
     frame = (ULONG *)context.Ebp;
diff --git a/dlls/ntdll/signal_x86_64.c b/dlls/ntdll/signal_x86_64.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/signal_x86_64.c
+++ b/dlls/ntdll/signal_x86_64.c
@@ -1564,19 +1564,21 @@ static inline ULONG hash_pointers( void **ptrs, ULONG count )
 
 
 /*************************************************************************
- *		RtlCaptureStackBackTrace (NTDLL.@)
+ *		capture_stack_back_trace
  */
-USHORT WINAPI RtlCaptureStackBackTrace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash )
+ULONG WINAPI capture_stack_back_trace( ULONG skip, ULONG count, PVOID *buffer, ULONG *hash )
 {
     UNWIND_HISTORY_TABLE table;
     DISPATCHER_CONTEXT dispatch;
     CONTEXT context;
     NTSTATUS status;
     ULONG i;
-    USHORT num_entries = 0;
+    ULONG num_entries = 0;
 
     TRACE( "(%lu, %lu, %p, %p)\n", skip, count, buffer, hash );
 
+    ++skip;
+
     RtlCaptureContext( &context );
     dispatch.TargetIp      = 0;
     dispatch.ContextRecord = &context;
@@ -1603,7 +1605,7 @@ USHORT WINAPI RtlCaptureStackBackTrace( ULONG skip, ULONG count, PVOID *buffer,
         if (i >= skip) buffer[num_entries++] = (void *)context.Rip;
     }
     if (hash && num_entries > 0) *hash = hash_pointers( buffer, num_entries );
-    TRACE( "captured %hu frames\n", num_entries );
+    TRACE( "captured %u frames\n", num_entries );
     return num_entries;
 }
 

-- 
2.40.0

