From: Damjan Jovanovic <damjan.jov@gmail.com>
Subject: [PATCH v3 3/7] adsldp: implement the ADS_SEARCHPREF_SIZE_LIMIT search preference
Message-Id: <CAJm2B-kbB0KQ1GhcXhO90bDG+KbshynvrTiZj3QaEyzVx0AZ7w@mail.gmail.com>
Date: Thu, 18 Feb 2021 18:49:05 +0200

Signed-off-by: Damjan Jovanovic <damjan.jov@gmail.com>
---
 dlls/adsldp/adsldp.c | 22 +++++++++++++++++++++-
 1 file changed, 21 insertions(+), 1 deletion(-)

diff --git a/dlls/adsldp/adsldp.c b/dlls/adsldp/adsldp.c
index f8802759bdf..905018fe59a 100644
--- a/dlls/adsldp/adsldp.c
+++ b/dlls/adsldp/adsldp.c
@@ -1164,6 +1164,7 @@ static ULONG WINAPI search_Release(IDirectorySearch *iface)
 static HRESULT WINAPI search_SetSearchPreference(IDirectorySearch *iface, PADS_SEARCHPREF_INFO prefs, DWORD count)
 {
     LDAP_namespace *ldap = impl_from_IDirectorySearch(iface);
+    ULONG err;
     HRESULT hr = S_OK;
     DWORD i;
 
@@ -1200,7 +1201,6 @@ static HRESULT WINAPI search_SetSearchPreference(IDirectorySearch *iface, PADS_S
         case ADS_SEARCHPREF_SECURITY_MASK:
         {
             int security_mask;
-            ULONG err;
             BerElement *ber;
             struct berval *berval;
             LDAPControlW *ctrls[2], mask;
@@ -1299,6 +1299,26 @@ static HRESULT WINAPI search_SetSearchPreference(IDirectorySearch *iface, PADS_S
             prefs[i].dwStatus = ADS_STATUS_S_OK;
             break;
 
+        case ADS_SEARCHPREF_SIZE_LIMIT:
+            if (prefs[i].vValue.dwType != ADSTYPE_INTEGER)
+            {
+                FIXME("ADS_SEARCHPREF_SIZE_LIMIT: unsupported dwType %d\n", prefs[i].vValue.dwType);
+                prefs[i].dwStatus = ADS_STATUS_INVALID_SEARCHPREFVALUE;
+                break;
+            }
+
+            TRACE("SIZE_LIMIT: %d\n", prefs[i].vValue.u.Integer);
+            err = ldap_set_optionW(ldap->ld, LDAP_OPT_SIZELIMIT, &prefs[i].vValue.u.Integer);
+            if (err != LDAP_SUCCESS)
+            {
+                TRACE("ldap_set_option error %#x\n", err);
+                prefs[i].dwStatus = ADS_STATUS_INVALID_SEARCHPREF;
+                hr = S_ADS_ERRORSOCCURRED;
+            }
+            else
+                prefs[i].dwStatus = ADS_STATUS_S_OK;
+            break;
+
         default:
             FIXME("pref %d, type %u: stub\n", prefs[i].dwSearchPref, prefs[i].vValue.dwType);
             prefs[i].dwStatus = ADS_STATUS_INVALID_SEARCHPREF;

