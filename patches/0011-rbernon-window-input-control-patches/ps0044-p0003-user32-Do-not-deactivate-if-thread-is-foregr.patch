From e7dcba7dfb4ac42b6efe28432983203b8640271c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 20 May 2021 15:31:59 +0200
Subject: [PATCH 3/6] user32: Do not deactivate if thread is foreground.

Instead of only checking that the window is foreground.
---
 dlls/win32u/message.c   |  3 ++-
 dlls/user32/tests/msg.c | 14 +++++++-------
 2 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/dlls/win32u/message.c b/dlls/win32u/message.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/message.c
+++ b/dlls/win32u/message.c
@@ -1876,7 +1876,8 @@ LRESULT handle_internal_message( HWND hwnd, UINT msg, WPARAM wparam, LPARAM lpar
     switch(msg)
     {
     case WM_WINE_SETACTIVEWINDOW:
-        if (!wparam && NtUserGetForegroundWindow() == hwnd) return 0;
+        if (!wparam && get_window_thread( NtUserGetForegroundWindow(), NULL ) == GetCurrentThreadId())
+            return 0;
         return (LRESULT)NtUserSetActiveWindow( (HWND)wparam );
     case WM_WINE_KEYBOARD_LL_HOOK:
     case WM_WINE_MOUSE_LL_HOOK:
diff --git a/dlls/user32/tests/msg.c b/dlls/user32/tests/msg.c
index 11111111111..11111111111 100644
--- a/dlls/user32/tests/msg.c
+++ b/dlls/user32/tests/msg.c
@@ -15018,25 +15018,25 @@ static void test_interthread_set_foreground_window(struct test_set_foreground_wi
     const struct test_set_foreground_window_desc test_sfw_tests[] =
     {
         { hwnd1, FALSE, FALSE, FALSE,  FALSE, WmEmptySeq, FALSE, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd1, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq,  TRUE, sequence_1,  TRUE, sequence_2,  TRUE, hwnd0 },
+        { hwnd1, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
         { hwnd1, FALSE, TRUE, FALSE,   FALSE, WmEmptySeq, FALSE, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd1, TRUE, TRUE, FALSE,    FALSE, WmEmptySeq,  TRUE, sequence_1,  TRUE, sequence_2,  TRUE, hwnd0 },
+        { hwnd1, TRUE, TRUE, FALSE,    FALSE, WmEmptySeq,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
         { hwnd1, FALSE, FALSE, TRUE,   FALSE, WmEmptySeq, FALSE, WmEmptySeq, FALSE, sequence_2, FALSE, hwnd0 },
-        { hwnd1, TRUE, FALSE, TRUE,    FALSE, WmEmptySeq,  TRUE, sequence_1,  TRUE, sequence_2,  TRUE, hwnd0 },
+        { hwnd1, TRUE, FALSE, TRUE,    FALSE, WmEmptySeq,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
 
         { hwnd2, FALSE, FALSE, FALSE,  FALSE, WmEmptySeq, FALSE, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
         { hwnd2, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq, FALSE, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
         { hwnd2, FALSE, TRUE, FALSE,   FALSE, sequence_3, FALSE, WmEmptySeq,  TRUE, sequence_0,  TRUE, hwnd1 },
-        { hwnd2, TRUE, TRUE, FALSE,    FALSE, sequence_4,  TRUE, sequence_1,  TRUE, sequence_2,  TRUE, hwnd0 },
+        { hwnd2, TRUE, TRUE, FALSE,    FALSE, sequence_4,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
         { hwnd2, FALSE, FALSE, TRUE,    TRUE, sequence_5, FALSE, WmEmptySeq,  TRUE, sequence_0,  TRUE, hwnd1 },
-        { hwnd2, TRUE, FALSE, TRUE,     TRUE, sequence_6,  TRUE, sequence_1,  TRUE, sequence_2,  TRUE, hwnd0 },
+        { hwnd2, TRUE, FALSE, TRUE,     TRUE, sequence_6,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
 
         { hwnd0, FALSE, FALSE, FALSE,  FALSE, WmEmptySeq, FALSE, sequence_3, FALSE, sequence_0, FALSE, hwnd1 },
         { hwnd0, TRUE, FALSE, FALSE,   FALSE, WmEmptySeq, FALSE, sequence_3,  TRUE, sequence_0,  TRUE, hwnd1 },
         { hwnd0, FALSE, TRUE, FALSE,   FALSE, sequence_3, FALSE, WmEmptySeq, FALSE, sequence_0, FALSE, hwnd1 },
-        { hwnd0, TRUE, TRUE, FALSE,    FALSE, sequence_4,  TRUE, sequence_1,  TRUE, sequence_2, FALSE, hwnd0 },
+        { hwnd0, TRUE, TRUE, FALSE,    FALSE, sequence_4,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
         { hwnd0, FALSE, FALSE, TRUE,    TRUE, sequence_5, FALSE, WmEmptySeq, FALSE, sequence_0, FALSE, hwnd1 },
-        { hwnd0, TRUE, FALSE, TRUE,     TRUE, sequence_6,  TRUE, sequence_1,  TRUE, sequence_2, FALSE, hwnd0 },
+        { hwnd0, TRUE, FALSE, TRUE,     TRUE, sequence_6,  TRUE, sequence_1, FALSE, sequence_2, FALSE, hwnd0 },
     };
 
     DWORD i, res;
-- 
2.35.1

