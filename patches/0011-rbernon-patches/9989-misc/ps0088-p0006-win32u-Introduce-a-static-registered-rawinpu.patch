From 33fefddc87693909be5733a7f42989317b7a59fb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 23 Dec 2021 11:50:38 +0100
Subject: [PATCH 6/9] win32u: Introduce a static registered rawinput device
 array.

---
 dlls/win32u/rawinput.c | 25 +++++++++++++++++--------
 1 file changed, 17 insertions(+), 8 deletions(-)

diff --git a/dlls/win32u/rawinput.c b/dlls/win32u/rawinput.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/rawinput.c
+++ b/dlls/win32u/rawinput.c
@@ -207,6 +207,9 @@ struct device
 static struct device *device_array;
 static unsigned int device_count, device_capacity;
 
+static struct rawinput_device *registered_array;
+static unsigned int registered_capacity;
+
 static pthread_mutex_t rawinput_devices_mutex = PTHREAD_MUTEX_INITIALIZER;
 
 static bool array_reserve( void **elements, unsigned int *capacity, unsigned int count, unsigned int size )
@@ -805,7 +808,6 @@ BOOL process_rawinput_message( MSG *msg, UINT hw_id, const struct hardware_msg_d
  */
 BOOL WINAPI NtUserRegisterRawInputDevices( const RAWINPUTDEVICE *devices, UINT device_count, UINT size )
 {
-    struct rawinput_device *server_devices;
     BOOL ret;
     UINT i;
 
@@ -833,7 +835,14 @@ BOOL WINAPI NtUserRegisterRawInputDevices( const RAWINPUTDEVICE *devices, UINT d
         }
     }
 
-    if (!(server_devices = malloc( device_count * sizeof(*server_devices) ))) return FALSE;
+    pthread_mutex_lock( &rawinput_devices_mutex );
+
+    if (!array_reserve( (void **)&registered_array, &registered_capacity,
+                        device_count, sizeof(*registered_array)) )
+    {
+        pthread_mutex_unlock( &rawinput_devices_mutex );
+        return FALSE;
+    }
 
     for (i = 0; i < device_count; ++i)
     {
@@ -843,20 +852,20 @@ BOOL WINAPI NtUserRegisterRawInputDevices( const RAWINPUTDEVICE *devices, UINT d
         if (devices[i].dwFlags & ~(RIDEV_REMOVE|RIDEV_NOLEGACY|RIDEV_INPUTSINK|RIDEV_DEVNOTIFY))
             FIXME( "Unhandled flags %#x for device %u.\n", devices[i].dwFlags, i );
 
-        server_devices[i].usage_page = devices[i].usUsagePage;
-        server_devices[i].usage = devices[i].usUsage;
-        server_devices[i].flags = devices[i].dwFlags;
-        server_devices[i].target = wine_server_user_handle( devices[i].hwndTarget );
+        registered_array[i].usage_page = devices[i].usUsagePage;
+        registered_array[i].usage = devices[i].usUsage;
+        registered_array[i].flags = devices[i].dwFlags;
+        registered_array[i].target = wine_server_user_handle( devices[i].hwndTarget );
     }
 
     SERVER_START_REQ( update_rawinput_devices )
     {
-        wine_server_add_data( req, server_devices, device_count * sizeof(*server_devices) );
+        wine_server_add_data( req, registered_array, device_count * sizeof(*registered_array) );
         ret = !wine_server_call( req );
     }
     SERVER_END_REQ;
 
-    free( server_devices );
+    pthread_mutex_unlock( &rawinput_devices_mutex );
 
     return ret;
 }
-- 
2.37.1

