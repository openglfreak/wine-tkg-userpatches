From d4f3798ad8bb0c1198bcff6443c48e65d534b052 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 17 Jan 2020 14:23:29 +0100
Subject: [PATCH 12/12] winex11.drv: Support XInput2 focus events with
 timestamps.

---
 dlls/winex11.drv/event.c |  4 +++
 dlls/winex11.drv/mouse.c | 66 ++++++++++++++++++++++++++++++++++++++++
 2 files changed, 70 insertions(+)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -243,6 +243,10 @@ static Bool filter_event( Display *display, XEvent *event, char *arg )
             (event->xcookie.evtype == XI_RawMotion ||
              event->xcookie.evtype == XI_DeviceChanged))
             return (mask & QS_MOUSEMOVE) != 0;
+        if (event->xcookie.extension == xinput2_opcode &&
+            (event->xcookie.evtype == XI_FocusIn ||
+             event->xcookie.evtype == XI_FocusOut))
+            return (mask & QS_POSTMESSAGE) != 0;
 #endif
         return (mask & QS_SENDMESSAGE) != 0;
 #endif
diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/mouse.c
+++ b/dlls/winex11.drv/mouse.c
@@ -421,6 +421,12 @@ void x11drv_xinput_enable( Display *display, Window window, long event_mask )
         XISetMask( mask_bits, XI_ButtonPress );
         data->xi2_rawinput_only = FALSE;
     }
+    if ((event_mask & FocusChangeMask))
+    {
+        event_mask &= ~FocusChangeMask;
+        XISetMask( mask_bits, XI_FocusIn );
+        XISetMask( mask_bits, XI_FocusOut );
+    }
 
     pXISelectEvents( display, DefaultRootWindow( display ), &mask, 1 );
 
@@ -2143,6 +2149,62 @@ void x11drv_xinput_load(void)
 }
 
 
+static BOOL X11DRV_XIEnterEvent( XGenericEventCookie *xev )
+{
+    XIEnterEvent *xiev = xev->data;
+    XEvent event;
+    HWND hwnd;
+
+    if (XFindContext( xiev->display, xiev->event, winContext, (char **)&hwnd ) != 0)
+        hwnd = 0;
+    if (!hwnd && xiev->event == root_window)
+        hwnd = GetDesktopWindow();
+
+    TRACE( "hwnd/window %p/%lx\n", hwnd, xiev->event );
+
+    event.xfocus.serial = xiev->serial;
+    event.xfocus.send_event = xiev->send_event;
+    event.xfocus.display = xiev->display;
+    event.xfocus.window = xiev->event;
+
+    switch (xiev->mode)
+    {
+    case XINotifyNormal: event.xfocus.mode = NotifyNormal; break;
+    case XINotifyGrab: event.xfocus.mode = NotifyGrab; break;
+    case XINotifyUngrab: event.xfocus.mode = NotifyUngrab; break;
+    case XINotifyWhileGrabbed: event.xfocus.mode = NotifyWhileGrabbed; break;
+    default:
+        TRACE( "Ignoring event with mode %d.\n", xiev->mode);
+        return FALSE;
+    }
+
+    switch (xiev->detail)
+    {
+    case XINotifyAncestor: event.xfocus.detail = NotifyAncestor; break;
+    case XINotifyVirtual: event.xfocus.detail = NotifyVirtual; break;
+    case XINotifyInferior: event.xfocus.detail = NotifyInferior; break;
+    case XINotifyNonlinear: event.xfocus.detail = NotifyNonlinear; break;
+    case XINotifyNonlinearVirtual: event.xfocus.detail = NotifyNonlinearVirtual; break;
+    case XINotifyPointer: event.xfocus.detail = NotifyPointer; break;
+    case XINotifyPointerRoot: event.xfocus.detail = NotifyPointerRoot; break;
+    case XINotifyDetailNone: event.xfocus.detail = NotifyDetailNone; break;
+    }
+
+    switch (xiev->evtype)
+    {
+    case XI_FocusIn:
+        event.xfocus.type = FocusIn;
+        return x11drv_handle_focus_in_event( hwnd, &event, xiev->time );
+    case XI_FocusOut:
+        event.xfocus.type = FocusOut;
+        return x11drv_handle_focus_out_event( hwnd, &event, xiev->time );
+    default:
+        TRACE( "Ignoring event with type %d.\n", xiev->evtype);
+        return FALSE;
+    }
+}
+
+
 /***********************************************************************
  *           X11DRV_GenericEvent
  */
@@ -2157,6 +2219,10 @@ BOOL X11DRV_GenericEvent( HWND hwnd, XEvent *xev )
 
     switch (event->evtype)
     {
+    case XI_FocusIn:
+    case XI_FocusOut:
+        ret = X11DRV_XIEnterEvent( event );
+        break;
     case XI_DeviceChanged:
         ret = X11DRV_DeviceChanged( event );
         break;
-- 
2.35.1

