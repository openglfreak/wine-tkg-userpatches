From c3ec84dd82f38df2364e2aa4efd3d6ce85a46616 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Tue, 29 Mar 2022 02:13:14 +0200
Subject: [PATCH 46/44] HACK: win32u: Skip setting the cursor position if the new
 position matches the cached one.

---
 dlls/win32u/input.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/dlls/win32u/input.c b/dlls/win32u/input.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/input.c
+++ b/dlls/win32u/input.c
@@ -183,6 +183,8 @@ UINT WINAPI NtUserSendInput( UINT count, INPUT *inputs, int size )
  */
 BOOL WINAPI NtUserSetCursorPos( INT x, INT y )
 {
+    volatile struct desktop_shared_memory *shared = get_desktop_shared_memory();
+    DWORD last_change;
     POINT pt = { x, y };
     BOOL ret;
     INT prev_x, prev_y, new_x, new_y;
@@ -194,6 +196,17 @@ BOOL WINAPI NtUserSetCursorPos( INT x, INT y )
         pt = map_dpi_point( pt, dpi, get_monitor_dpi( monitor ));
     }
 
+    /* HACK: Doesn't generate any window messages but skips the server call. */
+    SHARED_READ_BEGIN( &shared->seq )
+    {
+        prev_x = shared->cursor.x;
+        prev_y = shared->cursor.y;
+        last_change = shared->cursor.last_change;
+    }
+    SHARED_READ_END( &shared->seq );
+    if (last_change != 0 && x == prev_x && y == prev_y)
+        return;
+
     SERVER_START_REQ( set_cursor )
     {
         req->flags = SET_CURSOR_POS;
-- 
2.36.0

