From 5691f9016a53804ca34551eecca7a66b69bc8ec0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 4 Oct 2021 20:58:19 +0200
Subject: [PATCH 4/9] server: Add support for WM_POINTER* dispatching.

CW-Bug-Id: #18214
---
 server/queue.c | 30 ++++++++++++++++++++++++++----
 1 file changed, 26 insertions(+), 4 deletions(-)

diff --git a/server/queue.c b/server/queue.c
index 11111111111..11111111111 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -743,7 +743,9 @@ static inline int filter_contains_hw_range( unsigned int first, unsigned int las
 static inline int get_hardware_msg_bit( struct message *msg )
 {
     if (msg->msg == WM_INPUT_DEVICE_CHANGE || msg->msg == WM_INPUT) return QS_RAWINPUT;
-    if (msg->msg == WM_MOUSEMOVE || msg->msg == WM_NCMOUSEMOVE) return QS_MOUSEMOVE;
+    if (msg->msg == WM_MOUSEMOVE || msg->msg == WM_NCMOUSEMOVE ||
+        msg->msg == WM_POINTERDOWN || msg->msg == WM_POINTERUP ||
+        msg->msg == WM_POINTERUPDATE) return QS_MOUSEMOVE;
     if (is_keyboard_msg( msg )) return QS_KEY;
     return QS_MOUSEBUTTON;
 }
@@ -1763,7 +1765,9 @@ static user_handle_t find_hardware_message_window( struct desktop *desktop, stru
 
     *thread = NULL;
     *msg_code = msg->msg;
-    if (msg->msg == WM_INPUT || msg->msg == WM_INPUT_DEVICE_CHANGE)
+    if (msg->msg == WM_INPUT || msg->msg == WM_INPUT_DEVICE_CHANGE ||
+        msg->msg == WM_POINTERDOWN || msg->msg == WM_POINTERUP ||
+        msg->msg == WM_POINTERUPDATE)
     {
         if (!(win = msg->win) && input) win = input->shared->focus;
     }
@@ -1850,7 +1854,9 @@ static void queue_hardware_message( struct desktop *desktop, struct message *msg
         if (msg->wparam == VK_SHIFT || msg->wparam == VK_LSHIFT || msg->wparam == VK_RSHIFT)
             msg->lparam &= ~(KF_EXTENDED << 16);
     }
-    else if (msg->msg != WM_INPUT && msg->msg != WM_INPUT_DEVICE_CHANGE)
+    else if (msg->msg != WM_INPUT && msg->msg != WM_INPUT_DEVICE_CHANGE &&
+             msg->msg != WM_POINTERDOWN && msg->msg != WM_POINTERUP &&
+             msg->msg != WM_POINTERUPDATE)
     {
         if (msg->msg == WM_MOUSEMOVE)
         {
@@ -2325,8 +2331,22 @@ static void queue_custom_hardware_message( struct desktop *desktop, user_handle_
         return;
     }
 
+    if (input->hw.msg == WM_POINTERDOWN || input->hw.msg == WM_POINTERUP ||
+        input->hw.msg == WM_POINTERUPDATE)
+        source.device = IMDT_TOUCH;
+
     if (!(msg = alloc_hardware_message( 0, source, get_tick_count(), 0 ))) return;
 
+    if (input->hw.msg == WM_POINTERDOWN || input->hw.msg == WM_POINTERUP ||
+        input->hw.msg == WM_POINTERUPDATE)
+    {
+        msg_data = msg->data;
+        msg_data->info     = 0;
+        msg_data->size     = sizeof(*msg_data);
+        msg_data->flags    = input->hw.lparam;
+        msg_data->rawinput = input->hw.rawinput;
+    }
+
     msg->win       = get_user_full_handle( win );
     msg->msg       = input->hw.msg;
     msg->wparam    = 0;
@@ -2465,7 +2485,9 @@ static int get_hardware_message( struct thread *thread, unsigned int hw_id, user
 
         data->hw_id = msg->unique_id;
         set_reply_data( msg->data, msg->data_size );
-        if ((msg->msg == WM_INPUT || msg->msg == WM_INPUT_DEVICE_CHANGE) && (flags & PM_REMOVE))
+        if ((msg->msg == WM_INPUT || msg->msg == WM_INPUT_DEVICE_CHANGE ||
+             msg->msg == WM_POINTERDOWN || msg->msg == WM_POINTERUP ||
+             msg->msg == WM_POINTERUPDATE) && (flags & PM_REMOVE))
             release_hardware_message( current->queue, data->hw_id );
         return 1;
     }

