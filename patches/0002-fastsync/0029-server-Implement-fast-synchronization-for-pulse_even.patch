From 161b6c5686eb0e15982f9f64048e0d66cecbf464 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Fri, 22 Apr 2022 04:08:33 +0200
Subject: [PATCH 29/29] server: Implement fast synchronization for pulse_event.

---
 server/event.c     |  1 +
 server/fast_sync.c | 12 ++++++++++++
 2 files changed, 13 insertions(+)

diff --git a/server/event.c b/server/event.c
index 11111111111..11111111111 100644
--- a/server/event.c
+++ b/server/event.c
@@ -198,6 +198,7 @@ static void pulse_event( struct event *event )
     event->signaled = 1;
     /* wake up all waiters if manual reset, a single one otherwise */
     wake_up( &event->obj, !event->manual_reset );
+    fast_pulse_event( event->fast_sync );
     event->signaled = 0;
 
     if (do_fsync())
diff --git a/server/fast_sync.c b/server/fast_sync.c
index 11111111111..11111111111 100644
--- a/server/fast_sync.c
+++ b/server/fast_sync.c
@@ -344,6 +344,18 @@ void fast_reset_event( struct fast_sync *fast_sync )
     ioctl( get_unix_fd( fast_sync->device->fd ), WINESYNC_IOC_RESET_EVENT, &args );
 }
 
+void fast_pulse_event( struct fast_sync *fast_sync )
+{
+    struct winesync_event_args args = {0};
+
+    if (!fast_sync) return;
+
+    if (debug_level) fprintf( stderr, "fast_pulse_event %u\n", fast_sync->linux_obj );
+
+    args.event = fast_sync->linux_obj;
+    ioctl( get_unix_fd( fast_sync->device->fd ), WINESYNC_IOC_PULSE_EVENT, &args );
+}
+
 void fast_abandon_mutexes( thread_id_t tid )
 {
     struct linux_device *device;
-- 
2.39.0

