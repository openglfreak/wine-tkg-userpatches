From d1d87b00b1e9367befff8b162f42fb141ce1be0f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Sat, 20 Nov 2021 19:10:59 +0100
Subject: [PATCH 4/8] ntdll: Use invalid char lookup table in lookup_unix_name.

To lookup invalid unix chars, instead of costly wcschr.
---
 dlls/ntdll/unix/file.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/dlls/ntdll/unix/file.c b/dlls/ntdll/unix/file.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/file.c
+++ b/dlls/ntdll/unix/file.c
@@ -179,8 +179,6 @@ typedef struct
 
 #define IS_SEPARATOR(ch)   ((ch) == '\\' || (ch) == '/')
 
-#define INVALID_NT_CHARS   '*','?','<','>','|','"'
-
 #define MAX_DIR_ENTRY_LEN 255  /* max length of a directory entry in chars */
 
 #define MAX_IGNORED_FILES 4
@@ -455,6 +453,12 @@ static inline BOOL is_invalid_nt_char( WCHAR ch )
     return ch <= 0x7f ? is_invalid[ch] : FALSE;
 }
 
+static inline BOOL is_invalid_unix_char( WCHAR ch )
+{
+    if (ch == '/') return TRUE;
+    return is_invalid_nt_char( ch );
+}
+
 /* check if the device can be a mounted volume */
 static inline BOOL is_valid_mounted_device( const struct stat *st )
 {
@@ -4268,7 +4272,6 @@ static NTSTATUS lookup_unix_name( FILE_OBJECT *fileobj, const WCHAR *name, int n
                                   char **buffer, int unix_len, int pos, UINT disposition,
                                   BOOL is_unix )
 {
-    static const WCHAR invalid_charsW[] = { INVALID_NT_CHARS, '/', 0 };
     const WCHAR *fullname = fileobj->FileName.Buffer;
     NTSTATUS status;
     int ret;
@@ -4296,7 +4299,7 @@ static NTSTATUS lookup_unix_name( FILE_OBJECT *fileobj, const WCHAR *name, int n
         {
             if (!*ptr) return STATUS_OBJECT_NAME_INVALID;
             if (is_unix) continue;
-            if (*ptr < 32 || wcschr( invalid_charsW, *ptr )) return STATUS_OBJECT_NAME_INVALID;
+            if (is_invalid_unix_char( *ptr )) return STATUS_OBJECT_NAME_INVALID;
         }
     }
 
-- 
0.0.0

