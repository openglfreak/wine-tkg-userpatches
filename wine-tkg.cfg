#!/hint/bash
:

# shellcheck disable=SC2034
{
#_nomakepkg_prefix_path
#_nomakepkg_midbuild_prompt
#_nomakepkg_dep_resolution_distro

_EXTERNAL_INSTALL=false
_GENERATE_DEBIAN_PACKAGE=false

#### WINE FLAVOUR SETTINGS ####

_plain_version=
_use_staging=true
_staging_version=
_staging_upstreamignore=false
_use_fastsync=false
_use_esync=true
_use_fsync=true
_fsync_futex2=true
_use_vkd3dlib=false
_dxvk_dxgi=true

#### GAME-SPECIFIC PATCHES ####

_warframelauncher_fix=true
_mwo_fix=false
_re4_fix=false
_childwindow_fix=false
_lol920_fix=false
_assettocorsa_hudperf_fix=false
_mk11_fix=true
_ffxivlauncher_fix=false
_kof98_2002_BGM_fix=false

#### OTHER PATCHES ####

_launch_with_dedicated_gpu=false
_plasma_systray_fix=true
_update_winevulkan=true
_use_josh_flat_theme=true

#### PROTON PATCHES ####

_FS_bypass_compositor=true

_proton_fs_hack=false
_proton_mf_hacks=true
#_proton_rawinput
_msvcrt_nativebuiltin=false
_win10_default=true
_protonify=true

### Userpatches ###

_community_patches='
ID3DXEffectCompiler-partial-implementation.mypatch
hide-prefix-update-window.mypatch
kernel32-implement-Windows-NT-style-GMEM_MOVEABLE-LM-staging.mypatch
shell32-Move-file-SHFileOperation-allow-from-wildchar-move.mypatch
'

### Advanced ###

#_nomakepkg_nover

#_EXT_CONFIG_PATH
_LOCAL_PRESET=
_PKGNAME_OVERRIDE=
CUSTOM_MINGW_PATH=
CUSTOM_GCC_PATH=
_LOCAL_OPTIMIZED=true

# x86-64 Feature levels:
_x86_64_base='-mmmx -msse -msse2 -mno-sahf -mfxsr'
_x86_64_v2="${_x86_64_base} -msahf -mcx16 -mpopcnt -msse3 -msse4.1 -msse4.2 -mssse3"
_x86_64_v3="${_x86_64_v2} -mavx -mavx2 -mbmi -mbmi2 -mf16c -mfma -mlzcnt -mmovbe -mxsave"
_x86_64_v4="${_x86_64_v3} -mavx512f -mavx512bw -mavx512cd -mavx512dq -mavx512vl"

export CPPFLAGS="-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0"
_common_cflags="-fdebug-prefix-map=${PWD:-$(pwd)}/src=. ${_x86_64_v3} -mtune=native -O3 -pipe -floop-strip-mine -fno-semantic-interposition -fipa-pta -funroll-loops -fstdarg-opt"
if [ "x${_frogminer_enable_debug:-}" = 'xtrue' ]; then
    _common_cflags="-g3 -fvar-tracking-assignments ${_common_cflags}"
    _GCC_FLAGS="${_common_cflags} -fuse-ld=gold -gdwarf-5 ${CPPFLAGS}"
    _LD_FLAGS="${_GCC_FLAGS} -gsplit-dwarf -Wl,-O2,--sort-common,--as-needed"
    export CROSSDEBUG=split
else
    export CPPFLAGS="${CPPFLAGS} -DNDEBUG -D_NDEBUG"
    _GCC_FLAGS="${_common_cflags} -fuse-ld=gold ${CPPFLAGS}"
    _LD_FLAGS="${_GCC_FLAGS} -Wl,-O2,--sort-common,--as-needed"
fi
_CROSS_FLAGS="${_common_cflags} ${CPPFLAGS}"
_CROSS_LD_FLAGS="${_CROSS_FLAGS} -Wl,-O2,--sort-common,--as-needed"
export SOURCE_DATE_EPOCH=0

_ENABLE_TESTS=false
_pkg_strip=false
_NUKR=false
_generate_patchsets=false
_NOLIB32=false
_NOLIB64=false
_NOMINGW=false
_NOCOMPILE=false
_NOINITIALPROMPT=true
_user_makedeps=
_faudio_ignorecheck=false
_nopatchmsg=true

#_DEFAULT_EXTERNAL_PATH
#_EXTERNAL_NOVER

_custom_wine_source=
_localbuild=
_plain_mirrorsrc=true
_configure_userargs64='--with-x --with-gstreamer --with-xattr --enable-silent-rules'
_configure_userargs32='--with-x --with-gstreamer --with-xattr --enable-silent-rules'
_esync_version=
_fsync_spincounts=true
_staging_userargs='-W winemenubuilder-integration'
_use_legacy_gallium_nine=false

_sims3_fix=false
_staging_pulse_disable=false

_CSMT_toggle=true
_GLSL_toggle=true
_MIME_NOPE=true
_FOAS_NOPE=true
_lowlatency_audio=false
_stg_shared_mem_default=false
_nvidia_hate=false

_clock_monotonic=false
_large_address_aware=true


_user_patches=true
_user_patches_no_confirm=true
_hotfixes_no_confirm=false

### Hidden options ###

_allow_server_rt_prio=true
}

export CCACHE_DIR="${XDG_CACHE_HOME:-${HOME}/.cache}/ccache/wine"
mkdir -p "${CCACHE_DIR}"
export CCACHE_COMPILERCHECK="string:$(md5sum /usr/bin/gcc | cut -d ' ' -f 1),$(md5sum /usr/bin/x86_64-w64-mingw32-gcc | cut -d ' ' -f 1),$(md5sum /usr/bin/i686-w64-mingw32-gcc | cut -d ' ' -f 1)" \
       CCACHE_BASEDIR="${PWD:-$(pwd)}/src"
ccache --set-config=compression=true \
       --set-config=compression_level=1 \
       --set-config=sloppiness=file_macro,time_macros \
       --set-config=hash_dir=false \
       --set-config=inode_cache=true \
       --set-config=temporary_dir="${CCACHE_DIR}/tmp"

if ! [ "x${_frogminer_enable_msgs:-true}" = 'xtrue' ]; then
    # Disable some warnings that error out
    _frogminer_wno_error=(unused-variable unused-but-set-variable unused-const-variable)
    # No debug messages
    _frogminer_no_msgs=(WINE_NO_TRACE_MSGS WINE_NO_DEBUG_MSGS)

    _frogminer_extraflags=("${_frogminer_wno_error[@]/#/-Wno-}" "${_frogminer_no_msgs[@]/#/-D}")
    _GCC_FLAGS="${_GCC_FLAGS} ${_frogminer_extraflags[*]}"
    _LD_FLAGS="${_LD_FLAGS} ${_frogminer_extraflags[*]}"
    _CROSS_FLAGS="${_CROSS_FLAGS} ${_frogminer_extraflags[*]}"
    _CROSS_LDFLAGS="${_CROSS_LDFLAGS} ${_frogminer_extraflags[*]}"
    export CPPFLAGS="${CPPFLAGS} ${_frogminer_extraflags[*]}"
fi
