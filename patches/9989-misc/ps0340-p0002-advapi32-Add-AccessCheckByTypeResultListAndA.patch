From: Mohamad Al-Jaf <mohamadaljaf@gmail.com>
Subject: [PATCH 2/8] advapi32: Add AccessCheckByTypeResultListAndAuditAlarmA stub.
Message-Id: <20220202030554.238348-2-mohamadaljaf@gmail.com>
Date: Tue,  1 Feb 2022 22:05:48 -0500
In-Reply-To: <20220202030554.238348-1-mohamadaljaf@gmail.com>
References: <20220202030554.238348-1-mohamadaljaf@gmail.com>

Needed for IE11.

Signed-off-by: Mohamad Al-Jaf <mohamadaljaf@gmail.com>
---
 dlls/advapi32/advapi32.spec |  2 +-
 dlls/advapi32/security.c    | 16 ++++++++++++++++
 include/winbase.h           |  1 +
 3 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/dlls/advapi32/advapi32.spec b/dlls/advapi32/advapi32.spec
index 11111111111..11111111111 100644
--- a/dlls/advapi32/advapi32.spec
+++ b/dlls/advapi32/advapi32.spec
@@ -11,7 +11,7 @@
 @ stdcall AccessCheckByTypeAndAuditAlarmA(str ptr str str ptr ptr long long long ptr long ptr long ptr ptr ptr)
 # @ stub AccessCheckByTypeAndAuditAlarmW
 # @ stub AccessCheckByTypeResultList
-# @ stub AccessCheckByTypeResultListAndAuditAlarmA
+@ stdcall AccessCheckByTypeResultListAndAuditAlarmA(str ptr str str ptr ptr long long long ptr long ptr long ptr ptr ptr)
 # @ stub AccessCheckByTypeResultListAndAuditAlarmByHandleA
 # @ stub AccessCheckByTypeResultListAndAuditAlarmByHandleW
 # @ stub AccessCheckByTypeResultListAndAuditAlarmW
diff --git a/dlls/advapi32/security.c b/dlls/advapi32/security.c
index 11111111111..11111111111 100644
--- a/dlls/advapi32/security.c
+++ b/dlls/advapi32/security.c
@@ -1445,6 +1445,22 @@ BOOL WINAPI AccessCheckByTypeAndAuditAlarmA( LPCSTR subsystem, LPVOID id, LPCSTR
     return TRUE;
 }
 
+/******************************************************************************
+ * AccessCheckByTypeResultListAndAuditAlarmA [ADVAPI32.@]
+ */
+BOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmA( LPCSTR subsystem, LPVOID id, LPCSTR type_name, 
+                                                       LPCSTR name, PSECURITY_DESCRIPTOR descr, PSID sid, 
+                                                       DWORD access, AUDIT_EVENT_TYPE audit, DWORD flags, 
+                                                       POBJECT_TYPE_LIST types, DWORD list_length, 
+                                                       PGENERIC_MAPPING mapping, BOOL creation, 
+                                                       LPDWORD access_list, LPDWORD status_list, LPBOOL on_close )
+{
+    FIXME( "stub ( %s,%p,%s,%s,%p,%p,%08x,%p,%08x,%p,%08x,%p,%x,%p,%p,%p)\n", debugstr_a(subsystem),
+           id, debugstr_a(type_name), debugstr_a(name), descr, sid, access, audit, flags, types,
+           list_length, mapping, creation, access_list, status_list, on_close );
+    return TRUE;
+}
+
 BOOL WINAPI ObjectCloseAuditAlarmA(LPCSTR SubsystemName, LPVOID HandleId, BOOL GenerateOnClose)
 {
     FIXME("stub (%s,%p,%x)\n", debugstr_a(SubsystemName), HandleId, GenerateOnClose);
diff --git a/include/winbase.h b/include/winbase.h
index 11111111111..11111111111 100644
--- a/include/winbase.h
+++ b/include/winbase.h
@@ -1802,6 +1802,7 @@ WINADVAPI  BOOL        WINAPI AccessCheckAndAuditAlarmW(LPCWSTR,LPVOID,LPWSTR,LP
 #define                       AccessCheckAndAuditAlarm WINELIB_NAME_AW(AccessCheckAndAuditAlarm)
 WINADVAPI  BOOL        WINAPI AccessCheckByType(PSECURITY_DESCRIPTOR,PSID,HANDLE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,PPRIVILEGE_SET,LPDWORD,LPDWORD,LPBOOL);
 WINADVAPI  BOOL        WINAPI AccessCheckByTypeAndAuditAlarmA(LPCSTR,LPVOID,LPCSTR,LPCSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPBOOL,LPBOOL);
+WINADVAPI  BOOL        WINAPI AccessCheckByTypeResultListAndAuditAlarmA(LPCSTR,LPVOID,LPCSTR,LPCSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
 WINBASEAPI VOID        WINAPI AcquireSRWLockExclusive(PSRWLOCK);
 WINBASEAPI VOID        WINAPI AcquireSRWLockShared(PSRWLOCK);
 WINADVAPI  BOOL        WINAPI AdjustTokenPrivileges(HANDLE,BOOL,PTOKEN_PRIVILEGES,DWORD,PTOKEN_PRIVILEGES,PDWORD);

-- 
2.35.1

