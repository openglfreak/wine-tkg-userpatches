From: Mohamad Al-Jaf <mohamadaljaf@gmail.com>
Subject: [PATCH 4/8] kernelbase: Add AccessCheckByTypeAndAuditAlarmW stub.
Message-Id: <20220202030554.238348-4-mohamadaljaf@gmail.com>
Date: Tue,  1 Feb 2022 22:05:50 -0500
In-Reply-To: <20220202030554.238348-1-mohamadaljaf@gmail.com>
References: <20220202030554.238348-1-mohamadaljaf@gmail.com>

Needed for IE11.

Signed-off-by: Mohamad Al-Jaf <mohamadaljaf@gmail.com>
---
 dlls/advapi32/advapi32.spec     |  2 +-
 dlls/kernelbase/kernelbase.spec |  2 +-
 dlls/kernelbase/security.c      | 16 ++++++++++++++++
 include/winbase.h               |  2 ++
 4 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/dlls/advapi32/advapi32.spec b/dlls/advapi32/advapi32.spec
index 11111111111..11111111111 100644
--- a/dlls/advapi32/advapi32.spec
+++ b/dlls/advapi32/advapi32.spec
@@ -9,7 +9,7 @@
 @ stdcall -import AccessCheckAndAuditAlarmW(wstr ptr wstr wstr ptr long ptr long ptr ptr ptr)
 @ stdcall -import AccessCheckByType(ptr ptr long long ptr long ptr ptr ptr ptr ptr)
 @ stdcall AccessCheckByTypeAndAuditAlarmA(str ptr str str ptr ptr long long long ptr long ptr long ptr ptr ptr)
-# @ stub AccessCheckByTypeAndAuditAlarmW
+@ stdcall -import AccessCheckByTypeAndAuditAlarmW(wstr ptr wstr wstr ptr ptr long long long ptr long ptr long ptr ptr ptr)
 # @ stub AccessCheckByTypeResultList
 @ stdcall AccessCheckByTypeResultListAndAuditAlarmA(str ptr str str ptr ptr long long long ptr long ptr long ptr ptr ptr)
 @ stdcall AccessCheckByTypeResultListAndAuditAlarmByHandleA(str ptr long str str ptr ptr long long long ptr long ptr long ptr ptr ptr)
diff --git a/dlls/kernelbase/kernelbase.spec b/dlls/kernelbase/kernelbase.spec
index 11111111111..11111111111 100644
--- a/dlls/kernelbase/kernelbase.spec
+++ b/dlls/kernelbase/kernelbase.spec
@@ -1,7 +1,7 @@
 @ stdcall AccessCheck(ptr long long ptr ptr ptr ptr ptr)
 @ stdcall AccessCheckAndAuditAlarmW(wstr ptr wstr wstr ptr long ptr long ptr ptr ptr)
 @ stdcall AccessCheckByType(ptr ptr long long ptr long ptr ptr ptr ptr ptr)
-@ stub AccessCheckByTypeAndAuditAlarmW
+@ stdcall AccessCheckByTypeAndAuditAlarmW(wstr ptr wstr wstr ptr ptr long long long ptr long ptr long ptr ptr ptr)
 @ stub AccessCheckByTypeResultList
 @ stub AccessCheckByTypeResultListAndAuditAlarmByHandleW
 @ stub AccessCheckByTypeResultListAndAuditAlarmW
diff --git a/dlls/kernelbase/security.c b/dlls/kernelbase/security.c
index 11111111111..11111111111 100644
--- a/dlls/kernelbase/security.c
+++ b/dlls/kernelbase/security.c
@@ -1330,6 +1330,22 @@ BOOL WINAPI AccessCheckByType( PSECURITY_DESCRIPTOR descr, PSID sid, HANDLE toke
     return !*status;
 }
 
+/******************************************************************************
+ * AccessCheckByTypeAndAuditAlarmW    (kernelbase.@)
+ */
+BOOL WINAPI AccessCheckByTypeAndAuditAlarmW( LPCWSTR subsystem, LPVOID id, LPCWSTR type_name,
+                                             LPCWSTR name, PSECURITY_DESCRIPTOR descr, PSID sid, 
+                                             DWORD access, AUDIT_EVENT_TYPE audit, DWORD flags,
+                                             POBJECT_TYPE_LIST types, DWORD length, 
+                                             PGENERIC_MAPPING mapping, BOOL creation, LPDWORD granted, 
+                                             LPBOOL status, LPBOOL on_close )
+{
+    FIXME( "stub (%s,%p,%s,%s,%p,%p,%08x,%p,%08x,%p,%08x,%p,%x,%p,%p,%p)\n", debugstr_w(subsystem),
+           id, debugstr_w(type_name), debugstr_w(name), descr, sid, access, audit,
+           flags, types, length, mapping, creation, granted, status, on_close );
+    return TRUE;
+}
+
 /******************************************************************************
  * AddAccessAllowedAce    (kernelbase.@)
  */
diff --git a/include/winbase.h b/include/winbase.h
index 11111111111..11111111111 100644
--- a/include/winbase.h
+++ b/include/winbase.h
@@ -1802,6 +1802,8 @@ WINADVAPI  BOOL        WINAPI AccessCheckAndAuditAlarmW(LPCWSTR,LPVOID,LPWSTR,LP
 #define                       AccessCheckAndAuditAlarm WINELIB_NAME_AW(AccessCheckAndAuditAlarm)
 WINADVAPI  BOOL        WINAPI AccessCheckByType(PSECURITY_DESCRIPTOR,PSID,HANDLE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,PPRIVILEGE_SET,LPDWORD,LPDWORD,LPBOOL);
 WINADVAPI  BOOL        WINAPI AccessCheckByTypeAndAuditAlarmA(LPCSTR,LPVOID,LPCSTR,LPCSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPBOOL,LPBOOL);
+WINADVAPI  BOOL        WINAPI AccessCheckByTypeAndAuditAlarmW(LPCWSTR,LPVOID,LPCWSTR,LPCWSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPBOOL,LPBOOL);
+#define                       AccessCheckByTypeAndAuditAlarm WINELIB_NAME_AW(AccessCheckByTypeAndAuditAlarm)
 WINADVAPI  BOOL        WINAPI AccessCheckByTypeResultListAndAuditAlarmA(LPCSTR,LPVOID,LPCSTR,LPCSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
 WINADVAPI  BOOL        WINAPI AccessCheckByTypeResultListAndAuditAlarmByHandleA(LPCSTR,LPVOID,HANDLE,LPCSTR,LPCSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
 WINBASEAPI VOID        WINAPI AcquireSRWLockExclusive(PSRWLOCK);

-- 
2.36.0

