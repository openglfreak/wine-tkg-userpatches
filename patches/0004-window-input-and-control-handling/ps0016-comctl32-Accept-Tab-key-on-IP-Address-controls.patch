From: katahiromz <katayama.hirofumi.mz@gmail.com>
Subject: [PATCH] comctl32: Accept Tab key on IP Address controls.
Message-Id: <CAEstRDtL_Kg2PB=UBn0q3E_ZPOhYc4PvM8+1p+dOWoC2YuQdsw@mail.gmail.com>
Date: Thu, 1 Oct 2020 19:55:08 +0900

Tab key and Shift+Tab key could not work on IP Address controls
(SysIPAddress32).

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=49924
Signed-off-by: Hirofumi Katayama <katayama.hirofumi.mz@gmail.com>
---
https://jira.reactos.org/browse/CORE-3479
https://github.com/reactos/reactos/commit/3f30b1eda7e51dae1df0b411e75b99a03e9fbca2
https://github.com/reactos/reactos/commit/0a8fb87d845482db5909fe9034e0d5ebac8c5b3c

From 9026cf2dae10a39a7f9db8443f80195864cc5785 Mon Sep 17 00:00:00 2001
From: Hirofumi Katayama <katayama.hirofumi.mz@gmail.com>
Date: Thu, 1 Oct 2020 19:44:29 +0900
#Subject: [PATCH] comctl32: Accept Tab key on IP Address controls.

Tab key and Shift+Tab key could not work on IP Address controls (SysIPAddress32).

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=49924
Signed-off-by: Hirofumi Katayama <katayama.hirofumi.mz@gmail.com>
---
https://jira.reactos.org/browse/CORE-3479
https://github.com/reactos/reactos/commit/3f30b1eda7e51dae1df0b411e75b99a03e9fbca2
https://github.com/reactos/reactos/commit/0a8fb87d845482db5909fe9034e0d5ebac8c5b3c
---
 dlls/comctl32/ipaddress.c | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/dlls/comctl32/ipaddress.c b/dlls/comctl32/ipaddress.c
index 82d47d4e576..1d5b8d49dbc 100644
--- a/dlls/comctl32/ipaddress.c
+++ b/dlls/comctl32/ipaddress.c
@@ -6,6 +6,7 @@
  * Copyright 1999 James Abbatiello<abbeyj@wpi.edu>
  * Copyright 1998, 1999 Eric Kohl
  * Copyright 1998 Alex Priem <alexp@sci.kun.nl>
+ * Copyright 2020 Katayama Hirofumi MZ <katayama.hirofumi.mz@gmail.com>
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -560,6 +561,21 @@ IPADDRESS_SubclassProc (HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
 			return 0;
 		    }
 		    break;
+                case VK_TAB:
+                    if (GetKeyState(VK_SHIFT) < 0) {
+                        /* Shift+Tab */
+                        if (index == 0)
+                            SetFocus(GetNextDlgTabItem(GetParent(infoPtr->Self), infoPtr->Self, TRUE));
+                        else
+                            IPADDRESS_GotoNextField(infoPtr, index - 2, POS_SELALL);
+                    } else {
+                        /* Tab */
+                        if (index == 3)
+                            SetFocus(GetNextDlgTabItem(GetParent(infoPtr->Self), infoPtr->Self, FALSE));
+                        else
+                            IPADDRESS_GotoNextField(infoPtr, index, POS_SELALL);
+                    }
+                    break;
 	    }
 	    break;
 	case WM_KILLFOCUS:
@@ -570,6 +586,12 @@ IPADDRESS_SubclassProc (HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
 	    if (IPADDRESS_GetPartIndex(infoPtr, (HWND)wParam) < 0)
 		IPADDRESS_Notify(infoPtr, EN_SETFOCUS);
 	    break;
+        case WM_GETDLGCODE:
+            {
+                LRESULT result = CallWindowProcW(part->OrigProc, hwnd, uMsg, wParam, lParam);
+                result |= DLGC_WANTALLKEYS | DLGC_WANTCHARS | DLGC_WANTTAB;
+                return result;
+            }
     }
     return CallWindowProcW (part->OrigProc, hwnd, uMsg, wParam, lParam);
 }
