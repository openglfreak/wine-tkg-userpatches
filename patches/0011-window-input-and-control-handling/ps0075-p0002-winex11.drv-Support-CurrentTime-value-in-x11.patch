From a796566a43ddfdfdf763a35d9c45eaf1d1520c7b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Wed, 8 Dec 2021 19:12:52 +0100
Subject: [PATCH 2/4] winex11.drv: Support CurrentTime value in
 x11drv_time_to_ticks.

CurrentTime is 0 so we cannot use 0 anymore to retrieve the current
offset; move it outside of the function instead.
---
 dlls/winex11.drv/event.c  | 53 ++++++++++++++++-----------------------
 dlls/winex11.drv/x11drv.h |  3 ++-
 2 files changed, 23 insertions(+), 33 deletions(-)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index 24b0a3da2f2..d0e6c5ea8d3 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -502,39 +502,31 @@ DWORD CDECL X11DRV_MsgWaitForMultipleObjectsEx( DWORD count, const HANDLE *handl
     return ret;
 }
 
+static DWORD time_bias;
+static BOOL time_init;
+
 /***********************************************************************
  *           x11drv_time_to_ticks
  *
- * Make our timer and the X timer line up as best we can
- *  Pass 0 to retrieve the current adjustment value (times -1)
+ * Make our timer and the X timer line up as best we can.
  */
 DWORD x11drv_time_to_ticks( Time time )
 {
-  static DWORD adjust = 0;
-  DWORD now = GetTickCount();
-  DWORD ret;
-
-  if (! adjust && time != 0)
-  {
-    ret = now;
-    adjust = time - now;
-  }
-  else
-  {
-      /* If we got an event in the 'future', then our clock is clearly wrong. 
-         If we got it more than 10000 ms in the future, then it's most likely
-         that the clock has wrapped.  */
-
-      ret = time - adjust;
-      if (ret > now && ((ret - now) < 10000) && time != 0)
-      {
-        adjust += ret - now;
-        ret    -= ret - now;
-      }
-  }
-
-  return ret;
+    DWORD ticks = GetTickCount();
+    if (time == CurrentTime) return ticks;
+    if (!time_init) time_bias = time - ticks;
+    time_init = TRUE;
+    /* If we got an event in the 'future', then our clock is clearly wrong,
+     * unless we got it more than 10000 ms in the future, then it's most likely
+     * that the clock has wrapped. */
+    if (time > ticks + time_bias && time < ticks + time_bias + 10000) time_bias = time - ticks;
+    return time - time_bias;
+}
 
+Time x11drv_ticks_to_time( DWORD ticks )
+{
+    if (!time_init) return CurrentTime;
+    return ticks + time_bias;
 }
 
 /*******************************************************************
@@ -569,12 +561,9 @@ static void set_input_focus( struct x11drv_win_data *data )
 
     if (!data->whole_window) return;
 
-    if (x11drv_time_to_ticks(0))
-        /* ICCCM says don't use CurrentTime, so try to use last message time if possible */
-        /* FIXME: this is not entirely correct */
-        timestamp = GetMessageTime() - x11drv_time_to_ticks(0);
-    else
-        timestamp = CurrentTime;
+    /* ICCCM says don't use CurrentTime, so try to use last message time if possible */
+    /* FIXME: this is not entirely correct */
+    timestamp = x11drv_ticks_to_time( GetMessageTime() );
 
     /* Set X focus and install colormap */
     changes.stack_mode = Above;
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 0121656d7c9..9a6987015e6 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -576,7 +576,8 @@ extern int xinput2_opcode DECLSPEC_HIDDEN;
 extern Bool (*pXGetEventData)( Display *display, XEvent /*XGenericEventCookie*/ *event ) DECLSPEC_HIDDEN;
 extern void (*pXFreeEventData)( Display *display, XEvent /*XGenericEventCookie*/ *event ) DECLSPEC_HIDDEN;
 
-extern DWORD x11drv_time_to_ticks(Time time) DECLSPEC_HIDDEN;
+extern DWORD x11drv_time_to_ticks( Time time ) DECLSPEC_HIDDEN;
+extern Time x11drv_ticks_to_time( DWORD ticks ) DECLSPEC_HIDDEN;
 
 /* X11 driver private messages, must be in the range 0x80001000..0x80001fff */
 enum x11drv_window_messages
-- 
2.34.1

