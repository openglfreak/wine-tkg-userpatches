From 75a016f456f356fd8535736c2a591a97269c9e73 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Tue, 21 Jan 2020 22:41:39 +0100
Subject: [PATCH 30/37] winex11.drv: Check for EWMH supported atoms during
 init.

---
 dlls/winex11.drv/window.c      | 31 +------------------------------
 dlls/winex11.drv/x11drv.h      |  6 ++++++
 dlls/winex11.drv/x11drv_main.c | 31 +++++++++++++++++++++++++++++++
 3 files changed, 38 insertions(+), 30 deletions(-)

diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index 4005e3df387..37bfa873972 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -2802,35 +2802,6 @@ LRESULT CDECL X11DRV_WindowMessage( HWND hwnd, UINT msg, WPARAM wp, LPARAM lp )
 }
 
 
-/***********************************************************************
- *              is_netwm_supported
- */
-static BOOL is_netwm_supported( Display *display, Atom atom )
-{
-    static Atom *net_supported;
-    static int net_supported_count = -1;
-    int i;
-
-    if (net_supported_count == -1)
-    {
-        Atom type;
-        int format;
-        unsigned long count, remaining;
-
-        if (!XGetWindowProperty( display, DefaultRootWindow(display), x11drv_atom(_NET_SUPPORTED), 0,
-                                 ~0UL, False, XA_ATOM, &type, &format, &count,
-                                 &remaining, (unsigned char **)&net_supported ))
-            net_supported_count = get_property_size( format, count ) / sizeof(Atom);
-        else
-            net_supported_count = 0;
-    }
-
-    for (i = 0; i < net_supported_count; i++)
-        if (net_supported[i] == atom) return TRUE;
-    return FALSE;
-}
-
-
 /***********************************************************************
  *              start_screensaver
  */
@@ -2909,7 +2880,7 @@ LRESULT CDECL X11DRV_SysCommand( HWND hwnd, WPARAM wparam, LPARAM lparam )
 
     if (IsZoomed(hwnd)) goto failed;
 
-    if (!is_netwm_supported( data->display, x11drv_atom(_NET_WM_MOVERESIZE) ))
+    if (!x11drv_thread_data()->ewmh.has__net_wm_moveresize)
     {
         TRACE( "_NET_WM_MOVERESIZE not supported\n" );
         goto failed;
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 9cbedf59ec9..b922257c212 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -337,6 +337,11 @@ enum xi2_state
     xi_enabled
 };
 
+struct x11drv_ewmh_data
+{
+    int has__net_wm_moveresize : 1;
+};
+
 struct x11drv_thread_data
 {
     Display *display;
@@ -359,6 +364,7 @@ struct x11drv_thread_data
     struct x11drv_valuator_data y_rel_valuator;
     int      xi2_core_pointer;     /* XInput2 core pointer id */
     int      xi2_current_slave;    /* Current slave driving the Core pointer */
+    struct x11drv_ewmh_data ewmh;  /* EWMH supported features */
 };
 
 extern struct x11drv_thread_data *x11drv_init_thread_data(void) DECLSPEC_HIDDEN;
diff --git a/dlls/winex11.drv/x11drv_main.c b/dlls/winex11.drv/x11drv_main.c
index 43c30ab369c..e6948b70f50 100644
--- a/dlls/winex11.drv/x11drv_main.c
+++ b/dlls/winex11.drv/x11drv_main.c
@@ -668,6 +668,35 @@ static void set_queue_display_fd( Display *display )
 }
 
 
+/***********************************************************************
+ *              x11drv_ewmh_init
+ */
+static void x11drv_ewmh_init( Display *display, struct x11drv_ewmh_data *data )
+{
+    Atom type, *supported;
+    unsigned long count, remaining;
+    int format, i, supported_count;
+
+    if (!XGetWindowProperty( display, DefaultRootWindow(display), x11drv_atom(_NET_SUPPORTED), 0,
+                             ~0UL, False, XA_ATOM, &type, &format, &count, &remaining,
+                             (unsigned char **)&supported ))
+        supported_count = get_property_size( format, count ) / sizeof(Atom);
+    else
+        supported_count = 0;
+
+    TRACE( "EWMH _NET_SUPPORTED:\n" );
+    for (i = 0; i < supported_count; ++i)
+    {
+        if (supported[i] == x11drv_atom(_NET_WM_MOVERESIZE))
+            data->has__net_wm_moveresize = 1;
+
+        TRACE( "  %s\n", XGetAtomName( display, supported[i] ) );
+    }
+
+    if (supported) XFree( supported );
+}
+
+
 /***********************************************************************
  *           X11DRV thread initialisation routine
  */
@@ -700,6 +729,8 @@ struct x11drv_thread_data *x11drv_init_thread_data(void)
     set_queue_display_fd( data->display );
     TlsSetValue( thread_data_tls_index, data );
 
+    x11drv_ewmh_init( data->display, &data->ewmh );
+
     if (use_xim) X11DRV_SetupXIM();
 
     x11drv_xinput_init();
-- 
2.31.0

