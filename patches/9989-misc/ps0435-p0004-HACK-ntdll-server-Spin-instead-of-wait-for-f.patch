From d658f3e6d8d379d428f60d3f7156f2a09e76db18 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Mon, 8 Aug 2022 20:19:28 +0200
Subject: [PATCH 4/4] HACK: ntdll,server: Spin instead of wait for futex

---
 dlls/ntdll/unix/server.c | 3 ++-
 server/thread.c          | 2 +-
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/dlls/ntdll/unix/server.c b/dlls/ntdll/unix/server.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/server.c
+++ b/dlls/ntdll/unix/server.c
@@ -250,7 +250,8 @@ static inline unsigned int wait_reply_shm( struct __server_request_info *req )
     {
         if (val == -1)
             abort_thread(0);
-        syscall( __NR_futex, &request_shm->futex, FUTEX_WAIT, val, NULL, NULL, 0 );
+        //syscall( __NR_futex, &request_shm->futex, FUTEX_WAIT, val, NULL, NULL, 0 );
+        YieldProcessor();
     }
 
     memcpy( &req->u.reply, (void*)&request_shm->u.reply, sizeof(req->u.reply) );
diff --git a/server/thread.c b/server/thread.c
index 11111111111..11111111111 100644
--- a/server/thread.c
+++ b/server/thread.c
@@ -515,7 +515,7 @@ static void *request_shm_thread(void *param)
         if (val != 1 && val != -1)
             fatal_protocol_error( thread, "unknown futex state %d\n", val );
         pthread_mutex_unlock( &global_lock );
-        syscall( __NR_futex, &request_shm->futex, FUTEX_WAKE, 1, NULL, NULL, 0 );
+        //syscall( __NR_futex, &request_shm->futex, FUTEX_WAKE, 1, NULL, NULL, 0 );
         if (poll_generation != generation)
             force_exit_poll();
     }
-- 
2.39.0

