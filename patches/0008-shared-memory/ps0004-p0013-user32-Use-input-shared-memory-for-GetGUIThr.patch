From 8f5799748a4a6f56a6d395d7797f7c0512179693 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 18 Jan 2021 19:05:34 +0100
Subject: [PATCH 13/18] user32: Use input shared memory for GetGUIThreadInfo.

When the current thread is requested.
---
 dlls/user32/message.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/dlls/user32/message.c b/dlls/user32/message.c
index b194b0cf03f..fa7f799ca72 100644
--- a/dlls/user32/message.c
+++ b/dlls/user32/message.c
@@ -4560,6 +4560,7 @@ BOOL WINAPI IsGUIThread( BOOL convert )
  */
 BOOL WINAPI GetGUIThreadInfo( DWORD id, GUITHREADINFO *info )
 {
+    volatile struct input_shared_memory *shared;
     BOOL ret;
 
     if (info->cbSize != sizeof(*info))
@@ -4568,6 +4569,33 @@ BOOL WINAPI GetGUIThreadInfo( DWORD id, GUITHREADINFO *info )
         return FALSE;
     }
 
+    if (id == GetCurrentThreadId()) shared = get_input_shared_memory();
+    else if (id == 0) shared = get_foreground_shared_memory();
+    else shared = NULL;
+
+    if (shared)
+    {
+        SHARED_READ_BEGIN( &shared->seq )
+        {
+            info->flags          = 0;
+            info->hwndActive     = wine_server_ptr_handle( shared->active );
+            info->hwndFocus      = wine_server_ptr_handle( shared->focus );
+            info->hwndCapture    = wine_server_ptr_handle( shared->capture );
+            info->hwndMenuOwner  = wine_server_ptr_handle( shared->menu_owner );
+            info->hwndMoveSize   = wine_server_ptr_handle( shared->move_size );
+            info->hwndCaret      = wine_server_ptr_handle( shared->caret );
+            info->rcCaret.left   = shared->caret_rect.left;
+            info->rcCaret.top    = shared->caret_rect.top;
+            info->rcCaret.right  = shared->caret_rect.right;
+            info->rcCaret.bottom = shared->caret_rect.bottom;
+            if (shared->menu_owner) info->flags |= GUI_INMENUMODE;
+            if (shared->move_size) info->flags |= GUI_INMOVESIZE;
+            if (shared->caret) info->flags |= GUI_CARETBLINKING;
+        }
+        SHARED_READ_END( &shared->seq );
+        return TRUE;
+    }
+
     SERVER_START_REQ( get_thread_input )
     {
         req->tid = id;

