From: "Haidong Yu" <yhd986@163.com>
#Subject: [PATCH v2 1/2] user32/tests: Add test for ShowWindow with SW_SHOWNOACTIVATE option.
Message-Id: <50277b9f.1d7f.172f9563067.Coremail.yhd986@163.com>
Date: Sun, 28 Jun 2020 13:11:14 +0800 (CST)

From 8a740aca86b93368f321bfd6371848de6b1cc25d Mon Sep 17 00:00:00 2001
From: Haidong Yu <yuhaidong@uniontech.com>
Date: Wed, 24 Jun 2020 18:28:57 +0800
Subject: [PATCH v2 1/2] user32/tests: Add test for ShowWindow with
 SW_SHOWNOACTIVATE option.

Signed-off-by: Haidong Yu <yuhaidong@uniontech.com>
---
 dlls/user32/tests/win.c | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

diff --git a/dlls/user32/tests/win.c b/dlls/user32/tests/win.c
index 5cc7a2cca91..5e52ff06385 100644
--- a/dlls/user32/tests/win.c
+++ b/dlls/user32/tests/win.c
@@ -7046,7 +7046,7 @@ static void test_ShowWindow_owned(HWND hwndMain)
     MONITORINFO mon_info = {sizeof(mon_info)};
     RECT rect, orig, expect, nc;
     BOOL ret;
-    HWND hwnd, hwnd2;
+    HWND hwnd, hwnd2, hwnd3;
     LONG style;
 
     GetMonitorInfoW(MonitorFromWindow(hwndMain, MONITOR_DEFAULTTOPRIMARY), &mon_info);
@@ -7169,6 +7169,24 @@ static void test_ShowWindow_owned(HWND hwndMain)
 
     DestroyWindow(hwnd2);
     DestroyWindow(hwnd);
+
+    hwnd3 = CreateWindowExA(WS_EX_NOACTIVATE, "MainWindowClass", "owned3",
+                            WS_POPUP | WS_VISIBLE, orig.left, orig.top,
+                            orig.right - orig.left, orig.bottom - orig.top,
+                            hwndMain, 0, 0, NULL);
+    ok(!!hwnd3, "failed to create window, error %u\n", GetLastError());
+
+    ShowWindow(hwndMain, SW_SHOW);
+    flush_events(TRUE);
+    SendMessageA(hwndMain, WM_SYSCOMMAND, SC_MINIMIZE, NULL);
+    ShowWindow(hwndMain, SW_SHOWNOACTIVATE);
+    flush_events(TRUE);
+
+    todo_wine
+    ok(GetWindowLongA(hwnd3, GWL_STYLE) & WS_VISIBLE, "The window should be visible\n");
+
+    DestroyWindow(hwnd3);
+    ShowWindow(hwndMain, SW_RESTORE);
 }
 
 static void test_ShowWindow_child(HWND hwndMain)
