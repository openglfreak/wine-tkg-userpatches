From 456cf4ed4a20a049a3ab6b4c44de7747aaf0bd89 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 6 Jun 2022 19:37:25 +0200
Subject: [PATCH 08/30] winegstreamer: Handle the GST_QUERY_ALLOCATION query in
 wg_parser.

---
 dlls/winegstreamer/unix_private.h | 11 +++++++++
 dlls/winegstreamer/wg_parser.c    | 39 ++++++++++++++++++++++++++++++-
 dlls/winegstreamer/wg_transform.c | 11 ---------
 3 files changed, 49 insertions(+), 12 deletions(-)

diff --git a/dlls/winegstreamer/unix_private.h b/dlls/winegstreamer/unix_private.h
index 11111111111..11111111111 100644
--- a/dlls/winegstreamer/unix_private.h
+++ b/dlls/winegstreamer/unix_private.h
@@ -46,4 +46,15 @@ extern void wg_allocator_destroy(GstAllocator *allocator) DECLSPEC_HIDDEN;
 extern void wg_allocator_release_sample(GstAllocator *allocator, struct wg_sample *sample,
         bool discard_data) DECLSPEC_HIDDEN;
 
+static inline bool is_caps_video(GstCaps *caps)
+{
+    const gchar *media_type;
+
+    if (!caps || !gst_caps_get_size(caps))
+        return false;
+
+    media_type = gst_structure_get_name(gst_caps_get_structure(caps, 0));
+    return g_str_has_prefix(media_type, "video/");
+}
+
 #endif /* __WINE_WINEGSTREAMER_UNIX_PRIVATE_H */
diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index 11111111111..11111111111 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -663,9 +663,46 @@ static gboolean sink_query_cb(GstPad *pad, GstObject *parent, GstQuery *query)
             return TRUE;
         }
 
+        case GST_QUERY_ALLOCATION:
+        {
+            GstStructure *config;
+            gboolean needs_pool;
+            GstBufferPool *pool;
+            GstVideoInfo info;
+            GstCaps *caps;
+
+            gst_query_parse_allocation(query, &caps, &needs_pool);
+            if (!is_caps_video(caps) || !needs_pool)
+                break;
+
+            if (!gst_video_info_from_caps(&info, caps)
+                    || !(pool = gst_video_buffer_pool_new()))
+                break;
+
+            if (!(config = gst_buffer_pool_get_config(pool)))
+                GST_ERROR("Failed to get pool %p config.", pool);
+            else
+            {
+                gst_buffer_pool_config_set_params(config, caps,
+                        info.size, 0, 0);
+                if (!gst_buffer_pool_set_config(pool, config))
+                    GST_ERROR("Failed to set pool %p config.", pool);
+            }
+
+            gst_query_add_allocation_pool(query, pool, info.size, 0, 0);
+
+            GST_INFO("Proposing pool %p, buffer size %#zx, for query %p.",
+                    pool, info.size, query);
+
+            g_object_unref(pool);
+            return true;
+        }
+
         default:
-            return gst_pad_query_default (pad, parent, query);
+            break;
     }
+
+    return gst_pad_query_default(pad, parent, query);
 }
 
 GstElement *create_element(const char *name, const char *plugin_set)
diff --git a/dlls/winegstreamer/wg_transform.c b/dlls/winegstreamer/wg_transform.c
index 11111111111..11111111111 100644
--- a/dlls/winegstreamer/wg_transform.c
+++ b/dlls/winegstreamer/wg_transform.c
@@ -64,17 +64,6 @@ struct wg_transform
     GstCaps *output_caps;
 };
 
-static bool is_caps_video(GstCaps *caps)
-{
-    const gchar *media_type;
-
-    if (!caps || !gst_caps_get_size(caps))
-        return false;
-
-    media_type = gst_structure_get_name(gst_caps_get_structure(caps, 0));
-    return g_str_has_prefix(media_type, "video/");
-}
-
 static void align_video_info_planes(gsize plane_align, GstVideoInfo *info, GstVideoAlignment *align)
 {
     gst_video_alignment_reset(align);
-- 
2.37.1

