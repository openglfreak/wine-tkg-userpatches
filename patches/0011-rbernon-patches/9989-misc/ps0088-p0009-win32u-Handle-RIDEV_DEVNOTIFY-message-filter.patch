From 87392a561b32f3686eba369a2e494e1c54c24178 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 23 Dec 2021 12:30:00 +0100
Subject: [PATCH 9/9] win32u: Handle RIDEV_DEVNOTIFY message filter on the
 client side.

---
 dlls/win32u/message.c        |  3 ++-
 dlls/win32u/rawinput.c       | 14 +++++++++++++-
 dlls/win32u/win32u_private.h |  2 +-
 server/queue.c               |  2 --
 4 files changed, 16 insertions(+), 5 deletions(-)

diff --git a/dlls/win32u/message.c b/dlls/win32u/message.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/message.c
+++ b/dlls/win32u/message.c
@@ -2672,6 +2672,7 @@ NTSTATUS send_hardware_message( HWND hwnd, const INPUT *input, const RAWINPUT *r
     int prev_x, prev_y, new_x, new_y;
     USAGE hid_usage_page, hid_usage;
     NTSTATUS ret;
+    DWORD dummy;
     BOOL wait, affects_key_state = FALSE;
 
     info.type     = MSG_HARDWARE;
@@ -2689,7 +2690,7 @@ NTSTATUS send_hardware_message( HWND hwnd, const INPUT *input, const RAWINPUT *r
             hid_usage = ((USAGE *)rawinput->data.hid.bRawData)[1];
         }
         if (input->hi.uMsg == WM_INPUT &&
-            !rawinput_device_get_usages( rawinput->header.hDevice, &hid_usage_page, &hid_usage ))
+            !rawinput_device_get_usages( rawinput->header.hDevice, &hid_usage_page, &hid_usage, &dummy ))
         {
             WARN( "unable to get HID usages for device %p\n", rawinput->header.hDevice );
             return STATUS_INVALID_HANDLE;
diff --git a/dlls/win32u/rawinput.c b/dlls/win32u/rawinput.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/rawinput.c
+++ b/dlls/win32u/rawinput.c
@@ -454,7 +454,7 @@ static struct device *find_device_from_handle( HANDLE handle )
     return NULL;
 }
 
-BOOL rawinput_device_get_usages( HANDLE handle, USAGE *usage_page, USAGE *usage )
+BOOL rawinput_device_get_usages( HANDLE handle, USAGE *usage_page, USAGE *usage, DWORD *flags )
 {
     struct device *device;
 
@@ -464,8 +464,20 @@ BOOL rawinput_device_get_usages( HANDLE handle, USAGE *usage_page, USAGE *usage
         *usage_page = *usage = 0;
     else
     {
+        unsigned int i;
+
         *usage_page = device->info.hid.usUsagePage;
         *usage = device->info.hid.usUsage;
+
+        for (i = 0; i < registered_device_count; i++)
+        {
+            if (registered_devices[i].usUsagePage == *usage_page &&
+                registered_devices[i].usUsage == *usage)
+            {
+                *flags = registered_devices[i].dwFlags;
+                break;
+            }
+        }
     }
 
     pthread_mutex_unlock( &rawinput_mutex );
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 11111111111..11111111111 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -318,7 +318,7 @@ extern LRESULT send_message_timeout( HWND hwnd, UINT msg, WPARAM wparam, LPARAM
 
 /* rawinput.c */
 extern BOOL process_rawinput_message( MSG *msg, UINT hw_id, const struct hardware_msg_data *msg_data ) DECLSPEC_HIDDEN;
-extern BOOL rawinput_device_get_usages( HANDLE handle, USHORT *usage_page, USHORT *usage ) DECLSPEC_HIDDEN;
+extern BOOL rawinput_device_get_usages( HANDLE handle, USHORT *usage_page, USHORT *usage, DWORD *flags ) DECLSPEC_HIDDEN;
 
 /* scroll.c */
 extern void draw_nc_scrollbar( HWND hwnd, HDC hdc, BOOL draw_horizontal, BOOL draw_vertical ) DECLSPEC_HIDDEN;
diff --git a/server/queue.c b/server/queue.c
index 11111111111..11111111111 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -1964,8 +1964,6 @@ static int queue_rawinput_message( struct process* process, void *arg )
         device = find_rawinput_device( process, raw_msg->data.rawinput.hid.usage_page, raw_msg->data.rawinput.hid.usage );
     if (!device) return 0;
 
-    if (raw_msg->message == WM_INPUT_DEVICE_CHANGE && !(device->flags & RIDEV_DEVNOTIFY)) return 0;
-
     if (raw_msg->desktop) desktop = (struct desktop *)grab_object( raw_msg->desktop );
     else if (!(desktop = get_desktop_obj( process, process->desktop, 0 ))) goto done;
 
-- 
2.40.0

