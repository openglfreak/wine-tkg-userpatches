From: "Rémi Bernon" <rbernon@codeweavers.com>
Subject: [PATCH] ntdll: Allocate heap->pending_free using NtAllocateVirtualMemory.
Message-Id: <20210308081423.9422-1-rbernon@codeweavers.com>
Date: Mon,  8 Mar 2021 09:14:17 +0100

As we may just be initializing the process heap itself, it's not
completely ready.

This should fix the "HEAP_GetPtr Invalid heap 0000000000000000!" error.

Signed-off-by: Rémi Bernon <rbernon@codeweavers.com>
---
 dlls/ntdll/heap.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/dlls/ntdll/heap.c b/dlls/ntdll/heap.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/heap.c
+++ b/dlls/ntdll/heap.c
@@ -1448,8 +1448,9 @@ static void heap_set_debug_flags( HANDLE handle )
     if ((heap->flags & HEAP_GROWABLE) && !heap->pending_free &&
         ((flags & HEAP_FREE_CHECKING_ENABLED) || RUNNING_ON_VALGRIND))
     {
-        heap->pending_free = RtlAllocateHeap( handle, HEAP_ZERO_MEMORY,
-                                              MAX_FREE_PENDING * sizeof(*heap->pending_free) );
+        SIZE_T size = MAX_FREE_PENDING * sizeof(*heap->pending_free);
+        NtAllocateVirtualMemory( NtCurrentProcess(), (void **)&heap->pending_free, 0,
+                                 &size, MEM_COMMIT, PAGE_READWRITE );
         heap->pending_pos = 0;
     }
 }
@@ -1610,10 +1611,11 @@ HANDLE WINAPI RtlDestroyHeap( HANDLE handle )
 
     if ((pending = heap->pending_free))
     {
+        SIZE_T pending_size = MAX_FREE_PENDING * sizeof(*pending);
         heap->pending_free = NULL;
         for (tmp = pending; *tmp && tmp != pending + MAX_FREE_PENDING; ++tmp)
             heap_free_block( heap, heap->flags, *tmp );
-        RtlFreeHeap( handle, 0, pending );
+        NtFreeVirtualMemory( NtCurrentProcess(), &pending, &pending_size, MEM_RELEASE );
     }
 
     if (heap == process_heap) return handle; /* cannot delete the main process heap */
-- 
2.40.0

