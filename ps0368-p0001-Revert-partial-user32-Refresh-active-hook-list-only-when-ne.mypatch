From 4a6f8d36aa17ec5c14e73464f30c37a3b7161396 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 1 Mar 2021 21:31:23 +0100
Subject: [PATCH 01/18] Revert (partial) "user32: Refresh active hook list only
 when needed."

Refresh hooks on get_message calls.

This reverts commit 51cc9210da24ea0fe1354a5f069de8e214b92add.
---
 dlls/user32/message.c | 11 +++++++----
 server/hook.c         |  2 +-
 server/protocol.def   |  1 +
 server/queue.c        |  2 ++
 server/user.h         |  1 +
 5 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/dlls/user32/message.c b/dlls/user32/message.c
index 5a3eae75aeb..16c1accc4af 100644
--- a/dlls/user32/message.c
+++ b/dlls/user32/message.c
@@ -2713,7 +2713,12 @@ static int peek_message( MSG *msg, HWND hwnd, UINT first, UINT last, UINT flags,
         }
         SHARED_READ_END( &shared->seq );
 
-        if (skip) res = STATUS_PENDING;
+        if (skip)
+        {
+            /* force refreshing hooks */
+            thread_info->active_hooks = 0;
+            res = STATUS_PENDING;
+        }
         else SERVER_START_REQ( get_message )
         {
             req->flags     = flags;
@@ -2737,14 +2742,12 @@ static int peek_message( MSG *msg, HWND hwnd, UINT first, UINT last, UINT flags,
                 info.msg.pt.x    = reply->x;
                 info.msg.pt.y    = reply->y;
                 hw_id            = 0;
+                thread_info->active_hooks = reply->active_hooks;
             }
             else buffer_size = reply->total;
         }
         SERVER_END_REQ;
 
-        /* force refreshing hooks */
-        thread_info->active_hooks = 0;
-
         if (res)
         {
             HeapFree( GetProcessHeap(), 0, buffer );
diff --git a/server/hook.c b/server/hook.c
index f3012994ef5..818da46d594 100644
--- a/server/hook.c
+++ b/server/hook.c
@@ -357,7 +357,7 @@ static int is_hook_active( struct hook_table *table, int index )
 }
 
 /* get a bitmap of all active hooks for the current thread */
-static unsigned int get_active_hooks(void)
+unsigned int get_active_hooks(void)
 {
     struct hook_table *table = get_queue_hooks( current );
     struct hook_table *global_hooks = get_global_hooks( current );
diff --git a/server/protocol.def b/server/protocol.def
index e653d4f9d9a..7488b36d8ca 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -2273,6 +2273,7 @@ enum message_type
     int             x;         /* message x position */
     int             y;         /* message y position */
     unsigned int    time;      /* message time */
+    unsigned int    active_hooks; /* active hooks bitmap */
     data_size_t     total;     /* total size of extra data */
     VARARG(data,message_data); /* message data for sent messages */
 @END
diff --git a/server/queue.c b/server/queue.c
index 228752416b3..4268ac1f126 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -2790,6 +2790,8 @@ DECL_HANDLER(get_message)
     user_handle_t get_win = get_user_full_handle( req->get_win );
     unsigned int filter = req->flags >> 16;
 
+    reply->active_hooks = get_active_hooks();
+
     if (get_win && get_win != 1 && get_win != -1 && !get_user_object( get_win, USER_WINDOW ))
     {
         set_win32_error( ERROR_INVALID_WINDOW_HANDLE );
diff --git a/server/user.h b/server/user.h
index 63931d240f4..2806e06832c 100644
--- a/server/user.h
+++ b/server/user.h
@@ -90,6 +90,7 @@ extern void cleanup_clipboard_thread( struct thread *thread );
 /* hook functions */
 
 extern void remove_thread_hooks( struct thread *thread );
+extern unsigned int get_active_hooks(void);
 extern struct thread *get_first_global_hook( int id );
 
 /* queue functions */

