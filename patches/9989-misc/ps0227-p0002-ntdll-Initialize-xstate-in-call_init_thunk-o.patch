From: Paul Gofman <pgofman@codeweavers.com>
Subject: [PATCH v2 2/2] ntdll: Initialize xstate in call_init_thunk() on x86.
Message-Id: <20211124150640.2054031-2-pgofman@codeweavers.com>
Date: Wed, 24 Nov 2021 18:06:40 +0300
In-Reply-To: <20211124150640.2054031-1-pgofman@codeweavers.com>
References: <20211124150640.2054031-1-pgofman@codeweavers.com>

Signed-off-by: Paul Gofman <pgofman@codeweavers.com>
---
    Other thread may be setting xstate during initial suspend.

 dlls/ntdll/unix/signal_i386.c   | 14 ++++++++++++--
 dlls/ntdll/unix/signal_x86_64.c |  7 ++++++-
 2 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/dlls/ntdll/unix/signal_i386.c b/dlls/ntdll/unix/signal_i386.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/signal_i386.c
+++ b/dlls/ntdll/unix/signal_i386.c
@@ -2462,8 +2462,13 @@ void DECLSPEC_HIDDEN call_init_thunk( LPTHREAD_START_ROUTINE entry, void *arg, B
     struct x86_thread_data *thread_data = (struct x86_thread_data *)&teb->GdiTebBatch;
     struct syscall_frame *frame = thread_data->syscall_frame;
     CONTEXT *ctx, context = { CONTEXT_ALL };
+    DECLSPEC_ALIGN(64) XSTATE xs;
     DWORD *stack;
 
+    context_init_xstate( &context, &xs );
+    xs.Mask = 0;
+    xs.CompactionMask = xstate_compaction_enabled ? 0x8000000000000000 : 0;
+
     context.SegCs  = get_cs();
     context.SegDs  = get_ds();
     context.SegEs  = get_ds();
@@ -2482,7 +2487,11 @@ void DECLSPEC_HIDDEN call_init_thunk( LPTHREAD_START_ROUTINE entry, void *arg, B
     ((XSAVE_FORMAT *)context.ExtendedRegisters)->StatusWord  = 0;
     ((XSAVE_FORMAT *)context.ExtendedRegisters)->TagWord     = 0;
     ((XSAVE_FORMAT *)context.ExtendedRegisters)->MxCsr = 0x1f80;
-    if ((ctx = get_cpu_area( IMAGE_FILE_MACHINE_I386 ))) *ctx = context;
+    if ((ctx = get_cpu_area( IMAGE_FILE_MACHINE_I386 )))
+    {
+        *ctx = context;
+        ctx->ContextFlags &= ~0x40;
+    }
 
     if (suspend) wait_suspend( &context );
 
@@ -2499,7 +2508,8 @@ void DECLSPEC_HIDDEN call_init_thunk( LPTHREAD_START_ROUTINE entry, void *arg, B
     }
     ctx->ContextFlags = CONTEXT_FULL | CONTEXT_FLOATING_POINT | CONTEXT_EXTENDED_REGISTERS;
     memset( frame, 0, sizeof(*frame) );
-    NtSetContextThread( GetCurrentThread(), ctx );
+    context.ContextFlags = ctx->ContextFlags | (context.ContextFlags & CONTEXT_XSTATE);
+    NtSetContextThread( GetCurrentThread(), &context );
 
     stack = (DWORD *)ctx;
     *(--stack) = 0;
diff --git a/dlls/ntdll/unix/signal_x86_64.c b/dlls/ntdll/unix/signal_x86_64.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/signal_x86_64.c
+++ b/dlls/ntdll/unix/signal_x86_64.c
@@ -3475,9 +3475,13 @@ void DECLSPEC_HIDDEN call_init_thunk( LPTHREAD_START_ROUTINE entry, void *arg, B
     struct amd64_thread_data *thread_data = (struct amd64_thread_data *)&teb->GdiTebBatch;
     struct syscall_frame *frame = thread_data->syscall_frame;
     CONTEXT *ctx, context = { 0 };
+    DECLSPEC_ALIGN(64) XSTATE xs;
     I386_CONTEXT *wow_context;
 
     context.ContextFlags = CONTEXT_ALL;
+    context_init_xstate( &context, &xs );
+    xs.Mask = 0;
+    xs.CompactionMask = xstate_compaction_enabled ? 0x8000000000000000 : 0;
     context.Rcx    = (ULONG_PTR)entry;
     context.Rdx    = (ULONG_PTR)arg;
     context.Rsp    = (ULONG_PTR)teb->Tib.StackBase - 0x28;
@@ -3525,7 +3529,8 @@ void DECLSPEC_HIDDEN call_init_thunk( LPTHREAD_START_ROUTINE entry, void *arg, B
     }
     ctx->ContextFlags = CONTEXT_FULL;
     memset( frame, 0, sizeof(*frame) );
-    NtSetContextThread( GetCurrentThread(), ctx );
+    context.ContextFlags = ctx->ContextFlags | (context.ContextFlags & CONTEXT_XSTATE);
+    NtSetContextThread( GetCurrentThread(), &context );
 
     frame->rsp = (ULONG64)ctx - 8;
     frame->rip = (ULONG64)pLdrInitializeThunk;

-- 
2.37.1

