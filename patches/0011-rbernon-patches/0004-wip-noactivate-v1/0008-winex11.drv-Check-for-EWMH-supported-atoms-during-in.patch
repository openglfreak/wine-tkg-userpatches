From 7be9aff9f06c791b08231c39d9f4471e9f7d6c7a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Sat, 7 May 2022 01:17:21 +0200
Subject: [PATCH 08/19] winex11.drv: Check for EWMH supported atoms during
 init.

CW-Bug-Id: #19553
CW-Bug-Id: #19644
Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=2155
---
 dlls/winex11.drv/window.c      | 31 +------------------------------
 dlls/winex11.drv/x11drv.h      |  6 ++++++
 dlls/winex11.drv/x11drv_main.c | 34 ++++++++++++++++++++++++++++++++++
 3 files changed, 41 insertions(+), 30 deletions(-)

diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -3214,35 +3214,6 @@ LRESULT X11DRV_WindowMessage( HWND hwnd, UINT msg, WPARAM wp, LPARAM lp )
 }
 
 
-/***********************************************************************
- *              is_netwm_supported
- */
-static BOOL is_netwm_supported( Display *display, Atom atom )
-{
-    static Atom *net_supported;
-    static int net_supported_count = -1;
-    int i;
-
-    if (net_supported_count == -1)
-    {
-        Atom type;
-        int format;
-        unsigned long count, remaining;
-
-        if (!XGetWindowProperty( display, DefaultRootWindow(display), x11drv_atom(_NET_SUPPORTED), 0,
-                                 ~0UL, False, XA_ATOM, &type, &format, &count,
-                                 &remaining, (unsigned char **)&net_supported ))
-            net_supported_count = get_property_size( format, count ) / sizeof(Atom);
-        else
-            net_supported_count = 0;
-    }
-
-    for (i = 0; i < net_supported_count; i++)
-        if (net_supported[i] == atom) return TRUE;
-    return FALSE;
-}
-
-
 /***********************************************************************
  *              start_screensaver
  */
@@ -3321,7 +3292,7 @@ LRESULT X11DRV_SysCommand( HWND hwnd, WPARAM wparam, LPARAM lparam )
 
     if (NtUserGetWindowLongW( hwnd, GWL_STYLE ) & WS_MAXIMIZE) goto failed;
 
-    if (!is_netwm_supported( data->display, x11drv_atom(_NET_WM_MOVERESIZE) ))
+    if (!ewmh.has__net_wm_moveresize)
     {
         TRACE( "_NET_WM_MOVERESIZE not supported\n" );
         goto failed;
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -424,6 +424,11 @@ static inline size_t get_property_size( int format, unsigned long count )
     return count * (format / 8);
 }
 
+struct x11drv_ewmh_data
+{
+    int has__net_wm_moveresize : 1;
+};
+
 extern XVisualInfo default_visual DECLSPEC_HIDDEN;
 extern XVisualInfo argb_visual DECLSPEC_HIDDEN;
 extern Colormap default_colormap DECLSPEC_HIDDEN;
@@ -455,6 +460,7 @@ extern int xfixes_event_base DECLSPEC_HIDDEN;
 extern char *process_name DECLSPEC_HIDDEN;
 extern Display *clipboard_display DECLSPEC_HIDDEN;
 extern WNDPROC client_foreign_window_proc DECLSPEC_HIDDEN;
+extern struct x11drv_ewmh_data ewmh DECLSPEC_HIDDEN;
 
 /* atoms */
 
diff --git a/dlls/winex11.drv/x11drv_main.c b/dlls/winex11.drv/x11drv_main.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/x11drv_main.c
+++ b/dlls/winex11.drv/x11drv_main.c
@@ -94,6 +94,7 @@ int xrender_error_base = 0;
 int xfixes_event_base = 0;
 char *process_name = NULL;
 WNDPROC client_foreign_window_proc = NULL;
+struct x11drv_ewmh_data ewmh = {0};
 
 static x11drv_error_callback err_callback;   /* current callback for error */
 static Display *err_callback_display;        /* display callback is set for */
@@ -624,6 +625,38 @@ static void setup_options(void)
     NtClose( hkey );
 }
 
+
+/***********************************************************************
+ *              x11drv_ewmh_init
+ */
+static void x11drv_ewmh_init(void)
+{
+    Atom type;
+    long *supported;
+    unsigned long count, remaining;
+    char *atom_name;
+    int format, i, supported_count = 0;
+
+    if (!XGetWindowProperty( gdi_display, DefaultRootWindow(gdi_display), x11drv_atom(_NET_SUPPORTED), 0,
+                             ~0UL, False, XA_ATOM, &type, &format, &count, &remaining,
+                             (unsigned char **)&supported ))
+        supported_count = count * (format / 8) / sizeof(Atom);
+
+    TRACE( "EWMH _NET_SUPPORTED:\n" );
+    for (i = 0; i < supported_count; ++i)
+    {
+        if ((Atom)(int)supported[i] == x11drv_atom(_NET_WM_MOVERESIZE))
+            ewmh.has__net_wm_moveresize = 1;
+
+        atom_name = XGetAtomName( gdi_display, (Atom)(int)supported[i] );
+        TRACE( "  %s\n", atom_name );
+        XFree( atom_name );
+    }
+
+    if (supported) XFree( supported );
+}
+
+
 #ifdef SONAME_LIBXCOMPOSITE
 
 #define MAKE_FUNCPTR(f) typeof(f) * p##f;
@@ -908,6 +941,7 @@ static NTSTATUS x11drv_init( void *arg )
     X11DRV_XComposite_Init();
 #endif
     X11DRV_XInput2_Init();
+    x11drv_ewmh_init();
 
     XkbUseExtension( gdi_display, NULL, NULL );
     X11DRV_InitKeyboard( gdi_display );
-- 
0.0.0

