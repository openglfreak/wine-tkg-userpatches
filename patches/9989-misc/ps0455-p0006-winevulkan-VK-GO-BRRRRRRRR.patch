From 221dac08ff7784efd93475ebd45e75e5dd5f9a9a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 5 Dec 2022 12:44:08 +0100
Subject: [PATCH 6/6] winevulkan: VK GO BRRRRRRRR.

This is an unreasonable optimisation, don't use it.
---
 dlls/winevulkan/loader_thunks.c |  1 +
 dlls/winevulkan/make_vulkan     |  1 +
 dlls/winevulkan/vulkan_loader.h | 78 ++++++++++++++++++++++++---------
 3 files changed, 59 insertions(+), 21 deletions(-)

diff --git a/dlls/winevulkan/loader_thunks.c b/dlls/winevulkan/loader_thunks.c
index 11111111111..11111111111 100644
--- a/dlls/winevulkan/loader_thunks.c
+++ b/dlls/winevulkan/loader_thunks.c
@@ -9,6 +9,7 @@
  *
  */
 
+#define VK_DEFINE_DISPATCHER
 #include "vulkan_loader.h"
 
 WINE_DEFAULT_DEBUG_CHANNEL(vulkan);
diff --git a/dlls/winevulkan/make_vulkan b/dlls/winevulkan/make_vulkan
index 11111111111..11111111111 100755
--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -2895,6 +2895,7 @@ class VkGenerator(object):
     def generate_loader_thunks_c(self, f):
         self._generate_copyright(f)
 
+        f.write("#define VK_DEFINE_DISPATCHER\n")
         f.write("#include \"vulkan_loader.h\"\n\n")
 
         f.write("WINE_DEFAULT_DEBUG_CHANNEL(vulkan);\n\n")
diff --git a/dlls/winevulkan/vulkan_loader.h b/dlls/winevulkan/vulkan_loader.h
index 11111111111..11111111111 100644
--- a/dlls/winevulkan/vulkan_loader.h
+++ b/dlls/winevulkan/vulkan_loader.h
@@ -175,27 +175,26 @@ struct is_available_device_function_params
 #define VK_FAST_THUNK_MAX_ARGS 7
 
 #define __VK_FAST_THUNK_ARGS_0
-#define __VK_FAST_THUNK_ARGS_1 "movq %rcx,%r8\n\t"         __VK_FAST_THUNK_ARGS_0
-#define __VK_FAST_THUNK_ARGS_2 "movq %rdx,%xmm0\n\t"       __VK_FAST_THUNK_ARGS_1
-#define __VK_FAST_THUNK_ARGS_3 "movq %r8,%xmm1\n\t"        __VK_FAST_THUNK_ARGS_2
-#define __VK_FAST_THUNK_ARGS_4 "movq %r9,%xmm2\n\t"        __VK_FAST_THUNK_ARGS_3
-#define __VK_FAST_THUNK_ARGS_5 "movq 0x28(%rsp),%xmm3\n\t" __VK_FAST_THUNK_ARGS_4
-#define __VK_FAST_THUNK_ARGS_6 "movq 0x30(%rsp),%xmm4\n\t" __VK_FAST_THUNK_ARGS_5
-#define __VK_FAST_THUNK_ARGS_7 "movq 0x38(%rsp),%xmm5\n\t" __VK_FAST_THUNK_ARGS_6
-
-#define VK_FAST_THUNK(name, code, args) \
-    __ASM_GLOBAL_FUNC(name, __VK_FAST_THUNK_ARGS_ ## args \
-                      "movq __wine_unixlib_handle(%rip),%rcx\n\t" \
-                      "movq $" code ",%rdx\n\t" \
-                      "jmp *__wine_unix_call_dispatcher(%rip)")
-
-#define __VK_FAST_GET_ARG_0 "movq %%rdi,%0"
-#define __VK_FAST_GET_ARG_1 "movq %%xmm0,%0"
-#define __VK_FAST_GET_ARG_2 "movq %%xmm1,%0"
-#define __VK_FAST_GET_ARG_3 "movq %%xmm2,%0"
-#define __VK_FAST_GET_ARG_4 "movq %%xmm3,%0"
-#define __VK_FAST_GET_ARG_5 "movq %%xmm4,%0"
-#define __VK_FAST_GET_ARG_6 "movq %%xmm5,%0"
+#define __VK_FAST_THUNK_ARGS_1 __VK_FAST_THUNK_ARGS_0
+#define __VK_FAST_THUNK_ARGS_2 __VK_FAST_THUNK_ARGS_1
+#define __VK_FAST_THUNK_ARGS_3 __VK_FAST_THUNK_ARGS_2
+#define __VK_FAST_THUNK_ARGS_4 __VK_FAST_THUNK_ARGS_3
+#define __VK_FAST_THUNK_ARGS_5 "movq 0x28(%rsp),%r10\n\t"  __VK_FAST_THUNK_ARGS_4
+#define __VK_FAST_THUNK_ARGS_6 "movq 0x30(%rsp),%r11\n\t"  __VK_FAST_THUNK_ARGS_5
+#define __VK_FAST_THUNK_ARGS_7 "movq 0x38(%rsp),%xmm0\n\t" __VK_FAST_THUNK_ARGS_6
+
+#define VK_FAST_THUNK( name, code, args ) \
+    __ASM_GLOBAL_FUNC( name, __VK_FAST_THUNK_ARGS_ ## args \
+                       "movq $" code ",%rax\n\t" \
+                       "jmp vk_fast_thunk_dispatcher" )
+
+#define __VK_FAST_GET_ARG_0 "movq %%rcx,%0"
+#define __VK_FAST_GET_ARG_1 "movq %%rdx,%0"
+#define __VK_FAST_GET_ARG_2 "movq %%r8,%0"
+#define __VK_FAST_GET_ARG_3 "movq %%r9,%0"
+#define __VK_FAST_GET_ARG_4 "movq %%r10,%0"
+#define __VK_FAST_GET_ARG_5 "movq %%r11,%0"
+#define __VK_FAST_GET_ARG_6 "movq %%xmm0,%0"
 
 #define VK_FAST_THUNK_GET_ARG(n, type, param) do { \
         void *__reg; \
@@ -203,6 +202,43 @@ struct is_available_device_function_params
         (param) = (type)__reg; \
     } while(0)
 
+#ifdef VK_DEFINE_DISPATCHER
+__ASM_GLOBAL_FUNC( vk_fast_thunk_dispatcher,
+                   "pushq %rsi\n\t"
+                   "pushq %rdi\n\t"
+                   "subq $0xa8,%rsp\n\t"
+                   "movdqa %xmm6,0x00(%rsp)\n\t"
+                   "movdqa %xmm7,0x10(%rsp)\n\t"
+                   "movdqa %xmm8,0x20(%rsp)\n\t"
+                   "movdqa %xmm9,0x30(%rsp)\n\t"
+                   "movdqa %xmm10,0x40(%rsp)\n\t"
+                   "movdqa %xmm11,0x50(%rsp)\n\t"
+                   "movdqa %xmm12,0x60(%rsp)\n\t"
+                   "movdqa %xmm13,0x70(%rsp)\n\t"
+                   "movdqa %xmm14,0x80(%rsp)\n\t"
+                   "movdqa %xmm15,0x90(%rsp)\n\t"
+                   "movq %rsp,%rsi\n\t"
+                   "movq %gs:0x328,%rsp\n\t"
+                   "movq %rsi,0x88(%rsp)\n\t"
+                   "movq __wine_unixlib_handle(%rip),%rsi\n\t"
+                   "callq *(%rsi,%rax,8)\n\t"
+                   "movq 0x88(%rsp),%rsp\n\t"
+                   "movdqa 0x00(%rsp),%xmm6\n\t"
+                   "movdqa 0x10(%rsp),%xmm7\n\t"
+                   "movdqa 0x20(%rsp),%xmm8\n\t"
+                   "movdqa 0x30(%rsp),%xmm9\n\t"
+                   "movdqa 0x40(%rsp),%xmm10\n\t"
+                   "movdqa 0x50(%rsp),%xmm11\n\t"
+                   "movdqa 0x60(%rsp),%xmm12\n\t"
+                   "movdqa 0x70(%rsp),%xmm13\n\t"
+                   "movdqa 0x80(%rsp),%xmm14\n\t"
+                   "movdqa 0x90(%rsp),%xmm15\n\t"
+                   "addq $0xa8,%rsp\n\t"
+                   "popq %rdi\n\t"
+                   "popq %rsi\n\t"
+                   "ret" )
+#endif
+
 #endif /* __x86_64__ */
 
 #endif /* __WINE_VULKAN_LOADER_H */
-- 
2.39.0

