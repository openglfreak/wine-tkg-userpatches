From a2cde919a94954b42af9b5fd2f587e605923c2c7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Sat, 7 Nov 2020 03:48:02 +0100
Subject: [PATCH 08/11] gdi32: Lazily initialize the font list.

---
 dlls/gdi32/font.c | 40 +++++++++++++++++++++++++++++++++++-----
 1 file changed, 35 insertions(+), 5 deletions(-)

diff --git a/dlls/gdi32/font.c b/dlls/gdi32/font.c
index 9fa0f45ec4b..d74bf83fe44 100644
--- a/dlls/gdi32/font.c
+++ b/dlls/gdi32/font.c
@@ -416,6 +416,9 @@ static CRITICAL_SECTION_DEBUG critsect_debug =
 };
 static CRITICAL_SECTION font_cs = { &critsect_debug, -1, 0, 0, 0, 0 };
 
+RTL_RUN_ONCE font_list_init_once = RTL_RUN_ONCE_INIT;
+DWORD WINAPI font_list_init( RTL_RUN_ONCE *once, void *param, void **context );
+
 #ifndef WINE_FONT_DIR
 #define WINE_FONT_DIR "fonts"
 #endif
@@ -2547,6 +2550,7 @@ static BOOL CDECL font_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
 {
     struct font_physdev *physdev;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return TRUE;
     if (!(physdev = HeapAlloc( GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*physdev) ))) return FALSE;
     push_dc_driver( dev, &physdev->dev, &font_driver );
@@ -2825,6 +2829,8 @@ static BOOL CDECL font_EnumFonts( PHYSDEV dev, LOGFONTW *lf, FONTENUMPROCW proc,
     struct enum_charset enum_charsets[32];
     DWORD count, charset;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
+
     charset = lf ? lf->lfCharSet : DEFAULT_CHARSET;
 
     count = create_enum_charset_list( charset, enum_charsets );
@@ -3706,6 +3712,7 @@ static HFONT CDECL font_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
     struct gdi_font *font = NULL, *prev = physdev->font;
     DC *dc = get_physdev_dc( dev );
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (hfont)
     {
         LOGFONTW lf;
@@ -5815,6 +5815,7 @@ BOOL CDECL get_file_outline_text_metric( const WCHAR *path, OUTLINETEXTMETRICW *
 {
     struct gdi_font *font = NULL;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!path || !font_funcs) return FALSE;
 
     if (!(font = alloc_gdi_font( path, NULL, 0 ))) goto done;
@@ -7952,12 +7960,6 @@ void font_init(void)
     if (!dpi) return 96;
     update_codepage( dpi );
 
-    if (!(font_funcs = init_freetype_lib()))
-        return dpi;
-
-    load_system_bitmap_fonts();
-    load_file_system_fonts();
-    font_funcs->load_fonts();
 
     attr.Attributes = OBJ_OPENIF;
     attr.ObjectName = &name;
@@ -7964,6 +7967,39 @@ void font_init(void)
     wine_fonts_cache_key = reg_create_key( wine_fonts_key, cacheW, sizeof(cacheW),
                                            REG_OPTION_VOLATILE, &disposition );
 
+    if (disposition == REG_CREATED_NEW_KEY)
+        RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, &disposition, NULL );
+
+    NtReleaseMutant( mutex, NULL );
+    return dpi;
+}
+
+DWORD WINAPI font_list_init( RTL_RUN_ONCE *once, void *param, void **context )
+{
+    OBJECT_ATTRIBUTES attr = { sizeof(attr) };
+    UNICODE_STRING name;
+    DWORD disposition = param ? *(DWORD *)param : 0;
+    HANDLE mutex;
+
+    static WCHAR wine_font_mutexW[] =
+        {'\\','B','a','s','e','N','a','m','e','d','O','b','j','e','c','t','s',
+         '\\','_','_','W','I','N','E','_','F','O','N','T','_','M','U','T','E','X','_','_'};
+
+    if (!(font_funcs = init_freetype_lib()))
+        return TRUE;
+
+    load_system_bitmap_fonts();
+    load_file_system_fonts();
+    font_funcs->load_fonts();
+
+    attr.Attributes = OBJ_OPENIF;
+    attr.ObjectName = &name;
+    name.Buffer = wine_font_mutexW;
+    name.Length = name.MaximumLength = sizeof(wine_font_mutexW);
+
+    if (NtCreateMutant( &mutex, MUTEX_ALL_ACCESS, &attr, FALSE ) < 0) return FALSE;
+    NtWaitForSingleObject( mutex, FALSE, NULL );
+
     if (disposition == REG_CREATED_NEW_KEY)
     {
         load_registry_fonts();
@@ -7984,7 +8007,8 @@ DWORD WINAPI font_list_init( RTL_RUN_ONCE *once, void *param, void **context )
     load_system_links();
     dump_gdi_font_list();
     dump_gdi_font_subst();
-    return dpi;
+
+    return TRUE;
 }
 
 /***********************************************************************
@@ -6330,6 +6331,7 @@ DWORD WINAPI font_list_init( RTL_RUN_ONCE *once, void *param, void **context )
 INT WINAPI NtGdiAddFontResourceW( const WCHAR *str, ULONG size, ULONG files, DWORD flags,
                                   DWORD tid, void *dv )
 {
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return 1;
     return add_font_resource( str, flags );
 }
@@ -8046,6 +8072,7 @@ HANDLE WINAPI AddFontMemResourceEx( PVOID ptr, DWORD size, PVOID pdv, DWORD *pcF
         SetLastError(ERROR_INVALID_PARAMETER);
         return NULL;
     }
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return NULL;
     if (!(copy = HeapAlloc( GetProcessHeap(), 0, size ))) return NULL;
     memcpy( copy, ptr, size );
@@ -6399,6 +6401,7 @@ BOOL WINAPI NtGdiRemoveFontMemResourceEx( HANDLE handle )
 BOOL WINAPI NtGdiRemoveFontResourceW( const WCHAR *str, ULONG size, ULONG files, DWORD flags,
                                       DWORD tid, void *dv )
 {
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return TRUE;
     return remove_font_resource( str, flags );
 }
@@ -6477,6 +6480,7 @@ BOOL WINAPI NtGdiGetRealizationInfo( HDC hdc, struct font_realization_info *info
  */
 BOOL WINAPI NtGdiGetRasterizerCaps( RASTERIZER_STATUS *status, UINT size )
 {
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     status->nSize = sizeof(RASTERIZER_STATUS);
     status->wFlags = font_funcs ? (TT_AVAILABLE | TT_ENABLED) : 0;
     status->nLanguageID = 0;
@@ -8331,6 +8359,7 @@ BOOL WINAPI GetFontFileData( DWORD instance_id, DWORD unknown, UINT64 offset, vo
     DWORD tag = 0, size;
     BOOL ret = FALSE;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     if (!font_funcs) return FALSE;
     EnterCriticalSection( &font_cs );
     if ((font = get_font_from_handle( instance_id )))
@@ -8364,6 +8393,7 @@ BOOL WINAPI GetFontFileInfo( DWORD instance_id, DWORD unknown, struct font_filei
     struct gdi_font *font;
     BOOL ret = FALSE;
 
+    RtlRunOnceExecuteOnce( &font_list_init_once, font_list_init, NULL, NULL );
     EnterCriticalSection( &font_cs );
 
     if ((font = get_font_from_handle( instance_id )))
-- 
2.29.2

