From d94c16e0a347575969750723d4326fbe66de878b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 1 Mar 2021 22:07:00 +0100
Subject: [PATCH 02/11] Revert "server: Don't fallback to desktop async
 keystate."

This reverts commit e9f5c5a6161c824f54484c6af5a8a7e02d635aa7.
---
 dlls/user32/tests/input.c |  5 +++--
 server/queue.c            | 24 +++++++++++++++++-------
 2 files changed, 20 insertions(+), 9 deletions(-)

diff --git a/dlls/user32/tests/input.c b/dlls/user32/tests/input.c
index 04d233b0cf6..c49015ebb84 100644
--- a/dlls/user32/tests/input.c
+++ b/dlls/user32/tests/input.c
@@ -3718,13 +3718,14 @@ static DWORD WINAPI get_key_state_thread(void *arg)
     ret = GetKeyboardState(keystate);
     ok(ret, "GetKeyboardState failed, %u\n", GetLastError());
     result = keystate['X'];
+    todo_wine_if(!has_queue)
     ok(!result, "%d: expected that keystate is not set, got %#x\n", i, result);
 
     result = keystate['C'];
     ok(!result, "%d: expected that C keystate is not set, got %#x\n", i, result);
 
     result = GetKeyState('X');
-    if (!has_queue) ok(!(result & 0x8000), "%d: expected that highest bit is unset, got %#x\n", i, result);
+    if (!has_queue) todo_wine ok(!(result & 0x8000), "%d: expected that highest bit is unset, got %#x\n", i, result);
     else todo_wine ok((result & 0x8000), "%d: expected that highest bit is set, got %#x\n", i, result);
     ok(!(result & 0x007e), "%d: expected that undefined bits are unset, got %#x\n", i, result);
 
@@ -3736,7 +3737,7 @@ static DWORD WINAPI get_key_state_thread(void *arg)
     ret = GetKeyboardState(keystate);
     ok(ret, "GetKeyboardState failed, %u\n", GetLastError());
     result = keystate['X'];
-    if (!has_queue) ok(!result, "%d: expected that keystate is unset, got %#x\n", i, result);
+    if (!has_queue) todo_wine ok(!result, "%d: expected that keystate is unset, got %#x\n", i, result);
     else todo_wine ok(result, "%d: expected that keystate is set, got %#x\n", i, result);
 
     result = keystate['C'];
diff --git a/server/queue.c b/server/queue.c
index 9f498ec6690..06a1cfda1d9 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -3285,18 +3285,30 @@ DECL_HANDLER(get_key_state)
         set_reply_data( (void *)desktop->shared->keystate, size );
         release_object( desktop );
     }
-    else if (!current->queue)
-    {
-        reply->state = 0;
-        memset( set_reply_data_size( size ), 0, size );
-    }
     else
     {
-        if (req->key >= 0) reply->state = current->queue->input->keystate[req->key & 0xff];
-        set_reply_data( current->queue->input->keystate, size );
-        if (req->key == 0) return;
-        /* synchronize with desktop keystate, but _only_ if req->key is given */
-        synchronize_input_key_state( current->queue->input );
+        unsigned char *keystate;
+        if (current->queue)
+        {
+            if (req->key >= 0)
+            {
+                /* synchronize with desktop keystate, but _only_ if req->key is given */
+                synchronize_input_key_state( current->queue->input );
+                reply->state = current->queue->input->keystate[req->key & 0xff];
+            }
+            set_reply_data( current->queue->input->keystate, size );
+            return;
+        }
+
+        /* fallback to desktop keystate */
+        if (!(desktop = get_thread_desktop( current, 0 ))) return;
+        if (req->key >= 0) reply->state = desktop->shared->keystate[req->key & 0xff] & ~0x40;
+        if ((keystate = set_reply_data_size( size )))
+        {
+            unsigned int i;
+            for (i = 0; i < size; i++) keystate[i] = desktop->shared->keystate[i] & ~0x40;
+        }
+        release_object( desktop );
     }
 }
 

