From: Patrick Hibbs <hibbsncc1701@gmail.com>
Subject: [PATCH v2 resend 1/2] ntdll: Implement alloc_size support in NtCreateFile.
Message-Id: <20220227121547.226439-1-hibbsncc1701@gmail.com>
Date: Sun, 27 Feb 2022 07:15:46 -0500

Use posix_fallocate to reserve space for files.
Function will print a warning at runtime if posix_fallocate isn't supported.

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=52171
Signed-off-by: Patrick Hibbs <hibbsncc1701@gmail.com>

---
v2:	- Rebase to current master after codefreeze.
	- Remove unneeded comment block.
	- Fix memory leak pointed out by Alex Henrie.
---
 dlls/ntdll/unix/file.c | 57 +++++++++++++++++++++++++++++++++++++++---
 1 file changed, 54 insertions(+), 3 deletions(-)

diff --git a/dlls/ntdll/unix/file.c b/dlls/ntdll/unix/file.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/file.c
+++ b/dlls/ntdll/unix/file.c
@@ -4194,6 +4194,10 @@ NTSTATUS WINAPI NtCreateFile( HANDLE *handle, ACCESS_MASK access, OBJECT_ATTRIBU
     char *unix_name;
     BOOL created = FALSE;
     NTSTATUS status;
+    ULONG new_attributes, new_disposition;
+    struct stat st;
+    LARGE_INTEGER remaining_bytes;
+    int perr, unix_handle;
 
     TRACE( "handle=%p access=%08x name=%s objattr=%08x root=%p sec=%p io=%p alloc_size=%p "
            "attr=%08x sharing=%08x disp=%d options=%08x ea=%p.0x%08x\n",
@@ -4204,8 +4208,6 @@ NTSTATUS WINAPI NtCreateFile( HANDLE *handle, ACCESS_MASK access, OBJECT_ATTRIBU
     *handle = 0;
     if (!attr || !attr->ObjectName) return STATUS_INVALID_PARAMETER;
 
-    if (alloc_size) FIXME( "alloc_size not supported\n" );
-
     new_attr = *attr;
     new_attr.Attributes |= OBJ_CASE_INSENSITIVE;
     if (options & FILE_OPEN_BY_FILE_ID)
@@ -4233,6 +4235,55 @@ NTSTATUS WINAPI NtCreateFile( HANDLE *handle, ACCESS_MASK access, OBJECT_ATTRIBU
         status = STATUS_SUCCESS;
     }
 
+#ifdef HAVE_POSIX_FALLOCATE
+    if (alloc_size && alloc_size->QuadPart > 0 &&
+        disposition != FILE_OPEN &&
+        (created || (disposition != FILE_OVERWRITE ||
+        status != STATUS_OBJECT_NAME_NOT_FOUND)))
+    {
+        remaining_bytes.QuadPart = 0;
+        new_disposition = FILE_OPEN;
+
+        if (created)
+            remaining_bytes.QuadPart = alloc_size->QuadPart;
+        else
+        {
+            if (get_file_info( AT_FDCWD, unix_name, FILE_OPEN_REPARSE_POINT, &st, &new_attributes ) == -1)
+                status = errno_to_status( errno );
+            else
+            {
+                if ((S_ISREG(st.st_mode)) && ((st.st_blocks * 512) < alloc_size->QuadPart))
+                    remaining_bytes.QuadPart = (alloc_size->QuadPart - (st.st_blocks * 512));
+            }
+        }
+
+        if (remaining_bytes.QuadPart > 0)
+        {
+            if (created || disposition == FILE_SUPERSEDE || disposition == FILE_OVERWRITE)
+                unix_handle = open( unix_name, O_RDWR | O_CREAT | O_TRUNC | O_DIRECT | O_SYNC, S_IRWXU );
+            else
+                unix_handle = open( unix_name, O_RDWR | O_DIRECT | O_SYNC, S_IRWXU );
+
+            if (unix_handle == -1)
+                status = errno_to_status( errno );
+            else
+            {
+                perr = posix_fallocate( unix_handle, 0, remaining_bytes.QuadPart );
+                if (perr)
+                    status = errno_to_status( perr );
+
+                close( unix_handle );
+            }
+        }
+    }
+    else
+    {
+        new_disposition = disposition;
+    }
+#else
+        WARN_ONCE("Preallocating files is not supported!\n");
+#endif
+
     if (status != STATUS_SUCCESS)
     {
         WARN( "%s not found (%x)\n", debugstr_us(attr->ObjectName), io->u.Status );
@@ -4240,7 +4291,7 @@ NTSTATUS WINAPI NtCreateFile( HANDLE *handle, ACCESS_MASK access, OBJECT_ATTRIBU
     }
 
     status = open_unix_file( handle, unix_name, access, &new_attr, attributes,
-                                   sharing, disposition, options, ea_buffer, ea_length );
+                                   sharing, new_disposition, options, ea_buffer, ea_length );
 
     if (status == STATUS_SUCCESS)
     {

-- 
2.35.1

