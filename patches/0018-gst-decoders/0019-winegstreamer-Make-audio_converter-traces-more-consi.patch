From ed9c0db1054c7e8e0ebc6cd6d4620cc53937b790 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Tue, 1 Mar 2022 11:25:18 +0100
Subject: [PATCH 19/20] winegstreamer: Make audio_converter traces more
 consistent.

---
 dlls/winegstreamer/audioconvert.c | 72 +++++++++++++------------------
 1 file changed, 30 insertions(+), 42 deletions(-)

diff --git a/dlls/winegstreamer/audioconvert.c b/dlls/winegstreamer/audioconvert.c
index 11111111111..11111111111 100644
--- a/dlls/winegstreamer/audioconvert.c
+++ b/dlls/winegstreamer/audioconvert.c
@@ -44,7 +44,7 @@ static struct audio_converter *impl_from_IMFTransform(IMFTransform *iface)
 
 static HRESULT WINAPI transform_QueryInterface(IMFTransform *iface, REFIID riid, void **obj)
 {
-    TRACE("%p, %s, %p.\n", iface, debugstr_guid(riid), obj);
+    TRACE("iface %p, riid %s, obj %p.\n", iface, debugstr_guid(riid), obj);
 
     if (IsEqualIID(riid, &IID_IMFTransform) ||
             IsEqualIID(riid, &IID_IUnknown))
@@ -64,7 +64,7 @@ static ULONG WINAPI transform_AddRef(IMFTransform *iface)
     struct audio_converter *transform = impl_from_IMFTransform(iface);
     ULONG refcount = InterlockedIncrement(&transform->refcount);
 
-    TRACE("%p, refcount %lu.\n", iface, refcount);
+    TRACE("iface %p increasing refcount to %lu.\n", transform, refcount);
 
     return refcount;
 }
@@ -74,7 +74,7 @@ static ULONG WINAPI transform_Release(IMFTransform *iface)
     struct audio_converter *transform = impl_from_IMFTransform(iface);
     ULONG refcount = InterlockedDecrement(&transform->refcount);
 
-    TRACE("%p, refcount %lu.\n", iface, refcount);
+    TRACE("iface %p decreasing refcount to %lu.\n", transform, refcount);
 
     if (!refcount)
     {
@@ -89,7 +89,8 @@ static ULONG WINAPI transform_Release(IMFTransform *iface)
 static HRESULT WINAPI transform_GetStreamLimits(IMFTransform *iface, DWORD *input_minimum, DWORD *input_maximum,
         DWORD *output_minimum, DWORD *output_maximum)
 {
-    TRACE("%p, %p, %p, %p, %p.\n", iface, input_minimum, input_maximum, output_minimum, output_maximum);
+    TRACE("iface %p, input_minimum %p, input_maximum %p, output_minimum %p, output_maximum %p.\n",
+            iface, input_minimum, input_maximum, output_minimum, output_maximum);
 
     *input_minimum = *input_maximum = *output_minimum = *output_maximum = 1;
 
@@ -98,7 +99,7 @@ static HRESULT WINAPI transform_GetStreamLimits(IMFTransform *iface, DWORD *inpu
 
 static HRESULT WINAPI transform_GetStreamCount(IMFTransform *iface, DWORD *inputs, DWORD *outputs)
 {
-    TRACE("%p, %p, %p.\n", iface, inputs, outputs);
+    TRACE("iface %p, inputs %p, outputs %p.\n", iface, inputs, outputs);
 
     *inputs = *outputs = 1;
 
@@ -108,59 +109,52 @@ static HRESULT WINAPI transform_GetStreamCount(IMFTransform *iface, DWORD *input
 static HRESULT WINAPI transform_GetStreamIDs(IMFTransform *iface, DWORD input_size, DWORD *inputs,
         DWORD output_size, DWORD *outputs)
 {
-    TRACE("%p, %lu, %p, %lu, %p.\n", iface, input_size, inputs, output_size, outputs);
-
+    FIXME("iface %p, input_size %lu, inputs %p, output_size %lu, outputs %p stub!\n",
+            iface, input_size, inputs, output_size, outputs);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_GetInputStreamInfo(IMFTransform *iface, DWORD id, MFT_INPUT_STREAM_INFO *info)
 {
-    FIXME("%p, %lu, %p.\n", iface, id, info);
-
+    FIXME("iface %p, id %lu, info %p stub!\n", iface, id, info);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_GetOutputStreamInfo(IMFTransform *iface, DWORD id, MFT_OUTPUT_STREAM_INFO *info)
 {
-    FIXME("%p. %lu, %p.\n", iface, id, info);
-
+    FIXME("iface %p, id %lu, info %p stub!\n", iface, id, info);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_GetAttributes(IMFTransform *iface, IMFAttributes **attributes)
 {
-    FIXME("%p, %p.\n", iface, attributes);
-
+    FIXME("iface %p, attributes %p stub!\n", iface, attributes);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_GetInputStreamAttributes(IMFTransform *iface, DWORD id,
         IMFAttributes **attributes)
 {
-    FIXME("%p, %lu, %p.\n", iface, id, attributes);
-
+    FIXME("iface %p, id %#lx, attributes %p stub!\n", iface, id, attributes);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_GetOutputStreamAttributes(IMFTransform *iface, DWORD id,
         IMFAttributes **attributes)
 {
-    FIXME("%p, %lu, %p.\n", iface, id, attributes);
-
+    FIXME("iface %p, id %#lx, attributes %p stub!\n", iface, id, attributes);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_DeleteInputStream(IMFTransform *iface, DWORD id)
 {
-    TRACE("%p, %lu.\n", iface, id);
-
+    FIXME("iface %p, id %#lx stub!\n", iface, id);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_AddInputStreams(IMFTransform *iface, DWORD streams, DWORD *ids)
 {
-    TRACE("%p, %lu, %p.\n", iface, streams, ids);
-
+    FIXME("iface %p, streams %lu, ids %p stub!\n", iface, streams, ids);
     return E_NOTIMPL;
 }
 
@@ -170,7 +164,7 @@ static HRESULT WINAPI transform_GetInputAvailableType(IMFTransform *iface, DWORD
     IMFMediaType *ret;
     HRESULT hr;
 
-    TRACE("%p, %lu, %lu, %p.\n", iface, id, index, type);
+    TRACE("iface %p, id %lu, index %lu, type %p.\n", iface, id, index, type);
 
     if (id != 0)
         return MF_E_INVALIDSTREAMNUMBER;
@@ -222,7 +216,7 @@ static HRESULT WINAPI transform_GetOutputAvailableType(IMFTransform *iface, DWOR
     const GUID *subtype;
     DWORD rate, channels, bps;
 
-    TRACE("%p, %lu, %lu, %p.\n", iface, id, index, type);
+    TRACE("iface %p, id %lu, index %lu, type %p.\n", iface, id, index, type);
 
     if (id != 0)
         return MF_E_INVALIDSTREAMNUMBER;
@@ -277,7 +271,7 @@ static HRESULT WINAPI transform_SetInputType(IMFTransform *iface, DWORD id, IMFM
 
     struct audio_converter *transform = impl_from_IMFTransform(iface);
 
-    TRACE("%p, %lu, %p, %#lx.\n", iface, id, type, flags);
+    TRACE("iface %p, id %lu, type %p, flags %#lx.\n", iface, id, type, flags);
 
     if (id != 0)
         return MF_E_INVALIDSTREAMNUMBER;
@@ -348,7 +342,7 @@ static HRESULT WINAPI transform_SetOutputType(IMFTransform *iface, DWORD id, IMF
     UINT32 unused;
     HRESULT hr;
 
-    TRACE("%p, %lu, %p, %#lx.\n", iface, id, type, flags);
+    TRACE("iface %p, id %#lx, type %p, flags %#lx.\n", iface, id, type, flags);
 
     if (id != 0)
         return MF_E_INVALIDSTREAMNUMBER;
@@ -421,7 +415,7 @@ static HRESULT WINAPI transform_GetInputCurrentType(IMFTransform *iface, DWORD i
     IMFMediaType *ret;
     HRESULT hr;
 
-    TRACE("%p, %lu, %p.\n", transform, id, type);
+    TRACE("iface %p, id %#lx, type %p.\n", iface, id, type);
 
     if (id != 0)
         return MF_E_INVALIDSTREAMNUMBER;
@@ -452,7 +446,7 @@ static HRESULT WINAPI transform_GetOutputCurrentType(IMFTransform *iface, DWORD
     IMFMediaType *ret;
     HRESULT hr;
 
-    TRACE("%p, %lu, %p.\n", transform, id, type);
+    TRACE("iface %p, id %#lx, type %p.\n", iface, id, type);
 
     if (id != 0)
         return MF_E_INVALIDSTREAMNUMBER;
@@ -479,58 +473,52 @@ static HRESULT WINAPI transform_GetOutputCurrentType(IMFTransform *iface, DWORD
 
 static HRESULT WINAPI transform_GetInputStatus(IMFTransform *iface, DWORD id, DWORD *flags)
 {
-    FIXME("%p, %lu, %p.\n", iface, id, flags);
-
+    FIXME("iface %p, id %#lx, flags %p stub!\n", iface, id, flags);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_GetOutputStatus(IMFTransform *iface, DWORD *flags)
 {
-    FIXME("%p, %p.\n", iface, flags);
-
+    FIXME("iface %p, flags %p stub!\n", iface, flags);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_SetOutputBounds(IMFTransform *iface, LONGLONG lower, LONGLONG upper)
 {
-    FIXME("%p, %s, %s.\n", iface, wine_dbgstr_longlong(lower), wine_dbgstr_longlong(upper));
-
+    FIXME("iface %p, lower %I64d, upper %I64d stub!\n", iface, lower, upper);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_ProcessEvent(IMFTransform *iface, DWORD id, IMFMediaEvent *event)
 {
-    TRACE("%p, %lu, %p.\n", iface, id, event);
-
+    FIXME("iface %p, id %#lx, event %p stub!\n", iface, id, event);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_ProcessMessage(IMFTransform *iface, MFT_MESSAGE_TYPE message, ULONG_PTR param)
 {
-    TRACE("%p, %u, %Iu.\n", iface, message, param);
+    TRACE("iface %p, message %#x, param %Iu.\n", iface, message, param);
 
     switch(message)
     {
         case MFT_MESSAGE_NOTIFY_BEGIN_STREAMING:
             return S_OK;
         default:
-            FIXME("Unhandled message type %x.\n", message);
+            FIXME("Unhandled message type %#x.\n", message);
             return E_NOTIMPL;
     }
 }
 
 static HRESULT WINAPI transform_ProcessInput(IMFTransform *iface, DWORD id, IMFSample *sample, DWORD flags)
 {
-    FIXME("%p, %lu, %p, %#lx.\n", iface, id, sample, flags);
-
+    FIXME("iface %p, id %lu, sample %p, flags %#lx stub!\n", iface, id, sample, flags);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI transform_ProcessOutput(IMFTransform *iface, DWORD flags, DWORD count,
         MFT_OUTPUT_DATA_BUFFER *samples, DWORD *status)
 {
-    FIXME("%p, %#lx, %lu, %p, %p.\n", iface, flags, count, samples, status);
-
+    FIXME("iface %p, flags %#lx, count %lu, samples %p, status %p stub!\n", iface, flags, count, samples, status);
     return E_NOTIMPL;
 }
 
@@ -568,7 +556,7 @@ HRESULT audio_converter_create(REFIID riid, void **ret)
 {
     struct audio_converter *transform;
 
-    TRACE("%s %p\n", debugstr_guid(riid), ret);
+    TRACE("riid %s, ret %p.\n", debugstr_guid(riid), ret);
 
     if (!(transform = calloc(1, sizeof(*transform))))
         return E_OUTOFMEMORY;
-- 
2.35.1

