From 3331d2ff95449788b9fff55c2625a109194badbb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Sun, 17 Oct 2021 13:27:57 +0200
Subject: [PATCH 10/14] user32: Set generic DEVMODEW fields in
 NtUserEnumDosplaySettings.

---
 dlls/win32u/sysparams.c     | 10 ++++++++++
 dlls/wineandroid.drv/init.c |  4 ----
 dlls/winemac.drv/display.c  |  5 -----
 dlls/winex11.drv/settings.c | 19 +++++++------------
 4 files changed, 17 insertions(+), 21 deletions(-)

diff --git a/dlls/win32u/sysparams.c b/dlls/win32u/sysparams.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/sysparams.c
+++ b/dlls/win32u/sysparams.c
@@ -1815,6 +1815,8 @@ LONG WINAPI NtUserChangeDisplaySettings( UNICODE_STRING *devname, DEVMODEW *devm
 BOOL WINAPI NtUserEnumDisplaySettings( UNICODE_STRING *device, DWORD mode,
                                        DEVMODEW *dev_mode, DWORD flags )
 {
+    static const WCHAR wine_display_driver_w[] = {'W','i','n','e',' ','D','i','s','p','l','a','y',' ','D','r','i','v','e','r',0};
+
     WCHAR device_name[CCHDEVICENAME];
     struct adapter *adapter;
     BOOL ret;
@@ -1830,6 +1832,14 @@ BOOL WINAPI NtUserEnumDisplaySettings( UNICODE_STRING *device, DWORD mode,
         return FALSE;
     }
 
+    /* Set generic fields */
+    dev_mode->dmSize = FIELD_OFFSET( DEVMODEW, dmICMMethod );
+    dev_mode->dmDriverExtra = 0;
+    dev_mode->dmSpecVersion = DM_SPECVERSION;
+    dev_mode->dmDriverVersion = DM_SPECVERSION;
+    lstrcpynW( dev_mode->dmDeviceName, wine_display_driver_w, ARRAY_SIZE(dev_mode->dmDeviceName) );
+    memset( &dev_mode->dmFields, 0, dev_mode->dmSize - FIELD_OFFSET( DEVMODEW, dmFields ) );
+
     ret = user_driver->pEnumDisplaySettingsEx( device_name, mode, dev_mode, flags );
     if (ret)
         TRACE( "device:%s mode index:%#x position:(%d,%d) resolution:%ux%u frequency:%uHz "
diff --git a/dlls/wineandroid.drv/init.c b/dlls/wineandroid.drv/init.c
index 11111111111..11111111111 100644
--- a/dlls/wineandroid.drv/init.c
+++ b/dlls/wineandroid.drv/init.c
@@ -227,11 +227,7 @@ BOOL CDECL ANDROID_EnumDisplaySettingsEx( LPCWSTR name, DWORD n, LPDEVMODEW devm
     static const WCHAR dev_name[CCHDEVICENAME] =
         { 'W','i','n','e',' ','A','n','d','r','o','i','d',' ','d','r','i','v','e','r',0 };
 
-    devmode->dmSize = offsetof( DEVMODEW, dmICMMethod );
-    devmode->dmSpecVersion = DM_SPECVERSION;
-    devmode->dmDriverVersion = DM_SPECVERSION;
     memcpy( devmode->dmDeviceName, dev_name, sizeof(dev_name) );
-    devmode->dmDriverExtra = 0;
     devmode->u2.dmDisplayFlags = 0;
     devmode->dmDisplayFrequency = 0;
     devmode->u1.s2.dmPosition.x = 0;
diff --git a/dlls/winemac.drv/display.c b/dlls/winemac.drv/display.c
index 11111111111..11111111111 100644
--- a/dlls/winemac.drv/display.c
+++ b/dlls/winemac.drv/display.c
@@ -984,11 +984,6 @@ BOOL CDECL macdrv_EnumDisplaySettingsEx(LPCWSTR devname, DWORD mode,
     init_original_display_mode();
 
     memcpy(devmode->dmDeviceName, dev_name, sizeof(dev_name));
-    devmode->dmSpecVersion = DM_SPECVERSION;
-    devmode->dmDriverVersion = DM_SPECVERSION;
-    devmode->dmSize = FIELD_OFFSET(DEVMODEW, dmICMMethod);
-    devmode->dmDriverExtra = 0;
-    memset(&devmode->dmFields, 0, devmode->dmSize - FIELD_OFFSET(DEVMODEW, dmFields));
 
     if (mode == ENUM_REGISTRY_SETTINGS)
     {
diff --git a/dlls/winex11.drv/settings.c b/dlls/winex11.drv/settings.c
index 11111111111..11111111111 100644
--- a/dlls/winex11.drv/settings.c
+++ b/dlls/winex11.drv/settings.c
@@ -471,10 +471,12 @@ BOOL CDECL X11DRV_EnumDisplaySettingsEx( LPCWSTR name, DWORD n, LPDEVMODEW devmo
 {
     static const WCHAR dev_name[CCHDEVICENAME] =
         { 'W','i','n','e',' ','X','1','1',' ','d','r','i','v','e','r',0 };
-    DEVMODEW *modes;
+    DEVMODEW *modes, *cached;
     UINT mode_count;
     ULONG_PTR id;
 
+    lstrcpyW( devmode->dmDeviceName, dev_name );
+
     if (n == ENUM_REGISTRY_SETTINGS)
     {
         if (!read_registry_settings(name, devmode))
@@ -482,7 +484,7 @@ BOOL CDECL X11DRV_EnumDisplaySettingsEx( LPCWSTR name, DWORD n, LPDEVMODEW devmo
             ERR("Failed to get %s registry display settings.\n", wine_dbgstr_w(name));
             return FALSE;
         }
-        goto done;
+        return TRUE;
     }
 
     if (n == ENUM_CURRENT_SETTINGS)
@@ -496,7 +498,7 @@ BOOL CDECL X11DRV_EnumDisplaySettingsEx( LPCWSTR name, DWORD n, LPDEVMODEW devmo
         if (!is_detached_mode(devmode))
             devmode->dmBitsPerPel = get_display_depth(id);
 
-        goto done;
+        return TRUE;
     }
 
     EnterCriticalSection(&modes_section);
@@ -527,16 +529,9 @@ BOOL CDECL X11DRV_EnumDisplaySettingsEx( LPCWSTR name, DWORD n, LPDEVMODEW devmo
         return FALSE;
     }
 
-    memcpy(devmode, (BYTE *)cached_modes + (sizeof(*cached_modes) + cached_modes[0].dmDriverExtra) * n, sizeof(*devmode));
+    cached = (DEVMODEW *)((BYTE *)cached_modes + (sizeof(*cached_modes) + cached_modes[0].dmDriverExtra) * n);
+    memcpy( &devmode->dmFields, &cached->dmFields, devmode->dmSize - FIELD_OFFSET( DEVMODEW, dmFields ) );
     LeaveCriticalSection(&modes_section);
-
-done:
-    /* Set generic fields */
-    devmode->dmSize = FIELD_OFFSET(DEVMODEW, dmICMMethod);
-    devmode->dmDriverExtra = 0;
-    devmode->dmSpecVersion = DM_SPECVERSION;
-    devmode->dmDriverVersion = DM_SPECVERSION;
-    lstrcpyW(devmode->dmDeviceName, dev_name);
     return TRUE;
 }
 
-- 
2.35.1

